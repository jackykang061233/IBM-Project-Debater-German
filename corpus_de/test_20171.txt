Ein App-Store (oder App-Marktplatz) ist eine Art digitaler Distributionsplattform für Computersoftware genannt Anwendungen, oft in einem mobilen Kontext. Apps bieten einen bestimmten Satz von Funktionen, die definitionsgemäß nicht den Betrieb des Computers selbst umfassen. Eine komplexe Software, die beispielsweise für den Einsatz auf einem Personalcomputer konzipiert ist, kann eine entsprechende App für den Einsatz auf einem mobilen Gerät haben. Heute sind Apps in der Regel auf einem bestimmten Betriebssystem – wie die zeitgenössische iOS, macOS, Windows oder Android – ausgeführt werden, aber in der Vergangenheit hatten mobile Träger ihre eigenen Portale für Apps und verwandten Medieninhalte. Grundkonzept Ein App Store ist jede digitale Storefront, die die Suche und Überprüfung von Softwaretiteln oder anderen zum Verkauf angebotenen Medien elektronisch ermöglichen soll. Kritisch bietet die Anwendungsplattform selbst eine sichere, einheitliche Erfahrung, die den elektronischen Kauf, die Entschlüsselung und Installation von Softwareanwendungen oder anderen digitalen Medien automatisiert. App-Stores organisieren in der Regel die Apps, die sie anbieten, basierend auf: die von der App bereitgestellten Funktionen (einschließlich Spiele, Multimedia oder Produktivität), das Gerät, für das die App entworfen wurde, und das Betriebssystem, auf dem die App ausgeführt wird. App-Stores nehmen in der Regel die Form eines Online-Shops, wo Benutzer durch diese verschiedenen App-Kategorien durchsuchen können, Informationen über jede App anzeigen (wie Bewertungen oder Bewertungen) und die App erwerben (einschließlich App-Kauf, falls erforderlich – viele Apps werden ohne Kosten angeboten). Die ausgewählte App wird als automatischer Download angeboten, wonach die App installiert ist. Einige App-Stores können auch ein System enthalten, um automatisch ein installiertes Programm von Geräten unter bestimmten Bedingungen zu entfernen, mit dem Ziel, den Benutzer gegen bösartige Software zu schützen. App-Stores bieten in der Regel einen Weg für Benutzer, um Bewertungen und Bewertungen zu geben. Diese Bewertungen sind nützlich für andere Benutzer, für Entwickler und für App-Store-Besitzer. Benutzer können die besten Apps basierend auf Bewertungen wählen, Entwickler erhalten Feedback, was Funktionen gelobt oder nicht geliked sind und schließlich, App-Store-Besitzer können schlechte Apps und bösartige Entwickler durch automatische Analyse der Bewertungen mit Data Mining-Techniken erkennen. Viele App-Stores werden von ihren Eigentümern kuratiert, die die Einreichungen von potenziellen Apps durch einen Genehmigungsprozess führen. Diese Apps werden für die Einhaltung bestimmter Richtlinien (z.B. für die Qualitätskontrolle und Zensur) geprüft, einschließlich der Anforderung, dass eine Provision bei jedem Verkauf einer kostenpflichtigen App erhoben wird. Einige App-Stores bieten Feedback an Entwickler: Anzahl der Installationen, Probleme im Feld (Latenz, Crash, etc.). Forscher haben neue Features für App-Stores vorgeschlagen. Zum Beispiel kann der App Store eine einzigartige diversifizierte Version der App aus Sicherheitsgründen liefern. Der App Store kann auch Überwachung und Bugfixierung orchestrieren, um Crashs in Anwendungen zu erkennen und zu reparieren. Geschichte Precursors Der Electronic AppWrapper war der erste kommerzielle elektronische Software-Verteilungskatalog, der die Verschlüsselung kollektiv verwaltet und digitale Rechte für Apps und digitale Medien bietet (Ausgabe #3 war der ursprünglich Steve Jobs bei NeXTWorld EXPO gezeigte App Store). Während ein Senior Editor im NeXTWORLD Magazine, Simson Garfinkel, bewertet The Electronic AppWrapper 4 3/4 Cubes (von 5) in seiner formalen Überprüfung. Paget's Electronic Der AppWrapper wurde im Januar 1993 als Finalist der hoch wettbewerbsfähigen InVision Multimedia Awards ausgezeichnet und wurde im Mai 1993 mit dem Best of Breed Award for Content and Information auf der NeXTWORLD Expo ausgezeichnet. Vor dem elektronischen AppWrapper, der 1992 erstmals ausgeliefert wurde, wurde die Software über Disketten oder CD-ROMs verteilt, könnte man sogar Software mit einem Webbrowser oder Befehlszeilentools herunterladen. Viele Linux-Distributionen und andere Unix-ähnliche Systeme bieten ein als Paketmanager bekanntes Tool, das es einem Benutzer ermöglicht, die auf ihren Systemen installierte Software (einschließlich sowohl Betriebssystemkomponenten als auch Software von Drittanbietern) mittels Kommandozeilen-Tools automatisch zu verwalten – neue Software (und die für seinen ordnungsgemäßen Betrieb erforderlichen Pakete) können von lokalen oder Remote-Spiegeln abgerufen und automatisch in einem einzigen Prozess installiert werden. Bemerkenswerte Paketmanager in Unix-ähnlichen Betriebssystemen haben FreeBSD Ports (1994,) pkgsrc (1997,) Debians APT (1998,) YUM und Gentoos Portage (die im Gegensatz zu den meisten Paketmanagern Pakete Pakete mit Quellcode verteilt, die automatisch kompiliert werden, anstatt ausführbar zu sein). Einige Paketmanager haben grafische Frontend-Software, die verwendet werden kann, um verfügbare Pakete zu durchsuchen und Operationen durchzuführen, wie Synaptic (die oft als Frontend für APT verwendet wird).Im Jahr 1996 hat die SUSE Linux Distribution YaST als Frontend für ihr eigenes App-Repository. Mandriva Linux hat urpmi mit GUI Frontend genannt Rpmdrake. Fedora und Red Hat Enterprise Linux hat YUM 2003 als Nachfolger von YUP (entwickelt an der Duke University for Red Hat Linux). 1997 wurde BeDepot ein Drittanbieter-App Store und Paketmanager (Software Valet) für BeOS gestartet, der bis 2001 betrieben wurde. Es wurde schließlich erworben von Be Inc. BeDepot erlaubt sowohl für kommerzielle als auch kostenlose Apps sowie die Handhabung von Updates 1998 startete die Information Technologies India Ltd (ITIL) Palmix, ein Web-basierter App-Store ausschließlich für mobile und handgeführte Geräte. Palmix verkaufte Apps für die drei großen PDA-Plattformen der Zeit: die Palm OS-basierten Palm Piloten, Windows CE-basierte Geräte und Psion Epoc Handhelds. Im Jahr 1999 startete NTT DoCoMo i-Mode, der erste integrierte Online-App-Store für Mobiltelefone, der landesweite Popularität in der japanischen Handykultur gewinnt. DoCoMo nutzte ein Umsatz-Sharing-Geschäftsmodell, mit dem Content-Autor und App-Anbieter bis zu 91 % des Umsatzes halten können. Andere Betreiber außerhalb Japans haben danach auch eigene Portale gemacht, wie Vodafone live!in 2002. Zu dieser Zeit stellte der Mobilfunkhersteller Nokia auch trägerfreie Download-Inhalte mit Club Nokia vor. Im Dezember 2001 startete Sprint PCS den Ringers & More Wireless Download Service für ihr damals neues 3G-WLAN-Netzwerk. Dies erlaubte den Abonnenten des Sprint PCS Mobilfunknetzes, Klingeltöne, Tapeten, J2ME-Anwendungen und spätere Vollmusik-Tracks an bestimmte Telefone herunterzuladen. Die Benutzeroberfläche arbeitete über einen Web-Browser auf dem Desktop-Computer, und eine Version war über das Handy zur Verfügung. Im Jahr 2002 führte die kommerzielle Linux-Distribution Linspire (damals LindowsOS – gegründet von Michael Robertson, Gründer von MP3.com) einen App-Store namens Click'N'Run (CNR). Für eine Jahresabonnementgebühr können Nutzer mit der CNR-Software eine Klick-Installation kostenloser und kostenpflichtiger Apps durchführen. Doc Searls glaubte, dass die einfache Nutzung von CNR dazu beitragen könnte, Desktop Linux zu einer machbaren Realität zu machen. 2003 stellte Handango den ersten on-device App Store für das Finden, Installieren und Kaufen von Software für Smartphones vor. App-Download und Einkauf werden direkt auf dem Gerät abgeschlossen, so dass Sync mit einem Computer nicht notwendig ist. Beschreibung, Bewertung und Screenshot sind für jede App verfügbar. 2005 Nokia 770 Internet Tablet verfügt über grafisches Frontend für sein App-Repository, um App einfach zu installieren (es basierte Maemo auf Debian). Seither hat Nokia auch Nokia Catalogs vorgestellt, später als Nokia Download bekannt,! für Symbian Smartphones, die Zugriff auf Download-Apps hatten – ursprünglich über Drittanbieter wie Handango oder Jamba! aber ab Mitte 2006 Nokia bietet über den Nokia Content Discoverer eigene Inhalte an. Die beliebte Linux-Distribution Ubuntu (auch auf Debian-Basis) stellte einen eigenen grafischen Software-Manager vor, der als Ubuntu Software Center auf der Version 9.10 als Ersatz für Synaptic bekannt ist. Auf Ubuntu 10.10, veröffentlicht im Oktober 2010, erweiterte das Software-Center über das Angebot bestehender Software aus seinen Repositories, indem es die Fähigkeit, bestimmte Apps zu erwerben (die auf Start beschränkt war auf Fluendos lizenzierten DVD-Codecs). Apple veröffentlicht iPhone OS 2.0 im Juli 2008 für das iPhone, zusammen mit dem App Store, offiziell Einführung von Drittanbieter-App-Entwicklung und Verteilung auf die Plattform. Der Dienst ermöglicht es Benutzern, neue Apps für ihr Gerät entweder über den App Store auf dem Gerät oder über den iTunes Store auf der iTunes Desktop-Software zu erwerben und herunterzuladen. Während Apple von einigen kritisiert wurde, wie es den App Store betreibt, war es ein großer finanzieller Erfolg für das Unternehmen. Die Popularität von Apple's App Store führte zum Anstieg des generischen Begriffs "app store", sowie die Einführung von gleichwertigen Marktplätzen durch konkurrierende mobile Betriebssysteme: der Android Market (später umbenannt auf Google Play) gestartet neben der Veröffentlichung des ersten Android-Smartphones (der HTC Dream) im September 2008, BlackBerry's App World gestartet im April 2009, sowie Nokia's Ovi Store und Microsofts Start Windows Marketplace. "App Store" Marke Aufgrund seiner Popularität wurde der Begriff "App-Store" (erst vom Electronic AppWrapper verwendet und später von Apple's App Store für iOS-Geräte populär) häufig als generische Marke verwendet, um sich auf andere Distributionsplattformen ähnlicher Art zu beziehen. Apple behauptete Markenansprüche über den Satz und reichte 2008 eine Markenregistrierung für "App Store" ein.Im Jahr 2011 verklagte Apple sowohl Amazon.com (die den Amazon Appstore für Android-basierte Geräte betreibt) als auch GetJar (der seit 2004 seine Dienste angeboten hat) für Markenverletzung und falsche Werbung bezüglich der Verwendung des Begriffs "App Store" auf ihre Dienste. Microsoft eingereicht mehrere Einwände gegen Apples Versuch, den Namen als Marke zu registrieren, da es bereits ein generisches Wort. Im Januar 2013 lehnte ein Gericht der Vereinigten Staaten Apples Markenansprüche gegen Amazon ab. Der Richter entschied, dass Apple keine Beweise vorgelegt hatte, dass Amazon versucht hatte, "die Website von Apple oder Werbung nachzuahmen" oder mitgeteilt, dass sein Service "die Eigenschaften und Qualitäten, die die Öffentlichkeit von den Apple APP STORE und / oder Apple-Produkten zu erwarten gekommen ist ". Im Juli 2013 fiel Apple seinen Fall. Siehe auch Software Repository Elektronischer Handel Digitale Verteilung in Videospielen Vergleich der mobilen Betriebssysteme App Store Optimierung Liste der Android App Stores Liste der mobilen Software Distribution Plattformen App Store (iOS/iPadOS,) iOS App-Zulassungen CydiaGoogle Play Amazon Appstore Aptoide Cafe Bazaar F-Droid GetJar Itch.io Opera Mobile Store MiKandi XDA Labs Microsoft Store Desktop Software Distribution Plattformen AppStream Chrome Web Store Mac App Store, Apple TV App Store Microsoft Store Setapp Steam Ubuntu Software Center == Referenzen = In der Informatik wird ein regelbasiertes System verwendet, um Wissen zu speichern und zu manipulieren, um Informationen nützlich zu interpretieren. Es wird oft in künstlichen Intelligenz Anwendungen und Forschung verwendet. Normalerweise wird der Begriff Regelbasiertes System auf Systeme angewendet, die human- oder kuratierte Regelsätze beinhalten. Regelbasierte Systeme, die mit automatischer Regeldifferenz, wie zum Beispiel regelbasiertes maschinelles Lernen, gebaut werden, werden normalerweise von diesem Systemtyp ausgeschlossen. Anwendungen Ein klassisches Beispiel für ein regelbasiertes System ist das Domain-spezifische Expertensystem, das Regeln verwendet, um Abzüge oder Entscheidungen zu treffen. Zum Beispiel könnte ein Expertensystem einem Arzt helfen, die richtige Diagnose basierend auf einer Gruppe von Symptomen zu wählen, oder wählen Sie taktische Bewegungen, um ein Spiel zu spielen. Regelbasierte Systeme können verwendet werden, um lexische Analyse zur Erstellung oder Interpretation von Computerprogrammen oder in der natürlichen Sprachverarbeitung durchzuführen. Regelbasierte Programmierung versucht, Ausführungsanweisungen aus einer Anfangsgruppe von Daten und Regeln abzuleiten. Dies ist ein indirekteres Verfahren als das, was von einer zwingenden Programmiersprache verwendet wird, die Ausführungsschritte sequentiell auflistet. Baugewerbe Ein typisches regelbasiertes System hat vier Grundkomponenten: Eine Liste von Regeln oder Regelbasis, die eine bestimmte Art von Wissensbasis ist. Ein Inferenz-Engine oder semantischer Vernunfter, der aufgrund der Wechselwirkung von Eingabe und Regelbasis Informationen oder Wirkung nimmt. Der Dolmetscher führt ein Produktionssystemprogramm durch folgendes Match-Resolve-act-Zyklus aus: Match: In dieser ersten Phase werden die linken Seiten aller Produktionen auf den Inhalt des Arbeitsspeichers abgestimmt. Infolgedessen wird ein Konfliktsatz erzielt, der aus Veranlassungen aller zufriedenen Produktionen besteht. Eine sofortige Produktion ist eine geordnete Liste von Arbeitsspeicherelementen, die die linke Seite der Produktion zufriedenstellt. Konfliktlösung: In dieser zweiten Phase wird eine der Produktionszeitpunkte im Konfliktsatz zur Ausführung gewählt. Wenn keine Produktionen zufrieden sind, stoppt der Dolmetscher. Act: In dieser dritten Phase werden die in der Konfliktauflösungsphase ausgewählten Aktionen der Produktion ausgeführt. Diese Aktionen können den Inhalt des Arbeitsspeichers ändern. Am Ende dieser Phase kehrt die Ausführung in die erste Phase zurück. Vorübergehender Arbeitsspeicher. Eine Benutzerschnittstelle oder eine andere Verbindung zur Außenwelt, durch die Eingangssignale empfangen und gesendet werden. Siehe auch Regelbasierte Programmierung Expertensysteme Rewriting RuleML TK Solver Liste der regelbasierten Sprachen Lernen Klassifikatorsystem Regelbasiertes maschinelles Lernen Regelbasierte Modellierung == Referenzen ==