Freenet ist eine Peer-to-Peer-Plattform für censorship-resistente Kommunikation. Es verwendet einen dezentralen verteilten Datenspeicher, um Informationen zu erhalten und zu liefern, und hat eine Reihe von kostenlosen Software für die Veröffentlichung und Kommunikation im Web, ohne Angst vor Zensur. Sowohl Freenet als auch einige der dazugehörigen Tools wurden ursprünglich von Ian Clarke entworfen, der das Ziel von Freenet definierte, Redefreiheit im Internet mit starkem Anonymitätsschutz zu gewährleisten. Der verteilte Datenspeicher von Freenet wird von vielen Drittanbieter-Programmen und Plugins verwendet, um Mikroblogging und Media Sharing, anonyme und dezentrale Version Tracking, Blogging, ein generisches Vertrauen für dezentrale Spam Widerstand, Shoeshop für die Verwendung von Freenet über Sneakernet, und vieles mehr. Geschichte Der Ursprung von Freenet kann auf das Studentenprojekt von Ian Clarke an der University of Edinburgh zurückverfolgt werden, das er im Sommer 1999 als Abschlusserfordernis abschloss. Ian Clarkes daraus entstandener unveröffentlichter Bericht "Ein verteiltes dezentrales Informationsspeicher- und -abrufsystem" (1999) bildete die Grundlage für das in Zusammenarbeit mit anderen Forschern verfasste Halbbuch "Freenet: A Distributed Anonymous Information Storage and Retrieval System" (2001). Laut CiteSeer wurde es 2002 zu einem der am häufigsten zitierten Informatikartikel. Forscher schlugen vor, dass Freenet die Anonymität im Internet bereitstellen kann, indem kleine verschlüsselte Snippets von Inhalten gespeichert werden, die auf den Computern seiner Nutzer verteilt werden und nur über Zwischenrechner miteinander verbunden werden, die Inhalte aufrufen und zurückschicken, ohne den Inhalt der vollständigen Datei zu kennen, ähnlich wie Router auf den Internet-Road-Paketen, ohne etwas über Dateien zu wissen – außer Freenet hat Cache, eine Schicht starker Verschlüsselung und keine Abhängigkeit von zentralisierten Strukturen. Dadurch können Nutzer anonym veröffentlichen oder verschiedene Arten von Informationen abrufen. Freenet wurde seit 2000 kontinuierlich weiterentwickelt. Freenet 0.7, veröffentlicht am 8. Mai 2008, ist eine wichtige Neuschrift mit einer Reihe grundlegender Änderungen. Die grundlegendste Veränderung ist die Unterstützung für den Darknet-Betrieb. Version 0.7 bot zwei Betriebsmodi an: einen Modus, in dem er nur mit Freunden verbindet, und einen Opennet-Modus, in dem er mit jedem anderen Freenet-Benutzer verbunden ist. Beide Modi können gleichzeitig ausgeführt werden. Wenn ein Benutzer auf reines Darknet-Betrieb umschaltet, wird Freenet sehr schwierig von außen zu erkennen. Die für den Darknet-Modus geschaffene Transportschicht ermöglicht die Kommunikation über eingeschränkte Strecken, wie sie üblicherweise in Netznetzen zu finden sind, solange diese Verbindungen einer kleinen Weltstruktur folgen. Andere Modifikationen umfassen das Umschalten von TCP auf UDP, die UDP Lochstanzen zusammen mit einer schnelleren Übertragung von Nachrichten zwischen Peers im Netzwerk ermöglicht. Freenet 0.7.5, veröffentlicht am 12. Juni 2009, bietet eine Vielzahl von Verbesserungen über 0.7 Diese umfassen reduzierte Speichernutzung, schnellere Ein- und Abruf von Inhalten, signifikante Verbesserungen an der FProxy-Web-Schnittstelle, die für das Surfen von Freesites verwendet wird, und eine Vielzahl von kleineren Bugfixes, Leistungssteigerungen und Usability Verbesserungen. Version 0.7.5 auch mit einer neuen Version des Windows-Installationsgerätes ausgeliefert. Ab dem Bau 1226, veröffentlicht am 30. Juli 2009, Funktionen, die geschrieben wurden, umfassen erhebliche Sicherheitsverbesserungen gegen beide Angreifer, die auf das Netzwerk wirken und physische Beschlagnahme des Computers, der den Knoten führt. Ab dem Bau 1468, veröffentlicht am 11. Juli 2015, stoppte der Freenet-Kern mit der db4o-Datenbank und legte die Grundlage für eine effiziente Schnittstelle zum Web of Trust-Plugin, das Spam Widerstand bietet. Freenet war schon immer kostenlose Software, aber bis 2011 benötigte es Benutzer Java zu installieren. Dieses Problem wurde dadurch gelöst, dass Freenet mit OpenJDK kompatibel ist, einer kostenlosen und offenen Source-Implementierung der Java Platform. Am 11. Februar 2015 erhielt Freenet den SUMA-Award für "Schutz gegen Gesamtüberwachung". Features und Benutzeroberfläche Freenet diente als Modell für den japanischen Peer zu Peer-Datei-Sharing-Programme Winny, Share und Perfect Dark, aber dieses Modell unterscheidet sich von p2p-Netzwerken wie Bittorrent und Emule. Freenet trennt die zugrunde liegende Netzwerkstruktur und das Protokoll davon, wie Nutzer mit dem Netzwerk interagieren; so gibt es eine Vielzahl von Möglichkeiten, auf Inhalte im Freenet-Netzwerk zuzugreifen. Am einfachsten ist über FProxy, die mit der Knotensoftware integriert ist und eine Webschnittstelle zum Inhalt im Netzwerk bereitstellt. Mit FProxy kann ein Benutzer Freesites durchsuchen (Websites, die normale HTML- und verwandte Tools verwenden, deren Inhalte jedoch nicht auf einem traditionellen Webserver innerhalb von Freenet gespeichert werden). Die Web-Schnittstelle wird auch für die meisten Konfigurations- und Knotenverwaltungsaufgaben verwendet. Durch die Verwendung von separaten Anwendungen oder Plugins, die in die Node-Software geladen werden, können Benutzer auf andere Weise mit dem Netzwerk interagieren, wie Foren ähnlich wie Web-Foren oder Usenet oder Schnittstellen ähnlicher wie herkömmliche P2P-Dateienharing-Schnittstellen. Während Freenet eine HTTP-Schnittstelle für das Surfen von Freesites bietet, ist es kein Proxy für das World Wide Web; Freenet kann verwendet werden, um nur die Inhalte zuzugreifen, die zuvor in das Freenet-Netzwerk eingefügt wurden. Auf diese Weise, es ist ähnlicher Tor's Zwiebel-Dienste als anonyme Proxy-Software wie Tor's Proxy. Freenets Fokus liegt auf freier Sprache und Anonymität. Dadurch wirkt Freenet an bestimmten Stellen, die (direkt oder indirekt) mit dem Anonymitätsteil in Zusammenhang stehen, unterschiedlich. Freenet versucht, die Anonymität beider Personen zu schützen, die Daten in das Netzwerk einfügen (uploading) und die Daten aus dem Netzwerk abrufen (downloaden). Im Gegensatz zu Dateifreigabesystemen besteht keine Notwendigkeit, dass der Uploader nach dem Upload einer Datei oder einer Gruppe von Dateien im Netzwerk bleibt. Stattdessen werden während des Upload-Prozesses die Dateien in Stücke zerlegt und auf einer Vielzahl anderer Computer im Netzwerk gespeichert. Beim Herunterladen werden diese Stücke gefunden und wieder zusammengebaut. Jeder Knoten im Freenet-Netzwerk trägt Speicherplatz zum Halten von Dateien und Bandbreiten bei, die er verwendet, um Anfragen von seinen Kollegen zu leiten. Als direktes Ergebnis der Anonymitätsanforderungen verbindet sich der Inhalte anfordernde Knoten in der Regel nicht direkt mit dem Knoten, der es hat; stattdessen wird die Anfrage über mehrere Vermittlungsstellen geleitet, von denen keiner weiß, welcher Knoten die Anfrage gemacht hat oder welche er hatte. Dadurch ist die gesamte Bandbreite, die das Netzwerk benötigt, um eine Datei zu übertragen, höher als in anderen Systemen, was zu langsameren Übertragungen führen kann, insbesondere für selten aufgerufene Inhalte. Seit Version 0.7, Freenet bietet zwei verschiedene Sicherheitsstufen: Opennet und Darknet. Mit Opennet verbinden sich Benutzer mit beliebigen anderen Benutzern. Mit Darknet verbinden sich Benutzer nur mit Freunden, mit denen sie zuvor öffentliche Schlüssel ausgetauscht haben, benannte Knoten-Referenzen. Beide Modi können zusammen verwendet werden. Die Gründer von Content Freenet argumentieren, dass die wahre Meinungsfreiheit nur mit der wahren Anonymität einhergeht und dass die vorteilhaften Verwendungen von Freenet ihre negativen Verwendungen überwiegen. Ihre Ansicht ist, dass freie Rede an sich nicht im Widerspruch zu einer anderen Betrachtung steht – die Information ist nicht das Verbrechen. Freenet versucht, die Möglichkeit jeder Gruppe zu entfernen, die ihre Überzeugungen oder Werte auf irgendwelche Daten impliziert. Obwohl viele Staaten die Kommunikation in unterschiedlichem Maße zensieren, teilen sie alle eine Gemeinsamkeit darin, dass ein Körper entscheiden muss, welche Informationen Zensur und welche Informationen zu erlauben. Was für eine Gruppe von Menschen akzeptabel sein kann, kann als beleidigend oder sogar gefährlich für eine andere betrachtet werden. Im Wesentlichen soll Freenet sicherstellen, dass niemand entscheiden darf, was akzeptabel ist. Berichte über die Nutzung von Freenet in autoritären Nationen sind aufgrund der Natur der Ziele von Freenet schwierig zu verfolgen. Eine Gruppe, Freenet China, nutzte die Einführung der Freenet-Software für chinesische Benutzer ab 2001 und verteilt sie innerhalb Chinas durch E-Mails und auf Festplatten nach der Website der Gruppe wurde von den chinesischen Behörden auf dem Festland blockiert. Es wurde berichtet, dass im Jahr 2002 Freenet China hatte mehrere tausend engagierte Benutzer. Freenet opennet Verkehr wurde jedoch in China um die 2010er blockiert. Technisches Design Das Freenet-Datei-Sharing-Netzwerk speichert Dokumente und ermöglicht es ihnen später durch einen zugehörigen Schlüssel abzurufen, wie es jetzt mit Protokollen wie HTTP möglich ist. Das Netzwerk ist sehr überlebensfähig. Das System hat keine zentralen Server und unterliegt nicht der Kontrolle einer einzelnen Person oder Organisation, einschließlich der Designer von Freenet. Die Codebase-Größe beträgt über 192.000 Zeilen Code. Auf Freenet gespeicherte Informationen werden über das Netzwerk verteilt und auf mehreren verschiedenen Knoten gespeichert. Die Verschlüsselung von Daten und die Weiterleitung von Anfragen macht es schwierig, herauszufinden, wer Inhalte in Freenet eingefügt hat, der diese Inhalte angefordert hat oder wo der Inhalt gespeichert wurde. Dies schützt die Anonymität der Teilnehmer und erschwert auch die Zensur spezifischer Inhalte. Der Inhalt wird verschlüsselt gespeichert, so dass es auch für den Betreiber eines Knotens schwierig ist, zu bestimmen, was auf diesem Knoten gespeichert ist. Dies bietet plausible Deniability, und in Kombination mit der Anfrage-Relaising bedeutet, dass sichere Hafengesetze, die Dienstleister schützen, auch Freenet-Knotenbetreiber schützen können. Bei der Frage nach dem Thema deferieren Freenet-Entwickler die EFF-Diskussion, die besagt, dass nichts filtern kann, eine sichere Wahl ist. Verteilte Speicherung und Cache von Daten Wie Winny, Share and Perfect Dark, sendet Freenet nicht nur Daten zwischen Knoten, sondern speichert sie tatsächlich, als riesige verteilte Cache. Um dies zu erreichen, ordnet jeder Knoten einige Menge Speicherplatz an, um Daten zu speichern; dies ist durch den Knotenoperator konfigurierbar, ist aber typischerweise mehrere GB (oder mehr). Dateien auf Freenet werden in der Regel in mehrere kleine Blöcke aufgeteilt, mit doppelten Blöcken erstellt, um Redundanz zu bieten. Jeder Block wird unabhängig behandelt, was bedeutet, dass eine einzelne Datei Teile auf vielen verschiedenen Knoten gespeichert haben kann. Der Informationsfluss in Freenet unterscheidet sich von Netzwerken wie eMule oder BitTorrent; in Freenet: Ein Benutzer, der eine Datei teilen oder eine Freesite aktualisieren möchte, fügt die Datei "zum Netzwerk" ein Nach Beendigung des Einfügens ist der Veröffentlichungsknoten frei, da die Datei im Netzwerk gespeichert wird. Es bleibt für andere Benutzer verfügbar, ob der ursprüngliche Veröffentlichungsknoten online ist. Für den Inhalt ist kein einziger Knoten verantwortlich, sondern er wird an viele verschiedene Knoten repliziert. Zwei Vorteile dieses Designs sind hohe Zuverlässigkeit und Anonymität. Informationen bleiben auch dann verfügbar, wenn der Publisher-Knoten offline geht und anonym über viele Hosting-Knoten als verschlüsselte Blöcke verteilt wird, nicht über ganze Dateien. Der wesentliche Nachteil des Speicherverfahrens besteht darin, dass kein Knoten für einen Datenbruch verantwortlich ist. Wenn ein Stück von Daten nicht für einige Zeit abgerufen wird und ein Knoten immer neue Daten, wird es die alten Daten irgendwann fallen, wenn sein zugewiesener Speicherplatz vollständig verwendet wird. Auf diese Weise neigt Freenet dazu, Daten zu vergessen, die nicht regelmäßig abgerufen werden (siehe auch Effekt). Während Benutzer Daten in das Netzwerk einfügen können, gibt es keine Möglichkeit, Daten zu löschen. Aufgrund der anonymen Natur von Freenet ist der ursprüngliche Veröffentlichungsknoten oder Eigentümer eines beliebigen Datenstücks unbekannt. Die einzige Möglichkeit, Daten zu entfernen, ist, wenn Benutzer sie nicht anfordern. Netzwerk Typischerweise führt ein Host-Computer im Netzwerk die Software, die als Knoten fungiert, und es verbindet sich mit anderen Hosts, die dieselbe Software betreiben, um ein großes verteiltes, variables Netzwerk von Peer-Knoten zu bilden. Einige Knoten sind Endbenutzerknoten, von denen Dokumente angefordert und den menschlichen Benutzern präsentiert werden. Andere Knoten dienen nur der Routendaten. Alle Knoten kommunizieren identisch miteinander – es gibt keine dedizierten Clients oder Server". Es ist nicht möglich, dass ein Knoten einen anderen Knoten mit Ausnahme seiner Kapazität eingibt und die mit einem Schlüssel verbundenen Daten abruft. Dies ist anders als die meisten anderen P2P-Netzwerke, in denen Knotenadministratoren ein Verhältnissystem verwenden können, wo Benutzer eine bestimmte Menge von Inhalten teilen müssen, bevor sie herunterladen können. Freenet kann auch als kleines Weltnetz angesehen werden. Das Freenet-Protokoll soll in einem Netzwerk komplexer Topologie wie dem Internet (Internet Protocol) verwendet werden. Jeder Knoten weiß nur über einige andere Knoten, die er direkt erreichen kann (ihre konzeptionellen Nachbarn), aber jeder Knoten kann ein Nachbar zu jedem anderen sein; keine Hierarchie oder andere Struktur ist vorgesehen. Jede Nachricht wird durch das Netzwerk geleitet, indem sie von Nachbar zu Nachbar, bis sie ihr Ziel erreicht. Da jeder Knoten eine Nachricht an einen Nachbar weitergibt, weiß er nicht, ob der Nachbar die Nachricht an einen anderen Knoten weiterleitet, oder ist das endgültige Ziel oder die ursprüngliche Quelle der Nachricht. Dies soll die Anonymität von Nutzern und Verlegern schützen. Jeder Knoten hält einen Datenspeicher, der Dokumente enthält, die mit Schlüsseln verbunden sind, und eine Routing-Tabelle, die Knoten mit Datensätzen ihrer Leistung beim Abruf verschiedener Schlüssel verknüpft. Protokoll Das Freenet-Protokoll verwendet ein Schlüssel-basiertes Routing-Protokoll, ähnlich wie verteilte Hash-Tabellen. Der Routing-Algorithmus hat sich in Version 0.7 deutlich geändert. Vor der Version 0.7, Freenet verwendet einen heuristischen Routing-Algorithmus, wo jeder Knoten hatte keinen festen Standort, und Routing basierte auf, auf dem Knoten einen Schlüssel am nächsten der Schlüssel gedient wurde (in Version 0.3) oder die geschätzt wird, um es schneller zu bedienen (in Version 0.5) In beiden Fällen wurden manchmal neue Verbindungen zu nachgeschalteten Knoten (d.h. dem Knoten, der auf die Anfrage antwortete) hinzugefügt, wenn Anträge erfolgreich waren, und alte Knoten wurden in zuletzt verwendeter Reihenfolge (oder etwas in der Nähe davon) verworfen. Oskar Sandbergs Forschung (bei der Entwicklung von Version 0.7) zeigt, dass diese "Wegfaltung" kritisch ist, und dass ein sehr einfacher Routing-Algorithmus genügen wird, vorausgesetzt es gibt Pfadfaltung. Nachteilig daran ist, dass es für einen Angreifer sehr einfach ist, Freenet-Knoten zu finden und mit ihnen zu verbinden, weil jeder Knoten ständig versucht, neue Verbindungen zu finden. In Version 0.7 unterstützt Freenet sowohl Opennet (ähnlich den alten Algorithmen, aber einfacher), als auch Darknet (alle Knotenverbindungen werden manuell eingerichtet, so dass nur Ihre Freunde die IP-Adresse Ihres Knotens kennen). Darknet ist weniger bequem, aber viel sicherer gegen einen entfernten Angreifer. Diese Änderung erforderte große Änderungen im Routing-Algorithmus. Jeder Knoten hat einen Ort, der eine Zahl zwischen 0 und 1 ist. Wenn ein Schlüssel angefordert wird, überprüft zunächst der Knoten den lokalen Datenspeicher. Wenn es nicht gefunden wird, wird die Hash des Schlüssels in eine andere Zahl im gleichen Bereich verwandelt, und die Anfrage wird an den Knoten weitergeleitet, dessen Lage am nächsten ist. Dies geht weiter, bis einige Anzahl von Hopfen überschritten wird, es gibt keine Knoten mehr zu suchen, oder die Daten werden gefunden. Wenn die Daten gefunden werden, wird diese auf jedem Knoten entlang des Pfades geätzt. Es gibt also keinen Quellknoten für einen Schlüssel, und der Versuch, zu finden, wo er gerade gespeichert ist, wird dazu führen, dass er breiter geätzt wird. Im Wesentlichen wird derselbe Prozess verwendet, um ein Dokument in das Netzwerk einzufügen: Die Daten werden nach dem Schlüssel weitergeleitet, bis es aus Hopfen läuft, und wenn kein vorhandenes Dokument mit demselben Schlüssel gefunden wird, wird es auf jedem Knoten gespeichert. Wenn ältere Daten gefunden werden, werden die älteren Daten propagiert und an den Originator zurückgegeben und die Insert-Collides". Aber das funktioniert nur, wenn die Standorte auf die richtige Weise gebündelt werden. Freenet geht davon aus, dass die Darknet (eine Untergruppe des globalen sozialen Netzwerks) ein kleines Weltnetzwerk ist und Knoten ständig versuchen, Standorte (unter Verwendung des Metropolis-Hastings-Algorithmus) zu wechseln, um ihre Entfernung zu ihren Nachbarn zu minimieren. Wenn das Netzwerk tatsächlich ein kleines Netzwerk ist, sollte Freenet die Daten relativ schnell finden; idealerweise in der Reihenfolge von O ( [ l o g ( n ) ] 2 ) \{displaystyle O\left(\left[log\left(n\right)\right]{2}\right hops in Big O notation. Sie garantiert jedoch nicht, dass Daten überhaupt gefunden werden. Schließlich wird entweder das Dokument gefunden oder die Obergrenze überschritten. Der Terminal-Knoten sendet eine Antwort, die seinen Weg zurück zum Originator entlang der durch die Datensätze der Zwischenknoten anhängiger Anfragen angegebenen Route macht. Die Zwischenknoten können das Dokument auf dem Weg zwischenspeichern. Neben dem Speichern von Bandbreite, macht dies auch Dokumente schwerer zu zensieren, da es keinen "Source-Knoten" gibt. Zunächst werden die Standorte in Darknet zufällig verteilt. Dies bedeutet, dass das Routing von Anfragen im Wesentlichen zufällig ist. In Opennet-Verbindungen werden durch eine Verbindungsanforderung hergestellt, die eine optimierte Netzwerkstruktur bietet, wenn das bestehende Netzwerk bereits optimiert ist. So werden die Daten in einem neu gestarteten Freenet etwas zufällig verteilt. Als Standort-Swappen (auf Darknet) und Pfad-Falten (auf Opennet) Fortschritt werden Knoten, die in der Nähe sind, zunehmend enge Standorte haben, und Knoten, die weit weg sind, werden entfernte Standorte haben. Daten mit ähnlichen Schlüsseln werden auf demselben Knoten gespeichert. Das Ergebnis ist, dass das Netzwerk selbstorganisieren wird in eine verteilte, geclusterte Struktur, in der Knoten tendenziell Datenelemente halten, die in Schlüsselräumen nahe sind. Es wird wahrscheinlich mehrere solcher Cluster im gesamten Netzwerk geben, jedes bestimmte Dokument wird mehrmals repliziert, je nachdem, wie viel es verwendet wird. Dies ist eine Art "spontaner Symmetriebruch", bei dem ein zunächst symmetrischer Zustand (alle Knoten, die gleich sind, mit zufälligen Initialschlüsseln für einander) zu einer höchst asymmetrischen Situation führt, wobei Knoten auf Daten spezialisiert werden, die eng verwandte Schlüssel haben. Es gibt Kräfte, die dazu neigen, Cluster zu verursachen (geteilte Näherungsdaten verbreiten sich im gesamten Netzwerk), und Kräfte, die dazu neigen, Cluster aufzubrechen (lokales Caching von häufig verwendeten Daten). Diese Kräfte werden je nachdem, wie oft Daten verwendet werden, unterschiedlich sein, so dass selten genutzte Daten auf nur wenigen Knoten liegen, die sich auf die Bereitstellung von Daten spezialisiert haben, und häufig verwendete Elemente werden im gesamten Netzwerk weit verbreitet. Diese automatische Spiegelung wirkt den Zeiten entgegen, in denen der Webverkehr überlastet wird, und aufgrund des intelligenten Routings eines reifen Netzes sollte ein Netz der Größe n nur log(n) Zeit benötigen, um ein Dokument im Durchschnitt abzurufen. Schlüssel Schlüssel sind Hasen: Es gibt keinen Begriff der semantischen Nähe, wenn man von Schlüsselnähe spricht. Daher wird es keine Korrelation zwischen Schlüsselnähe und ähnlicher Popularität von Daten geben, wie es sein könnte, wenn Schlüssel eine semantische Bedeutung zeigen, so dass Engpässe durch populäre Themen verursacht vermieden werden. Auf Freenet, dem Content Hash Key (CHK) und dem Signed Subspace Key (SSK) gibt es zwei Hauptarten von Tasten. Ein Subtyp von SSKs ist der Updatable Subspace Key (USK), der die Versionierung ergänzt, um eine sichere Aktualisierung von Inhalten zu ermöglichen. Eine CHK ist eine SHA-256 Hash eines Dokuments (nach Verschlüsselung, die selbst von der Hash des Klartextes abhängt) und somit kann ein Knoten überprüfen, ob das zurückgegebene Dokument korrekt ist, indem es es es hasht und die Verdauung gegen den Schlüssel überprüft. Dieser Schlüssel enthält das Fleisch der Daten auf Freenet. Es trägt alle binären Datenbausteine für den an den Client zu liefernden Inhalt zur Neumontage und Entschlüsselung. Die CHK ist einzigartig in der Natur und bietet tampersichere Inhalte. Ein Hostile-Knoten, der die Daten unter einem CHK ändert, wird sofort vom nächsten Knoten oder dem Client erkannt. CHKs reduzieren auch die Redundanz der Daten, da die gleichen Daten die gleiche CHK haben und wenn mehrere Seiten die gleichen großen Dateien referenzieren, können sie sich auf die gleiche CHK beziehen. SSKs basieren auf der Public-key-Kryptographie. Derzeit verwendet Freenet den DSA-Algorithmus. Unter SSKs eingefügte Dokumente werden vom Inserter signiert, und diese Signatur kann von jedem Knoten überprüft werden, um sicherzustellen, dass die Daten nicht verfälscht werden. SSKs kann verwendet werden, um eine überprüfbare pseudonyme Identität auf Freenet zu etablieren und mehrere Dokumente von einer einzigen Person sicher einfügen zu lassen.Dateien, die mit einem SSK eingefügt werden, sind effektiv unveränderlich, da das Einfügen einer zweiten Datei mit demselben Namen Kollisionen verursachen kann. USKs lösen dies durch Hinzufügen einer Versionsnummer zu den Schlüsseln, die auch für die Bereitstellung der Update-Benachrichtigung für als Lesezeichen in der Web-Schnittstelle registrierte Schlüssel verwendet wird. Ein weiterer Subtyp der SSK ist der Keyword Signed Key, oder KSK, in dem das Schlüsselpaar standardmäßig aus einer einfachen, human lesbaren Saite erzeugt wird. Das Einfügen eines Dokuments mit einem KSK ermöglicht es, das Dokument abzurufen und zu entschlüsseln, wenn und nur, wenn der Requester den human lesbaren String kennt; dies ermöglicht es, bequemere (aber weniger sichere) URIs für Benutzer zu verweisen. Skalierbarkeit Ein Netzwerk soll skalierbar sein, wenn seine Leistung sich nicht verschlechtert, auch wenn das Netzwerk sehr groß ist. Die Skalierbarkeit von Freenet wird ausgewertet, aber ähnliche Architekturen wurden logarithmisch skaliert. Diese Arbeit deutet darauf hin, dass Freenet Daten in O finden kann ( log 2 Kommentare n ) \{displaystyle O(\log ^{2}n) Hopfen auf einem kleinen Welt-Netzwerk (das sowohl Opennet- als auch Darknet-Style Freenet-Netzwerke umfasst), wenn das Caching ignoriert, das die Skalierbarkeit für populäre Inhalte verbessern könnte. Diese Skalierbarkeit ist jedoch ohne ein sehr großes Netzwerk schwer zu testen. Darüber hinaus machen die Sicherheitsmerkmale, die Freenet innehat, eine detaillierte Leistungsanalyse (einschließlich der Dinge so einfach wie die Bestimmung der Größe des Netzes) schwierig, genau zu tun. Ab sofort ist die Skalierbarkeit von Freenet noch zu testen. Darknet versus Opennet Ab Version 0.7 unterstützt Freenet sowohl Darknet- als auch Opennet-Verbindungen. Opennet-Verbindungen werden automatisch von Knoten mit opennet aktiviert, während Darknet-Verbindungen manuell zwischen Benutzern, die sich kennen und vertrauen, hergestellt werden. Freenet-Entwickler beschreiben das Vertrauen, das benötigt wird, als "nicht ihren Freenet-Knoten knacken". Opennet-Verbindungen sind einfach zu bedienen, aber Darknet-Verbindungen sind sicherer gegen Angreifer im Netzwerk und können es für einen Angreifer (z.B. eine unterdrückende Regierung) schwieriger machen, sogar festzustellen, dass ein Benutzer Freenet an erster Stelle läuft. Die Kerninnovation in Freenet 0.7 soll ein global skalierbares Darknet ermöglichen, das (zumindest theoretisch) Millionen von Nutzern unterstützt. Bisherige Darknets, wie z.B. WASTE, wurden auf relativ kleine getrennte Netzwerke beschränkt. Die Skalierbarkeit von Freenet wird dadurch ermöglicht, dass menschliche Beziehungen dazu neigen, kleine Weltnetze zu bilden, eine Eigenschaft, die genutzt werden kann, um kurze Wege zwischen zwei Personen zu finden. Die Arbeit basiert auf einer Rede in DEF CON 13 von Ian Clarke und schwedischem Mathematiker Oskar Sandberg. Darüber hinaus ist der Routing-Algorithmus in der Lage, über eine Mischung von Opennet- und Darknet-Verbindungen zu routieren, so dass Menschen, die nur wenige Freunde mit dem Netzwerk haben, die Leistung von ausreichend Verbindungen erhalten, während noch einige der Sicherheitsvorteile von Darknet-Verbindungen erhalten. Dies bedeutet auch, dass kleine Darknets, bei denen einige Benutzer auch Opennet-Verbindungen haben, vollständig in das gesamte Freenet-Netzwerk integriert sind, sodass alle Benutzer auf alle Inhalte zugreifen können, ob sie Opennet, Darknet oder eine Hybride der beiden ausführen, mit Ausnahme von Darknet-Taschen, die nur von einem einzigen Hybridknoten verbunden sind. Werkzeuge und Anwendungen Im Gegensatz zu vielen anderen P2P-Anwendungen Freenet bietet keine umfassende Funktionalität. Freenet ist modular und verfügt über eine API namens Freenet Client Protocol (FCP) für andere Programme, um Dienste wie Nachrichtenkarten, Dateifreigabe oder Online-Chat zu implementieren. Communication Freenet Messaging System (FMS)FMS wurde entwickelt, um Probleme mit Frost wie die Ablehnung von Service-Angriffen und Spam zu lösen. Benutzer veröffentlichen Vertrauenslisten, und jeder Benutzer lädt Nachrichten nur aus Identitäten, denen sie vertrauen, und Identitäten, die von Identitäten, denen sie vertrauen, vertraut sind. FMS wird anonym entwickelt und kann von der FMS Freesite innerhalb von Freenet heruntergeladen werden. Es hat keine offizielle Website auf dem normalen Internet. Es verfügt über zufällige Postverzögerung, Unterstützung für viele Identitäten und eine Unterscheidung zwischen dem Vertrauen der Posts eines Benutzers und der Vertrauensliste. Es wird in C+ geschrieben und ist eine separate Anwendung von Freenet, die das Freenet Client Protocol (FCP) zur Schnittstelle mit Freenet verwendet. Frost enthält Unterstützung für bequeme Dateifreigabe, aber sein Design ist inhärent verletzlich für Spam und Denial von Service-Angriffen. Frost kann von der Frost-Homepage auf Sourceforge oder von der Frost Freesite in Freenet heruntergeladen werden. Es wird nicht von den Freenet-Entwicklern unterstützt. Frost ist in Java geschrieben und ist eine separate Anwendung von Freenet. Sone Sone bietet eine einfachere Schnittstelle, die von Facebook mit öffentlichen anonymen Diskussionen und Bildgalerien inspiriert wird. Es bietet eine API zur Steuerung von anderen Programmen wird auch verwendet, um ein Kommentarsystem für statische Websites im regulären Internet zu implementieren. Utilities jSite jSite ist ein Tool, um Webseiten hochzuladen. Es behandelt Schlüssel und verwaltet das Hochladen von Dateien. Infocalypse Infocalypse ist eine Erweiterung für das verteilte Revisionskontrollsystem Mercurial. Es verwendet eine optimierte Struktur, um die Anzahl der Anfragen zu minimieren, um neue Daten abzurufen, und ermöglicht die Unterstützung eines Repositorys, indem die meisten Teile der Daten sicher neu geladen werden, ohne dass die privaten Schlüssel des Eigentümers erforderlich sind. LibrariesFCPLib FCPLib (Freenet Client Protocol Library) zielt darauf ab, ein plattformübergreifendes natives zusammengestelltes Set von C++-basierten Funktionen zum Speichern und Abrufen von Informationen an und von Freenet zu sein. FCPLib unterstützt Windows NT/2K/XP, Debian, BSD, Solaris und macOS.lib-pyFreenet lib-pyFreenet enthüllt Freenet-Funktionalität für Python-Programme. Infocalypse verwendet es. Schwachstellen Die Strafverfolgungsbehörden haben behauptet, dass sie Freenet opennet erfolgreich infiltriert haben, um die Nutzer zu deanonymisieren, aber es wurden keine technischen Details gegeben, um diese Behauptungen zu unterstützen. Ein Bericht sagte: "Eine Kinderuntersuchung konzentrierte sich auf...[den Verdächtigen], als die Behörden das Online-Netzwerk überwachen, Freenet". Ein anderer Bericht, der darauf hindeutet, dass Verhaftungen auf den BlackICE-Projektlecks basieren können, die für die Verwendung von schlechtem Mathematik und für die Verwendung einer falsch berechneten falschen Positivrate und eines falschen Modells verfallen sind. Ein Gerichtsfall in der Peel-Region von Ontario, Kanada R. v. Owen, 2017 ONCJ 729 (CanLII), illustriert, dass die Strafverfolgung tatsächlich eine Präsenz haben, nachdem sich die Regionalpolizei Peel befindet, die illegales Material auf dem Freenet-Netzwerk heruntergeladen hatte. Die Gerichtsentscheidung weist darauf hin, dass eine kanadische Anwaltskanzlei Knoten betreibt, die modifizierte Freenet-Software betreiben, in der Hoffnung zu bestimmen, wer illegales Material verlangt. Routing Table Insertion (RTI) Attack. Notability Freenet hat in der Mainstream-Presse, einschließlich Artikeln in der New York Times, und Abdeckung auf CNN, 60 Minuten II, der BBC, The Guardian und anderswo, erhebliche Öffentlichkeitsarbeit gehabt. Freenet erhielt die SUMA-Award 2014 für "Schutz gegen Gesamtüberwachung". Freesite Eine Freesite ist eine Website, die im Freenet-Netzwerk gehostet wird. Da es nur statische Inhalte enthält, kann es keine aktiven Inhalte wie serverseitige Skripte oder Datenbanken enthalten. Freesites werden in HTML codiert und unterstützen so viele Funktionen wie der Browser, der die Seite betrachtet, erlaubt; es gibt jedoch einige Ausnahmen, in denen die Freenet-Software Teile des Codes entfernen wird, der verwendet werden kann, um die Identität der Person, die die Seite betrachtet (eine Seite Zugriff auf etwas im Internet, zum Beispiel.) Siehe auch Peer-to-peer Web Hosting Rendezvous Protokoll Anonymous P2P Crypto-anarchism Cypherpunk Verteiltes Dateisystem Informationsfreiheit Friend-to-friend Comparable software Entropy (anonymous data store) (Discontinued) GNUnetI2P Java Anon Proxy (auch bekannt als JonDonym)Osiris Perfect Dark – erstellt auch einen verteilten Datenspeicher, der von anonymen Knoten geteilt wird; den Nachfolger zu Share, der selbst der Nachfolger von Winny ist. Tahoe-LAFS ZeroNet Referenzen Weiter lesen Clarke, I;. Miller, S.G; Hong, T.W; Sandberg, O;. Wiley, B. (2002)." Kostenloser Ausdruck online mit Freenet schützen" (PDF). IEEE Internet Computing.6 (1:) 40–9.CiteSeerX 10.1.1.21.9143.doi:10.1109/4236.978368. Von Krogh, Georg; Spaeth, Sebastian; Lakhani, Karim R (2003). "Community, Join und Spezialisierung auf Open Source Software Innovation: Eine Fallstudie" (PDF). Forschungspolitik.32 (7:) 1217–41. doi:10.1016/S0048-7333(03)00050-7.Dingledine, Roger; Freedman, Michael J;. Molnar, David (2001). " Das kostenlose Haven-Projekt: Verteilt Anonymous Storage Service". Designing Privacy Enhancing Technologies. Vortragshinweise in Informatik.pp.67–95.CiteSeerX 10.1.1.420.478.doi:10.1007/3-540-44702-4_5.ISBN 978-3-540-41724-8. Clarke, Ian; Sandberg, Oskar; Wiley, Brandon; Hong, Theodore W. (2001). " Freenet: Ein Distributed Anonymous Information Storage and Retrieval System". Designing Privacy Enhancing Technologies. Vortragshinweise in Informatik.pp.46–66.CiteSeerX 10.1.1.26.4923.doi:10.1007/3-540-44702-4_4.ISBN 978-3-540-41724-8. Riehl, Damien A. (2000)." Peer-to-Peer Distribution Systems: Wird Napster, Gnutella und Freenet ein Copyright Nirvana oder Gehenna erstellen?". The William Mitchell Law Review.27 (3:) 1761.Roemer, Ryan (Fall 2002). "Die digitale Evolution: Freenet und die Zukunft des Urheberrechts im Internet". UCLA Journal of Law and Technology.5.Sun, Xiaoqing; Liu, Baoxu; Feng, Dengguo (2005)."Analysis of Next Generation Routing of Freenet". Computertechnik (17:) 126–8.Hui Zhang; Goel, Ashish; Govindan, Ramesh (2002). " Mit dem Small-world-Modell zur Verbesserung der Freenet-Performance". INFOCOM 2002: Twenty-First Annual Joint Conference of the IEEE Computer and Communications Societies.3.S.1228–37.CiteSeerX 10.1.1.74.7011.doi:10.1109/INFCOM.2002.1019373.ISBN 978-0-7803-7476-8. S2CID 13182323. Offizielle Website