Der MD5-Notfall ist ein kryptographischer Bruch, aber immer noch weit verbreitet verwendeter Hash-Funktion, der einen 128-bit-Wert produziert. MD5 wurde ursprünglich als kryptographische Funktion konzipiert, aber es wurde festgestellt, dass sie unter erheblichen Schwachstellen leiden. Es kann noch als Checksum verwendet werden, um die Integrität der Daten zu überprüfen, aber nur gegen unbeabsichtigte Korruption. Sie eignet sich auch für andere nicht verschlüsselte Zwecke, zum Beispiel für die Bestimmung der Aufteilung für einen bestimmten Schlüssel in einer geteilten Datenbank. MD5 wurde 1991 von Ronald Rivest entworfen, um eine frühere MD4 zu ersetzen und wurde 1992 als RFC 1321 bezeichnet. Eine grundlegende Anforderung jeder Kryptographiefunktion ist, dass es rechnerisch unwiderruflich sein sollte, zwei getrennte Nachrichten zu finden, die denselben Wert haben. MD5 missachtet diese Anforderung katastrophal; solche Kollisionen können in Sekunden auf einem normalen Heimcomputer gefunden werden. Am 31. Dezember 2008 kam das CMU Software Engineering Institute zu dem Schluss, dass MD5 im Wesentlichen „schlüsselt und ungeeignet für eine weitere Nutzung“ war. Die Schwachstellen von MD5 wurden im Bereich, die am häufigsten von den Flammen- Schadprogrammen im Jahr 2012. Seit 2019 werden die MD5 trotz der gut dokumentierten Mängel und Abwertung durch Sicherheitsexperten weiterhin weit verbreitet. Geschichte und Rechenanalyse MD5 sind eine von Professor Ronald Rivest des MIT (Rivest, 1992) entworfene Reihe von nachrichtenverdaulichen Algorithmen. In einer Analysearbeit wurde darauf hingewiesen, dass MD5s Vorgänger MD4 wahrscheinlich unsicher war, dass Rivest 1991 als sicherer Ersatz konzipiert wurde. () Hans Dobbertin hat in der Tat später Schwächen in MD4 festgestellt.) 1993 gab Den Boer und Bosselaers ein frühes, wenn auch beschränktes Ergebnis, eine Pseudo-Kollision der MD5-Komprimierungsfunktion zu finden; dies ist zwei verschiedene Paraphierungsvektoren, die einen identischen Verdauungseffekt erzeugen. Dobbertin kündigte 1996 eine Kollision der Kompressionsfunktion von MD5 an (Dobbertin, 1996). Obwohl dies keinen Angriff auf die volle MD5-Bestandsfunktion war, reichte es für Kryptographen, einen Ersatz zu empfehlen, wie SHA-1 oder RIPEMD-160. Größe des Hash-Werts (128 Bits) ist klein genug, um einen Geburtstagsangriff zu erwägen. MD5CRK war ein verteiltes Projekt, das im März 2004 gestartet wurde, um zu zeigen, dass MD5 praktisch unsicher ist, indem es einen Kollisionsfall mit einem Geburtstagsfall entdeckte. MD5CRK wurde kurz nach 17 August 2004 beendet, als die Kollisionen für den vollen MD5 von Xiaoyun Wang, Dengguo Gu, Xuejia Lai und Hongbo Yu.Dieir-Analysen auf einem IBM p690-Cluster angekündigt wurden. Arjen Lintra, Xiaoyun Wang und Benne de Weger haben am 1. März 2005 den Bau von zwei X.509 Zertifikaten mit verschiedenen öffentlichen Schlüsseln und dem gleichen MD5-Wert bewiesen, einem nachweisbaren praktischen Kollisionsfall. Der Bau umfasste private Schlüssel für öffentliche Schlüssel. Einige Tage später hat Vlastimil Klima einen verbesserten Algorithmus beschrieben, der in einigen Stunden auf einem einzigen Notebook-Computer MD5 Kollisionen herstellen kann. Klima hat am 18. März 2006 einen Algorithmus veröffentlicht, der eine Kollision innerhalb einer Minute auf einem einzigen Notebook-Computer finden könnte, wobei er eine Methode nutzt, die er Tunneln anruft. Verschiedene MD5-bezogene RFC wurden veröffentlicht. Im Jahr 2009 nutzte die USA Cyber-Mission einen MD5-Wert ihrer Missionserklärung als Teil ihres offiziellen Symbols. Am 24. Dezember 2010 kündigten Tao Xie und Dengguo den ersten veröffentlichten einheitlichen Block (512-bit) MD5-Konflikt an. Xie und SIL haben aus Gründen der Sicherheit die neue Anfallmethode nicht offen gelegt. Sie stellten eine Herausforderung für die Kryptographie-Gemeinschaft dar, die dem ersten Finder eines anderen 64-byte-Konflikts vor dem 1. Januar 2013 eine Belohnung in Höhe von 10.000 USD bietet. Marc Stevens reagierte auf die Herausforderung und veröffentlichte kollidierende Einzelblocknachrichten sowie den Baugorithmus und die Quellen. 2011 wurde ein Informationsaustausch RFC 6151 genehmigt, um die Sicherheitsbedenken in MD5 und HMAC-MD5 zu aktualisieren. Sicherheit Die Sicherheit der MD5 ist stark beeinträchtigt. Ein Kollisionsfall besteht aus Kollisionen innerhalb von Sekunden auf einem Computer mit einem 2,6 GHz 4 Prozessor (Komplexität von 224.1). Darüber hinaus gibt es auch einen ausgewählten Kollisionsfall, der innerhalb von Sekunden eine Kollision für zwei Vorleistungen mit bestimmten Vorsätzen herbeiführen kann, und zwar unter Verwendung von externen Rechner-Hardware (Komplexität 239). Die Fähigkeit, Kollisionen zu finden, wurde durch die Verwendung von Off-the-frame-Prozessoren stark unterstützt. Auf einem Evonik-Prozessor 8400GS Grafikprozess können 16-18 Millionen Asche pro Sekunde berechnet werden. Skoda 3800 Ultra kann mehr als 200 Millionen Hektar pro Sekunde berechnen. In verschiedenen Situationen wurden diese Waffen und Kollisionsattacken in der Öffentlichkeit nachgewiesen, einschließlich kollidierender Dokumente und digitaler Zertifikate. Seit 2015 wurde MD5 bewiesen, dass es immer noch sehr weit verbreitet ist, vor allem durch Sicherheitsforschungs- und Programm-Unternehmen. Seit 2019 wurde ein Viertel der weit verbreiteten Nutzungssysteme gemeldet, um die MD5 für das Passieren zu verwenden. Überblick über Sicherheitsfragen 1996 wurde bei der Gestaltung der MD5 ein Fehler festgestellt. Obwohl es damals nicht als tödliche Schwäche angesehen wurde, haben Kryptographen die Verwendung anderer Algorithmen, wie beispielsweise SHA-1, empfohlen, die sich inzwischen als anfällig erwiesen haben. 2004 wurde gezeigt, dass MD5 keine Kollisionsresistent ist. MD5 ist nicht für Anwendungen wie SSL-Zertifikate oder digitale Signaturen geeignet, die sich auf dieses Eigentum für digitale Sicherheit verlassen. Im Jahr 2004 entdeckten Forscher auch gravierendere Mängel in MD5 und bezeichneten einen möglichen Kollisionsfall - eine Methode, um ein Paar von Inputs zu schaffen, für das MD5 identische Prüfer produziert. Im Jahr 2005, 2006 und 2007 wurden weitere Fortschritte erzielt. Im Dezember 2008 nutzte eine Gruppe von Forschern diese Technik, um die Gültigkeit von SSL-Zertifikaten zu verfälschen. Seit 2010 betrachtet das CMU Software Engineering Institute die MD5 "schlüsselnd und ungeeignet für eine weitere Nutzung" und die meisten Anwendungen der US-Regierung erfordern nun die 2-Familie von Fähigkeiten. Im Jahr 2012 wurden die Schwachstellen in MD5 zur Fälschung einer digitalen Signatur von Microsoft ausgenutzt. Verletzungen 1996 wurden Kollisionen in der Kompressionsfunktion von MD5 festgestellt, und Hans Dobbertin schrieb im technischen RSA-Newsletter, "Der vorgelegte Angriff bedroht noch nicht die praktischen Anwendungen von MD5, aber es ist ziemlich nah ... in der Zukunft MD5 sollte nicht mehr umgesetzt werden ... wenn eine Kollisionsresistente Funktion erforderlich ist. " Im Jahr 2005 konnten die Forscher Paaren von PostScript-Dokumenten und X.509-Zertifikaten mit demselben Hash erstellen. Später in diesem Jahr schrieb MD5's Designer Ron Rivest, dass "md5 und sha1 beide eindeutig zerbrochen werden (im Hinblick auf Kollisionen). Am 30. Dezember 2008 gab eine Gruppe von Forschern bekannt, die im 25. Chaos-Kommunikationskongress angekündigt wurden, wie sie MD5 Kollisionen verwendet hatten, um eine Zwischenbescheinigung zu erstellen, die bei der Prüfung durch die MD5 als legitim erschien. Die Forscher nutzten ein PS3-Cluster im EPFL in Lausanne, die Schweiz, um ein normaler SSL-Zertifikat zu ändern, das von RapidSSL in ein Arbeits- CA-Zertifikat für diesen Emittenten ausgestellt wurde, das dann verwendet werden könnte, um andere Bescheinigungen zu erstellen, die als legitim gelten und von RapidSSL ausgestellt werden könnten. KIT, die Emittenten von RapidSSL-Zertifikaten, gaben an, dass sie die Ausstellung neuer Zertifikate unter Verwendung von MD5 gestoppt haben, da ihr Checksum-Algorithmus für das schnelle SSL-System erst einmal bekannt gegeben wurde. Verisign ging zwar zurück, um bestehende Zertifikate, die mit MD5 unterzeichnet wurden, aber ihre Antwort wurde von den Autoren der Nutzung als angemessen angesehen (Alexander Sotirov, Marc Stevens, Jacob Appelbaum, Arjen Lintra, David Molnar, Dag Arne Osvik und Benne de Weger). Bruce Schneier schrieb des Anschlags, dass "wir bereits wussten, dass MD5 eine zerbrochene Funktion ist" und "keinen sollte mehr MD5 verwenden". Die SSL-Forscher schrieb: „Unsere gewünschte Wirkung ist, dass die Zertifizierungsbehörden die Verwendung von MD5 bei der Ausstellung neuer Zertifikate stoppen werden. Wir hoffen auch, dass die Nutzung von MD5 in anderen Anwendungen ebenfalls überprüft wird. Laut Microsoft verwendeten die Autoren der Flammenprogramme 2012 einen MD5-Konflikt, um ein Windows-Code-Signing-Zertifikat zu erstellen. MD5 verwendet den wirtschaftlichen und sozialen Bau, so dass zwei Vorräte mit demselben Hash gebaut werden können, kann ein gemeinsames suffix zu beiden hinzugefügt werden, um die Kollision wahrscheinlicher als gültige Daten durch die Anwendung zu akzeptieren. Darüber hinaus ermöglichen die aktuellen Kollisionsprüfverfahren eine willkürliche Prävalenz: Ein Angriffer kann zwei aufeinander abgestimmte Dateien erstellen, die beide mit denselben Inhalten beginnen. Jeder Angriffsgegner muss zwei aufeinander abgestimmte Dateien erstellen, ist eine Musterdatei mit einem 128-byte-Datenblock, die auf einer 64-byte-Grenze ausgerichtet ist, die durch den Kollisions-Algorithmus frei verändert werden kann. Beispiel MD5-Konflikt mit den beiden in 6 Bits unterschiedlichen Botschaften: d131dd02c5eec6eec4 693d9a0698aff95c 2fcab58712467eab 4004583eb8967f89 55ad340f4b302588832571415a 085125e8f7d70882c0299db280c88823e325c88823e23e315f Beide produzieren die MD5 h 79054025255fla1a26e4bc422aef54eb4. Der Unterschied zwischen den beiden Proben ist, dass das führende Glied in jedem Nilock-Schrott verstopft wurde. Zum Beispiel beträgt der 20te (offset 0x13) in der oberen Probe, 0x87, 10111 in binär. Die Spitze in der Spitze (auch das führende Element in der ersten Nibble) ist 00000111, das ist 0x07, wie in der unteren Probe gezeigt. Später wurde es auch möglich, Kollisionen zwischen zwei Akten mit getrennt ausgewählten Vorsätzen herzustellen. Diese Technik wurde 2008 bei der Erstellung des Rogue CA-Zertifikats verwendet. Anton Kuznetsov wurde 2014 eine neue Variante paralleler Kollisionssuche vorgeschlagen, die eine Kollision in 11 Stunden auf einem Computercluster ermöglichte. Vorsorge April 2009 wurde ein Angriff gegen MD5 veröffentlicht, der die Widerstandsfähigkeit der MD5 vorbildet. Dieser Anschlag ist nur theoretischer Art, mit einer rechnerischen Komplexität von 2123.4 für das vollständige Vorbild. Anwendungen MD5 wurden in der Software-Welt weit verbreitet, um zu gewährleisten, dass eine übertragene Datei intakt ist. Zum Beispiel bieten die Dateiserver oft einen vorgeworfenen MD5 (bekannt als md5sum) für die Dateien an, so dass ein Nutzer die Überprüfung der heruntergeladenen Datei vergleichen kann. Die meisten unixbasierten Betriebssysteme umfassen MD5 Summenversorgungseinrichtungen in ihren Vertriebspaketen; Windows-Nutzer können die integrierte Funktion Get-LineHash verwenden, ein Microsoft-Versorger installieren oder Anwendungen von Dritten verwenden. Android ROMs verwenden diese Art von Checksum. Da es einfach ist, MD5 Kollisionen zu erzeugen, ist es möglich, dass die Person, die die Datei erstellt hat, eine zweite Datei mit demselben Checksum erstellen kann, so dass diese Technik nicht vor einigen Formen des Schad-Rauchens geschützt werden kann. In einigen Fällen kann das Checksum nicht vertrauenswürdig sein (z.B. wenn es über denselben Kanal wie die heruntergeladene Datei erlangt wurde), in dem Fall MD5 nur eine fehlerbehaftete Funktionalität bieten kann: Es wird ein korruptes oder unvollständiges Herunterladen erkennen, das wahrscheinlicher wird, wenn größere Dateien heruntergeladen werden. Historisch wurde MD5 verwendet, um einen One-way-Hor eines Passworts zu speichern, oft mit Schlüsselbereichen. NIST enthält MD5 in ihrer Liste der empfohlenen Asche für die Speicherung von Passwörtern. MD5 wird auch im Bereich der elektronischen Entdeckung verwendet, um für jedes Dokument, das während des Prozesss der rechtlichen Entdeckung ausgetauscht wird, eine einzigartige Kennnummer zu geben. Diese Methode kann verwendet werden, um das seit Jahrzehnten während des Austauschs von Papierdokumenten verwendete Bates-Marke-Nummernsystem zu ersetzen. Wie oben, sollte diese Nutzung aufgrund der Lockerung von Kollisionsangriffen abgeschreckt werden. Algorithm MD5 entwickelt eine variable Botschaft in eine feste Output von 128 Bits. Die Eingangsbotschaft wird in die Schlagzeilen von 512-bit- Blöcken (sixteen 32-bit Wörter) zerbrochen; die Botschaft ist gestrichen, so dass ihre Länge durch 512 verändert ist. Nachstehend wird die Abwrackung wie folgt durchgeführt: zuerst, ein einziges Stück, 1, wird am Ende der Botschaft zur Verfügung gestellt. Man folgt so viele Nullen, die erforderlich sind, um die Länge der Botschaft bis zu 64 Bits weniger als eine Reihe von 512 zu erreichen. Die verbleibenden Bits werden mit 64 Bits gefüllt, die die Länge der ursprünglichen Botschaft, modulo 264. Der wichtigste MD5-Algorithmus betreibt einen 128-bit-Staat, der in vier 32-bit- Wörter unterteilt ist, die A, B, C und D verdichtet werden. Diese werden zunächst auf bestimmte feste Konstanten eingeführt. Der Hauptgorithmus nutzt dann jede 512-bit-Nachrichtenblock, um den Zustand zu ändern. Die Verarbeitung eines Kommunikationsblocks besteht aus vier ähnlichen Stufen, Terminrunden; jede Runde besteht aus 16 ähnlichen Operationen, die auf einer nicht-linearen Funktion F, modularer Ergänzung und linken Rotation basieren. Abbildung 1 veranschaulicht eine Operation innerhalb einer Runde. Es gibt vier mögliche Funktionen; eine andere wird in jeder Runde verwendet: F (B , C , D ) = ( B  B C )  B ( B  D D ) G ( B , C , D ) = ( B  D D )  C (C ¬   )  D (C     ) H ( B , C , D }  C C } ( B, C , D) = B B B B B  B B  B B  B B  B  B B  B B  B,  B  B  B B  B,  B  B  B  D  D  D  D  D  D  D  D ) ) ) ) ) ) )  D  D  D  D (B\vee \neg D})\end{aligned ., . ,   , ¬ , eth \oplus ,\wedge ,\vee ,\neg } Denote des XOR und, OR und NICHT. Pseudocode Laut diesem Algorithmus wird der MD5h berechnet. Alle Werte befinden sich im kleinen Bundesstaat. {dx, 0b, 2,3 {d, s) Initialisierungsvariablen: var int a0 := 0x67452301 /A var int b0 := 0xefcdab89 / B var int c0 := 0x98bade /C var int d0 :=0x10325476 /D /Pre-Verarbeitung: Ein 1 Bit Append 1 Bit auf Botschaft / Nichtice: Die Beiträge von Geneten gelten als Bits. /Pre-Verarbeitung: Abfederung mit Null-Append 0 Bits inkel 448 (mod 512) / Notice: Die beiden oben genannten Schritte werden in einfacherer Weise umgesetzt, die nur mit vollständiger Wirkung funktionieren: Append 0x80 // und Paß mit 0x00, so dass die Botschaftslänge in den Nummern 56 (mod 64). Lesen Sie die ursprüngliche Länge in Bits 264, um die Botschaft in aufeinander folgenden 512-bit-Barunks zu senden: für jeden 512-bit-Bunk der gestrichenenen Botschaft kunk in sechsteen 32-bit Worte M[j,] 0 ≤ j ≤ 15 // Initialize Hash-Wert für diesen Chunk: var int A := a0 var int B:= var int C:=c0 var int D := d0 / Main Loop: für i von 0 bis 63 do var int F, g, wenn 0 ≤ 15, dann F := (B und C) oder (nicht B) und D) g:= i anderen, wenn 16 ≤ i ≤ 31, dann F (:=D und B) oder (nicht D) und C) g (:=5 xi + 1) Mod 16 andere, wenn 32 ≤ i ≤ 47 dann F :=B xor C xor D g (:=3 xi + 5) Mod 16 Andere, wenn 48 ≤ 63, dann F := C xor (B oder (not D) g (:=7 xi) 16, modul Bejagung der unterstehenden Definitionen eines,b,c,d F := F + A K[g] + M[g] + M[g] muss ein 32-bit Block A: D : C= B= B= B= B= B= 2,8 Ergänzen Sie dieses Buch bisher: a0 :=a0 + A b0 := b0 + B c0 := c0 + C d0 := d0 + D end for var char G[16] := a0 Append b0 Append c0 Append d0 // (Output ist in kleinen Bundesstaaten) statt der Formulierung aus dem ursprünglichen RFC 1321 zeigt, kann folgende für eine verbesserte Effizienz verwendet werden (wird verwendet werden, wenn die Montagesprache genutzt wird – ansonsten wird der Pool den oben genannten Code in der Regel optimieren). Da jede Berechnung von einer anderen in diesen Formulierungen abhängig ist, ist dies oft langsamer als die oben genannte Methode, bei der die nand/and parallel eingesetzt werden können: ( 0 ≤ i ≤ 15): F := D xor (B und C xor D)(16 ≤ i ≤ 31): F :=C xor (D und B xor C) MD5 Die 128-bit (16-byte) MD5 ist in der Regel als Sequenz von 32 hexadecimal digitalisiert. Nachstehend wird ein Beitrag von 43-byte ASCII und die entsprechende MD5 h geleistet: MD5("Die schnellen Füchse über den lazy Dog" =9e107d9d372bb6826bd81d3542a419d6 Selbst eine geringfügige Änderung der Botschaft wird (mit überwältigender Wahrscheinlichkeit) aufgrund der Lawinenwirkung zu einem meist anderen Hash führen.Zum Beispiel wird eine Frist zum Ende der Strafe hinzugefügt: MD5("Der schnelle Braune Füchsen über den lazy Hund)=". e4d909c290d0pr1ca068ffaddf22cbd0 Die Spitze der Null-Länge ist: MD5)(“ = d41d8cd98f00b204e9800998ecf8427e Der MD5-Algorithmus ist für Nachrichten, die aus einer Reihe von Bits bestehen, angegeben; es ist nicht auf mehrere von acht Bits (Schokoben, Bytes) beschränkt. Manche MD5-Durchführungen wie md5sum könnten auf Octets beschränkt werden, oder sie könnten die Übermittlung von Nachrichten einer ursprünglich unbefristeten Länge nicht unterstützen. Umsetzungen nachstehend sind eine Liste von Kryptographiebibliotheken, die MD5 unterstützen: Botan Bouncy Castle cryptlib+ Libgschlüssel Nettle OpenSSL Siehe auch den Vergleich der Kryptografenfunktions-Sicherheitsübersicht HashClash MD5 ged5deepmd5sum MD6-1-Referenzen weiter Lesen Berson, Thomas A. (1992)."Differenzieller Grippe-Analyse 232 mit Anwendungen zu MD5. EUROCRYPT.pp.71–80.ISBN 3-540-56413-6. Bert den Boer; Antoon Bosselaers (1993). "Collisions for the Kompressionsfunktion of MD5". Fortschritte in der Kryptologie – EUROCRYPT ’93. EUROCRYPT.Berlin; London: Springer.pp.293–304.ISBN AM3-540-57600-6.Hans Dobbertin, Grippeanalyse von MD5 Komprim. Ankündigung im Internet, Mai 1996."CiteSeerX.Citeseer.psu.edu.Retrieved 9 August 2010Dobbertin, Hans (1996). " Status von MD5 nach einem jüngsten Angriff." Cryptobytes.2 (2).Xiaoyun Wang; Hongbo Yu (2005). " How to Break MD5 and other Hash Funktions (PDF). EUROCRYPT.ISBN 3-540-25910-4.Archived vom Original (PDF) am 21. Mai 2009. August 2008 Externe Links W3C-Empfehlung zu MD5