ASCII ( (listen) ASS-kee,) abgekürzt von American Standard Code for Information Interchange, ist ein Zeichencodierungsstandard für elektronische Kommunikation. ASCII-Codes stellen Text in Computern, Telekommunikationsgeräten und anderen Geräten dar. Die meisten modernen Charakter-Kodierungssysteme basieren auf ASCII, obwohl sie viele zusätzliche Zeichen unterstützen. Die Internet Assigned Numbers Authority (IANA) bevorzugt den Namen US-ASCII für diese Zeichencodierung. ASCII ist einer der IEEE Meilensteine. Überblick ASCII wurde aus Telegrammcode entwickelt. Seine erste kommerzielle Nutzung war als sieben-Bit-Teleprinter-Code von Bell-Datendienste gefördert. Die Arbeit an der ASCII-Norm begann im Mai 1961, mit der ersten Sitzung der American Standards Association (ASA) (jetzt das American National Standards Institute oder ANSI) X3.2 Unterausschuss. Die erste Ausgabe des Standards wurde 1963 veröffentlicht, im Laufe des Jahres 1967 eine große Revision durchgeführt und 1986 sein jüngstes Update erlebt. Im Vergleich zu früheren Telegrafencodes wird vorgeschlagen, Bell-Code und ASCII wurden beide für eine bequemere Sortierung (d.h. Alphabetisierung) von Listen bestellt und zusätzliche Funktionen für andere Geräte als Teleprinter hinzugefügt. Die Verwendung von ASCII-Format für Network Interchange wurde 1969 beschrieben. Dieses Dokument wurde im Jahr 2015 formell zu einem Internet Standard erhoben. Ursprünglich auf dem englischen Alphabet basiert, kodiert ASCII 128 vorgegebene Zeichen in sieben-Bit-Integer, wie es im ASCII-Diagramm oben gezeigt wird. Ninety-five der codierten Zeichen sind bedruckbar: Dazu gehören die Ziffern 0 bis 9, Kleinbuchstaben a bis z, Großbuchstaben A bis Z und Stichsymbole. Darüber hinaus umfasste die ursprüngliche ASCII-Spezifikation 33 Nicht-Druck-Steuercodes, die mit Teletype-Maschinen stammen; die meisten davon sind nun veraltet, obwohl einige noch häufig verwendet werden, wie z.B. die Beförderungs-, Linien- und Tabcodes. Beispielsweise wäre in der ASCII-Kodierung mittels Binär 1101001 = Hexadezimal 69 (i ist der neunte Buchstabe =) Dezimal 105 der Fall i dargestellt. Geschichte Der American Standard Code for Information Interchange (ASCII) wurde unter der Schirmherrschaft eines Ausschusses der American Standards Association (ASA) namens X3 Committee, durch seinen Unterausschuss X3.2 (später X3L2) und später durch die Arbeitsgruppe X3.2.4 des Unterausschusses (jetzt INCITS) entwickelt. Die ASA wurde zum United States of America Standards Institute (USASI) und letztlich zum American National Standards Institute (ANSI). Mit den anderen eingefüllten Sonderzeichen und Steuercodes wurde ASCII als ASA X3.4-1963 veröffentlicht, wobei 28 Codepositionen ohne zugeordnete Bedeutung, für die zukünftige Standardisierung reserviert, und ein nicht zugewiesener Steuercode übrig blieb. Es gab damals eine Debatte darüber, ob es mehr Kontrollzeichen geben sollte als das Kleinbuch. Die Unentschlossenheit dauerte nicht lange: Im Mai 1963 schlug die CCITT-Arbeitsgruppe auf dem New Telegraph Alphabet vor, Kleinbuchstaben den Sticks 6 und 7 zuzuordnen, und die Internationale Organisation für Normung TC 97 SC 2 stimmte im Oktober dazu über, die Änderung in ihren Standardentwurf aufzunehmen. Die X3.2.4 Arbeitsgruppe stimmte auf ihrer Sitzung vom Mai 1963 für die Änderung der ASCII. Das Auffinden der Kleinbuchstaben in den Stäben 6 und 7 bewirkte, dass sich die Zeichen im Bitmuster vom oberen Fall durch ein einziges Bit unterscheiden, das eine vereinfachte gehäuseunempfindliche Zeichenanpassung und den Aufbau von Tastaturen und Druckern vereinfachte. Das X3-Komitee hat andere Änderungen vorgenommen, darunter auch andere neue Zeichen (die Klammer und vertikale Balkenzeichen), die einige Kontrollzeichen umbenannt haben (SOM wurde Header (SOH) und andere bewegt oder entfernt (RU wurde entfernt). ASCII wurde anschließend als USAS X3.4-1967 aktualisiert, dann USAS X3.4-1968, ANSI X3.4-1977 und schließlich ANSI X3.4-1986. ASCII-Standard: ASA X3.4-1963 ASA X3.4-1965 (genehmigt, aber nicht veröffentlicht, dennoch von IBM 2260 & 2265 Display Stationen und IBM 2848 Display Control) USAS X3.4-1967 USAS X3.4-1968 ANSI X3.4-1977 ANSI X3.4-1986ANSI X3.4-1986 ANSI 2002 (R1992) ANSI X3 Sie schlugen einen 9-Track-Standard für Magnetband vor und versuchten, mit einigen gestanzten Kartenformaten umzugehen. Design berücksichtigt Bit Breite Der X3.2 Unterausschuss konzipierte ASCII auf Basis der früheren Teleprinter-Encoding-Systeme.Wie andere Zeichencodierungen gibt ASCII eine Korrespondenz zwischen digitalen Bitmustern und Zeichensymbolen (d.h. Graphemen und Steuerzeichen) an. Damit können digitale Geräte miteinander kommunizieren und charakterorientierte Informationen wie schriftliche Sprache verarbeiten, speichern und kommunizieren. Vor der Entwicklung von ASCII umfassten die verwendeten Codierungen 26 alphabetische Zeichen, 10 numerische Ziffern und 11 bis 25 spezielle grafische Symbole. Um alle diese, und Kontrollzeichen kompatibel mit dem Comité Consultatif International Téléphonique et Télégraphique (CCITT) International Telegraph Alphabet Nr. 2 (ITA2) Standard von 1924, FIELDATA (1956) und frühen EBCDIC (1963) waren mehr als 64 Codes für ASCII erforderlich. ITA2 basierte wiederum auf dem 5-Bit-Telegrammcode, den Émile Baudot 1870 erfunden und 1874 patentiert hatte. Der Ausschuß erörterte die Möglichkeit einer Schichtfunktion (wie in ITA2), die es ermöglichen würde, mehr als 64 Codes durch einen Sechs-Bit-Code zu vertreten. In einem verschobenen Code bestimmen einige Zeichencodes die Wahl zwischen Optionen für die folgenden Zeichencodes. Es ermöglicht eine kompakte Codierung, ist aber für die Datenübertragung weniger zuverlässig, da ein Fehler bei der Übertragung des Schiebecodes typischerweise einen langen Teil der Übertragung unlesbar macht. Der Normungsausschuss entschied sich gegen Verschiebung, und so musste ASCII mindestens einen sieben-Bit-Code. Der Ausschuss betrachtete einen Acht-Bit-Code, da acht Bits (Oktetts) zwei Vier-Bit-Muster erlauben würden, zwei Ziffern mit binärcodiertem Dezimal effizient zu kodieren. Es würde jedoch verlangen, dass alle Datenübertragung acht Bits sendet, wenn sieben ausreichen könnten. Der Ausschuss stimmte dazu über, einen 7-Bit-Code zu verwenden, um die mit der Datenübertragung verbundenen Kosten zu minimieren. Da das perforierte Band damals acht Bits in einer Position aufnehmen konnte, erlaubte es gegebenenfalls auch ein Paritätsbit zur Fehlerkontrolle. Acht-Bit-Maschinen (mit Oktetten als nativer Datentyp), die keine Paritätsprüfung verwendet haben, setzen typischerweise das achten Bit auf 0. Interne Organisation Der Code selbst wurde so gemustert, dass die meisten Kontrollcodes zusammen waren und alle grafischen Codes zusammen waren, um die Identifizierung zu erleichtern. Die ersten beiden sogenannten ASCII-Sticks (32 Positionen) wurden für Steuerzeichen reserviert. Das Raumzeichen musste vor Grafiken kommen, um die Sortierung einfacher zu machen, so wurde es Position 20hex; aus dem gleichen Grund wurden viele Sonderzeichen, die häufig als Separatoren verwendet wurden, vor Ziffern platziert. Der Ausschuss beschloss, dass es wichtig war, die Großbuchstaben 64-Kennzeichen zu unterstützen, und entschied sich für die Musterung ASCII, so dass es leicht auf eine nutzbare 64-Kennzeichen-Set von grafischen Codes reduziert werden konnte, wie es in der DEC SIXBIT-Code (1963) getan wurde. Kleinbuchstaben wurden daher nicht mit Großbuchstaben vertauscht. Um Optionen für Kleinbuchstaben und andere Grafiken zur Verfügung zu halten, wurden die speziellen und numerischen Codes vor den Buchstaben angeordnet, und der Buchstabe A wurde in Position 41hex zum Entwurf des entsprechenden britischen Standards gesetzt. Die Ziffern 0–9 werden mit 011 vorfixiert, die restlichen 4 Bit entsprechen jedoch ihren jeweiligen Werten in binärer Form und machen die Umwandlung mit binärcodiertem Dezimal unkompliziert. Viele der nicht-alphanumerischen Zeichen wurden entsprechend ihrer verschobenen Position auf Schreibmaschinen positioniert; eine wichtige Feinheit ist, dass diese auf mechanischen Schreibmaschinen, nicht elektrischen Schreibmaschinen basieren. Mechanische Schreibmaschinen folgten dem Standardsatz der Remington Nr. 2 (1878), dem ersten Schreiber mit einer Schalttaste, und die verschobenen Werte von 23456789- waren "#$%_&'() – frühe Schreibmaschinen weggelassen 0 und 1, mit O (Hauptbuchstaben o) und l (kleinerer Brief L) statt, aber 1! und 0) Paare wurden Standard, sobald 0 und 1 gemeinsam wurden. So wurden in ASCII !"#$% in den zweiten Stock gelegt, Positionen 1–5, entsprechend den Ziffern 1–5 im benachbarten Stock. Die Klammern konnten jedoch nicht 9 und 0 entsprechen, da der Platz entsprechend 0 durch das Raumzeichen genommen wurde. Dies wurde durch Entfernen _ (Unterstrich) von 6 und Verschieben der verbleibenden Zeichen, die vielen europäischen Schreibmaschinen entsprechen, die die Klammern mit 8 und 9 platziert. Diese Diskrepanz von Schreibmaschinen führte zu Bit-paired-Tastaturen, insbesondere dem Teletype Model 33, das das links verschobene Layout entsprechend ASCII verwendet, nicht zu herkömmlichen mechanischen Schreibmaschinen. Elektrische Schreibmaschinen, insbesondere die IBM Selectric (1961), nutzten ein etwas anderes Layout, das auf Computern – nach dem IBM PC (1981,) vor allem Modell M (1984) – standardmäßig geworden ist und somit Verschiebungswerte für Symbole auf modernen Tastaturen nicht so genau der ASCII-Tabelle entsprechen, wie frühere Tastaturen.Die ?/pair auch stammt aus der Nr. 2 und die ,< .>-Paare wurden auf einigen Tastaturen verwendet (andere, einschließlich der Nr. 2, nicht verschoben, (komma) oder .(voller Stopp), so dass sie in Großbuchstaben ohne Rückschaltung verwendet werden konnten). ASCII spaltet jedoch die ;: Paar (Dating zu Nr. 2,) und umgeordnete mathematische Symbole (verschiedene Konventionen, allgemein -* =+) bis :* ;+ .-=Einige gemeinsame Zeichen wurden nicht enthalten, insbesondere 1⁄2 ¢, während ^ `~ als Diakritik für den internationalen Gebrauch, und <> für die Verwendung mathematisch, zusammen mit den einfachen Linienzeichen \| ( zusätzlich zu gemeinsamen ./) Das @-Symbol wurde nicht in Kontinentaleuropa verwendet, und das Komitee erwartet, dass es durch einen akzentuierten À in der französischen Variante ersetzt werden würde, so dass das @ in Position 40hex gesetzt wurde, direkt vor dem Buchstaben A.Die für die Datenübertragung wesentlichen Steuercodes waren der Beginn der Nachricht (SOM,) Ende der Adresse (EOA,) Ende der Nachricht (EOM,) Ende der Übertragung (EOT,) "Who are you?" (WRU,) Diese wurden positioniert, um den Hamming-Abstand zwischen ihren Bitmustern zu maximieren. Zeichenauftrag ASCII-Codeauftrag wird auch ASCIIbetical Order genannt. Die Spaltung der Daten erfolgt manchmal in dieser Reihenfolge und nicht in alphabetischer Reihenfolge (Bearbeitungssequenz). Die wichtigsten Abweichungen in der ASCII-Bestellung sind: Alle Großbuchstaben kommen vor Kleinbuchstaben; z.B. vor einem Digit und viele Stichmarken kommen vor Briefen Ein Zwischenauftrag wandelt Großbuchstaben in Kleinbuchstaben um, bevor ASCII-Werte verglichen werden. Zeichengruppen Kontrollzeichen ASCII behält sich die ersten 32 Codes (Zahlen 0–31 Dezimal) für Kontrollzeichen vor: Codes, die ursprünglich nicht für druckbare Informationen bestimmt sind, sondern für Steuerungsgeräte (wie Drucker), die ASCII verwenden, oder Meta-Informationen über Datenströme, wie sie auf Magnetband gespeichert sind. Das Zeichen 10 stellt z.B. die "Line Feed"-Funktion dar (die dazu führt, dass ein Drucker sein Papier voranbringt) und das Zeichen 8 den Backspace darstellt). RFC 2822 bezieht sich auf Steuerzeichen, die keinen Wagenrücklauf, Zeilenvorschub oder Weißraum als Nicht-Weißraumsteuerzeichen enthalten. Außer den Kontrollzeichen, die elementare linienorientierte Formatierung vorschreiben, definiert ASCII keinen Mechanismus zur Beschreibung der Struktur oder des Erscheinungsbildes von Text innerhalb eines Dokuments. Andere Programme wie Markup-Sprachen, Adressseite und Dokumentenlayout und Formatierung. Der ursprüngliche ASCII-Standard verwendet nur kurze beschreibende Phrasen für jeden Kontrollcharakter. Die dadurch verursachte Mehrdeutigkeit war manchmal absichtlich, z.B. wo ein Zeichen auf einem Endgerät leicht anders als auf einem Datenstrom verwendet werden würde, und manchmal versehentlich, z.B. mit der Bedeutung von Löschen". Wahrscheinlich das einflussreichste Einzelgerät zur Interpretation dieser Zeichen war das Teletype Model 33 ASR, das ein Druckterminal mit einer verfügbaren Papierbandleser/Punch-Option war. Papierband war ein sehr beliebtes Medium für langfristige Programmspeicher bis in die 1980er Jahre, weniger teuer und in gewisser Weise weniger zerbrechlich als Magnetband. Insbesondere wurden die Teletype Model 33 Maschinenzuordnungen für die Codes 17 (Control-Q, DC1, auch XON,) 19 (Control-S, DC3, auch XOFF genannt) und 127 (Delete) de facto Standards. Das Modell 33 war auch für die Beschreibung von Control-G (Code 7, BEL, d.h. hörbar auf den Bediener) buchstäblich bemerkbar, da die Einheit eine tatsächliche Glocke enthielt, die sie arrangierte, als sie ein BEL-Zeichen erhielt. Da das Keytop für den O-Schlüssel auch ein Links-Pfeil-Symbol (von ASCII-1963, das diesen Charakter hatte statt Unterstrich,) eine nicht-konforme Verwendung von Code 15 (Control-O, Shift In) als "lösche frühere Charakter" interpretiert wurde auch von vielen frühen Timesharing-Systemen angenommen, aber schließlich wurde vernachlässigt. Wenn ein mit dem automatischen Papierbandleser ausgerüsteter Teletype 33 ASR einen Control-S (XOFF, eine Abkürzung für die Aussendung) erhielt, verursachte er den Bandleser zum Stoppen; das Empfangen von Control-Q (XON, "Übertragen auf)" führte dazu, dass der Bandleser wieder aufgenommen wurde. Diese Technik wurde von mehreren frühen Computer-Betriebssystemen als Handshaking-Signalwarnung ein Absender, um die Übertragung aufgrund des bevorstehenden Überlaufs zu stoppen; es bleibt bis heute in vielen Systemen als manuelle Ausgangssteuerung Technik. Auf einigen Systemen behält Control-S seine Bedeutung, aber Control-Q wird durch eine zweite Steuerung-S ersetzt, um die Ausgabe wieder aufzunehmen. Die 33 ASR konnte auch dazu eingerichtet sein, mit Control-R (DC2) und Control-T (DC4) den Bandstempel zu starten und zu stoppen; an einigen mit dieser Funktion ausgestatteten Einheiten war die entsprechende Steuerzeichenschrift auf der Schlüsselkappe über dem Buchstaben TAPE bzw. TAPE.Löschen und Zurückräumen Der Teletype konnte den Kopf nicht rückwärts bewegen, so dass es keine Taste auf der Tastatur gesetzt, um einen BS (Rückraum) zu senden. Stattdessen gab es einen Schlüssel mit RUB OUT, der Code 127 (DEL) gesendet wurde. Der Zweck dieses Schlüssels war es, Fehler in einem handgefertigten Papierband zu löschen: der Bediener musste einen Knopf auf den Bandstanzer drücken, um ihn zu sichern, dann geben Sie den Rubout, der alle Löcher gestanzt und den Fehler durch ein Zeichen ersetzt, das ignoriert werden sollte. Teletypen wurden häufig für die weniger teuren Computer der Digital Equipment Corporation verwendet, so dass diese Systeme den verfügbaren Schlüssel und damit den DEL-Code verwenden mussten, um den vorherigen Charakter zu löschen. Aus diesem Grund schickten DEC-Video-Endgeräte (standardmäßig) den DEL-Code für den Schlüssel mit Backspace, während der Schlüssel mit Löschen eine Escape-Sequenz gesendet hat, während viele andere Terminals BS für den Backspace-Schlüssel gesendet wurden. Der Unix-Terminaltreiber konnte nur einen Code verwenden, um das vorherige Zeichen zu löschen, dies könnte auf BS oder DEL gesetzt werden, aber nicht beides, was zu einer langen Periode von Ärger, wo die Benutzer es je nach dem, was Terminal sie verwendet haben (Schalen, die Line-Editing erlauben, wie ksh, bash, und zsh, verstehen beide). Die Annahme, dass kein Schlüssel einen BS gesendet hat, verursachte Control+ H zu anderen Zwecken verwendet werden, wie z.B. der Hilfe-Prefix-Befehl in GNU Emacs. Flucht Viele der Kontrollcodes haben Bedeutungen gegeben, die ganz anders sind als ihre ursprünglichen. Das Escape-Zeichen (ESC, Code 27,) z.B. sollte ursprünglich erlauben, andere Kontrollzeichen als Literal zu senden, anstatt ihre Bedeutung zu fordern. Dies ist die gleiche Bedeutung von Flucht in URL-Kodierungen, C-Sprachzeichenfolgen und anderen Systemen, wo bestimmte Zeichen eine reservierte Bedeutung haben. Im Laufe der Zeit wurde diese Bedeutung kooptiert und wurde schließlich geändert. Ein an das Endgerät gesendetes ESC gibt in der modernen Verwendung üblicherweise den Start einer Befehlssequenz in Form eines sogenannten "ANSI Escape Code" (oder genauer gesagt ein "Control Sequence Introducer)" aus ECMA-48 (1972) und dessen Nachfolgern an, beginnend mit ESC, gefolgt von einem "[" (links-bracket) Zeichen. Ein vom Terminal gesendetes ESC wird am häufigsten als Out-of-Band-Zeichen verwendet, um eine Operation zu beenden, wie in den TECO und vi Texteditoren. In grafischen Benutzeroberflächen (GUI) und Fenstersystemen verursacht ESC in der Regel eine Anwendung, um ihren aktuellen Betrieb abzubrechen oder insgesamt zu beenden (terminieren). Ende der LinieDie inhärente Mehrdeutigkeit vieler Kontrollzeichen, kombiniert mit ihrer historischen Nutzung, hat Probleme bei der Übertragung von "plain text" Dateien zwischen Systemen geschaffen. Das beste Beispiel dafür ist das neue Netzproblem auf verschiedenen Betriebssystemen. Teletype-Maschinen erforderten, dass eine Textzeile mit beiden "Carriage Return" (die den Druckkopf zum Anfang der Zeile bewegt) und "Line Feed" (die die Papier eine Zeile ohne Bewegung des Druckkopfes voranbringt) beendet wird. Der Name "Carriage Return" ergibt sich aus der Tatsache, dass bei einem manuellen Schreiber der Wagen, der das Papier hält, bewegt wurde, während die Position, in der die Typen auf das Band geschlagen wurden, stationär blieb. Der gesamte Schlitten musste nach rechts geschoben werden, um den linken Rand des Papiers für die nächste Zeile zu positionieren. DEC-Betriebssysteme (OS/8, RT-11, RSX-11, RSTS, TOPS-10, etc.) nutzten beide Zeichen, um das Ende einer Linie zu markieren, so dass das Konsolengerät (ursprünglich Teletype Maschinen) funktionieren würde. Da die sogenannten "Glass TTYs" (später CRTs oder Terminals genannt) mitkamen, war die Konvention so gut etabliert, dass eine rückständige Kompatibilität die Fortsetzung der Konvention erforderte. Als Gary Kildall CP/M erstellte, wurde er von einigen Kommandozeilen-Schnittstellenkonventionen inspiriert, die in der RT-11 von DEC verwendet wurden. Bis zur Einführung von PC DOS im Jahre 1981 hatte IBM keine Hand dabei, weil ihre 1970er-Betriebssysteme EBCDIC anstelle von ASCII benutzten und sie auf die Eingabe- und Zeilendrucker-Ausgabe von Stempelkarten ausgerichtet waren, auf der das Konzept der Kutschenrückgabe bedeutungslos war. IBM PC DOS (auch als MS-DOS von Microsoft vermarktet) vererbt die Konvention, indem sie lose auf CP/M basiert, und Windows vererbt es von MS-DOS. Leider führt die Notwendigkeit, dass zwei Zeichen das Ende einer Zeile markieren, unnötige Komplexität und Fragen ein, wie man jeden Charakter interpretiert, wenn man allein begegnet. Zur Vereinfachung der Angelegenheiten Klartextdatenströme, einschließlich Dateien, auf Multics verwendet Zeilenfeed (LF) allein als Zeilenterminator. Unix- und Unix-ähnliche Systeme und Amiga-Systeme verabschiedeten diese Konvention von Multics. Das originale Macintosh OS, Apple DOS und ProDOS hingegen nutzten die Kutschenrückgabe (CR) allein als Line-Terminator; da Apple diese Betriebssysteme jedoch durch das Unix-basierte macOS Betriebssystem ersetzte, verwenden sie nun auch Line Feed (LF).Der Radio Shack TRS-80 benutzte auch eine einsame CR, um Linien zu beenden. Die an den ARPANET angeschlossenen Computer umfassten Maschinen mit Betriebssystemen wie TOPS-10 und TENEX mit CR-LF-Line-Endings, Maschinen mit Betriebssystemen wie Multics mit LF-Line-Endings und Maschinen mit Betriebssystemen wie OS/360, die Linien als Zeichenzahl mit den Zeichen der Linie darstellten und die EBCDIC anstelle von ASCII benutzten. Das Telnet-Protokoll definierte ein ASCII "Network Virtual Terminal" (NVT), so dass Verbindungen zwischen Hosts mit unterschiedlichen Line-End-Konventionen und Zeichensätzen durch Übertragung eines Standard-Textformats über das Netzwerk unterstützt werden können. Telnet verwendet ASCII zusammen mit CR-LF-Linienenden, und Software mit anderen Konventionen würde zwischen den lokalen Konventionen und dem NVT übersetzen. Das Dateiübertragungsprotokoll verabschiedete das Telnet-Protokoll, einschließlich der Nutzung des Netzwerk-Virtual-Terminals, zur Verwendung bei der Übertragung von Befehlen und der Übertragung von Daten im Standard-ASCII-Modus. Dies ergänzt die Komplexität der Implementierungen dieser Protokolle und anderer Netzwerkprotokolle, wie sie für E-Mail und World Wide Web verwendet werden, auf Systemen, die nicht die CR-LF-Line-End-Konvention von NVT verwenden. Ende der Datei/Stream Der PDP-6-Monitor und sein PDP-10-Nachfolger TOPS-10 nutzten Control-Z (SUB) als End-of-Datei-Anzeige für die Eingabe von einem Terminal. Einige Betriebssysteme wie CP/M verfolgt Dateilänge nur in Einheiten von Festplattenblöcken und verwendet Control-Z, um das Ende des eigentlichen Textes in der Datei zu markieren. Aus diesen Gründen wurde EOF oder End-of-file, kolloquial und konventionell als Drei-Brief-Akronym für Control-Z anstelle von SUBstitute verwendet. Der End-of-Text-Code (ETX,) auch als Control-C bekannt, war aus verschiedenen Gründen unangemessen, während Z als Steuercode verwendet wird, um eine Datei zu beenden, ist analog zu dem Alphabet und dient als sehr bequeme mnemonic Hilfe. Eine historisch häufige und noch vorherrschende Konvention nutzt die ETX-Code-Konvention, um ein Programm über einen Eingabedatenstrom zu unterbrechen und zu stoppen, in der Regel von einer Tastatur. In C-Bibliothek und Unix-Konventionen wird das Nullzeichen verwendet, um Textstrings zu beenden; solche Null-terminierten Strings können in Abkürzung als ASCIZ oder ASCIIZ bekannt sein, wobei hier Z für Null steht. Kontrollcodediagramm Andere Darstellungen können von spezialisierten Geräten verwendet werden, beispielsweise ISO 2047 Grafiken oder hexadezimale Zahlen. Druckbare Zeichen Codes 20hex bis 7Ehex, bekannt als die bedruckbaren Zeichen, repräsentieren Buchstaben, Ziffern, Pünktlichkeitszeichen und ein paar verschiedene Symbole. Insgesamt gibt es 95 bedruckbare Zeichen. Code 20hex, das Raumzeichen, bezeichnet den Raum zwischen Wörtern, wie er von der Raumleiste einer Tastatur erzeugt wird. Da das Raumzeichen als eine unsichtbare Grafik (anstelle eines Steuerzeichens) betrachtet wird, wird es in der nachstehenden Tabelle anstatt im vorherigen Abschnitt aufgeführt. Der Code 7Fhex entspricht dem nicht druckbaren Löschzeichen (DEL) und wird daher aus diesem Diagramm weggelassen; er ist im vorhergehenden Abschnittsdiagramm abgedeckt. Frühere Versionen von ASCII verwendet den Pfeil oben anstelle des Pflegers (5Ehex) und den linken Pfeil anstelle des Unterstrichs (5Fhex.) Zeichensatzpunkte, die in früheren Versionen (die Version 1963 oder der Entwurf von 1965) einen anderen Charakter darstellten, werden in Box gezeigt. Seit der Version 1963 zugewiesene Punkte, aber sonst unverändert, werden gegenüber ihren Legendenfarben leicht abgeschattet. Letter Number Punctuation Symbol Andere Undefinierte Zeichen geändert von 1963 Version oder 1965 Entwurf Verwendung ASCII wurde erstmals im Jahr 1963 als sieben-Bit-Teleprinter-Code für das TWX-Netz von American Telephone & Telegraph (TeletypeWriter eXchange) kommerziell verwendet. TWX nutzte ursprünglich das frühere Fünf-Bit ITA2, das auch vom konkurrierenden Telex-Teleprinter-System verwendet wurde. Bob Bemer stellte Features wie die Escape-Sequenz vor. Sein britischer Kollege Hugh McGregor Ross half, diese Arbeit zu populärisieren – laut Bemer, "so sehr, dass der Code, der ASCII werden sollte, zuerst den Bemer-Ross-Code in Europa genannt wurde". Aufgrund seiner umfangreichen Arbeit an ASCII, Bemer wurde "der Vater von ASCII" genannt. Am 11. März 1968 beauftragte US-Präsident Lyndon B. Johnson, alle von der Bundesregierung der Vereinigten Staaten gekauften Computer ASCII zu unterstützen, indem sie Folgendes festlegte: Ich habe auch Empfehlungen des Handelsministers [Luther H. Hodges] hinsichtlich der Normen für die Aufnahme des Standard-Codes für den Informationsaustausch über Magnetbänder und Papierbänder genehmigt, wenn sie in Computeroperationen verwendet werden.Alle Computer und zugehörigen Gerätekonfigurationen, die am und nach dem 1. Juli 1969 in das Inventar der Bundesregierung gebracht wurden, müssen die Möglichkeit haben, den Standard-Code für den Informationsaustausch und die Formate zu verwenden, die von den Standards für Magnetband und Papierband vorgegeben werden, wenn diese Medien verwendet werden. ASCII war die häufigste Zeichencodierung auf dem World Wide Web bis Dezember 2007, als UTF-8 Coding es übertraf; UTF-8 ist rückwärtskompatibel mit ASCII. Varianten und Ableitungen Als Computertechnologie auf der ganzen Welt verbreitet, entwickelten verschiedene Standards Körper und Unternehmen viele Variationen von ASCII, um den Ausdruck von nicht-englischen Sprachen zu erleichtern, die römische Alphabete verwendet. Man könnte einige dieser Variationen als "ASCII-Erweiterungen" klassifizieren, obwohl einige dieser Begriffe missbräuchlich sind, um alle Varianten darzustellen, einschließlich derjenigen, die die ASCII-Zeichenkarte im 7-Bit-Bereich nicht erhalten. Des Weiteren wurden die ASCII-Erweiterungen auch als ASCII-Mangel bezeichnet. 7-Bit-Codes Von Anfang an war ASCII nur eine von mehreren nationalen Varianten eines internationalen Charaktercode-Standards. Andere internationale Normkörper haben ratifizierte Zeichencodierungen wie ISO 646 (1967), die identisch oder fast identisch mit ASCII sind, mit Erweiterungen für Zeichen außerhalb des englischen Alphabets und Symbole außerhalb der Vereinigten Staaten, wie das Symbol für das Pfund Sterling des Vereinigten Königreichs (£). Fast jedes Land brauchte eine angepasste Version von ASCII, da ASCII die Bedürfnisse von nur den USA und einigen anderen Ländern entsprach. Zum Beispiel hatte Kanada eine eigene Version, die französische Charaktere unterstützte. Viele andere Länder entwickelten Varianten von ASCII, um nicht-englische Buchstaben (z.B. é, ñ, ß, Ł,) Währungssymbole (z.B. £, ¥,) usw. zu enthalten. Siehe auch YUSCII (Yugoslavia). Es würde die meisten Zeichen gemeinsam teilen, aber anderen lokal nützlichen Zeichen zu mehreren Code-Punkten, die für "nationale Nutzung reserviert". Die vier Jahre, die zwischen der Veröffentlichung von ASCII-1963 und der ersten Annahme einer internationalen Empfehlung im Jahre 1967 verstrichen waren, ließen ASCII die Wahlen für die nationalen Gebrauchszeichen für die Welt offenbar als de facto-Standards erscheinen, was zu Verwirrung und Unvereinbarkeit führte, sobald andere Länder ihre eigenen Aufgaben zu diesen Codepunkten gemacht haben. ISO/IEC 646 ist wie ASCII ein 7-Bit-Zeichensatz. Es stellt keine zusätzlichen Codes zur Verfügung, so dass die gleichen Codepunkte kodierten verschiedene Zeichen in verschiedenen Ländern. Ausweichcodes wurden definiert, um anzuzeigen, welche nationale Variante auf ein Textstück angewendet wurde, aber sie wurden selten verwendet, so dass es oft unmöglich war, zu wissen, mit welcher Variante zu arbeiten und daher, welche Zeichen ein Code repräsentiert, und im Allgemeinen Textverarbeitungssysteme ohnehin nur mit einer Variante zu bewältigen. Da die Klammer- und Klammerzeichen von ASCII den "nationalen Gebrauch"-Codepunkten zugeordnet wurden, die in anderen nationalen Varianten von ISO/IEC 646 verwendet wurden, musste ein deutscher, französischer oder schwedischer usw.-Programmierer mit ihrer nationalen Variante von ISO/IEC 646 anstelle von ASCII etwas wie triä aÄi erstellt = Ön schreiben und so lesen. Viele Programmierer hielten ihre Computer auf US-ASCII, so Klartext auf Schwedisch, Deutsch etc. (zum Beispiel in E-Mail oder Usenet) enthielten "{, }" und ähnliche Varianten in der Mitte der Wörter, etwas, das diese Programmierer gewöhnt. Zum Beispiel könnte ein schwedischer Programmierer, der einen anderen Programmierer schickt, der fragt, ob sie zum Mittagessen gehen sollten, "N{ jag har sm|rg}sar" als Antwort bekommen, was "Nä jag har smörgåsar" bedeutet "Nein ich habe Sandwiches". In Japan und Korea, noch ab 2020-ies, wird eine Variation von ASCII verwendet, in der der Gegenslash (5C hex) wird als ¥ (ein Yen-Zeichen, in Japan) oder TES (ein Won-Zeichen, in Korea). Dies bedeutet, dass zum Beispiel der Dateipfad C:\Users\Smith als C:¥Users¥Smith (in Japan) oder C: ECUUsersуSmith (in Korea) angezeigt wird. 8-Bit-Codes Erfinderisch, als 8-, 16- und 32-Bit (und später 64-Bit) Computer begann 12-, 18- und 36-Bit-Computer als Norm zu ersetzen, wurde es üblich, ein 8-Bit-Byte zu verwenden, um jedes Zeichen im Speicher zu speichern, was eine Möglichkeit für erweiterte, 8-Bit-Relationen von ASCII. In den meisten Fällen entwickelten sich diese als echte Erweiterungen von ASCII, wodurch das ursprüngliche Charakter-Mapping intakt blieb, aber zusätzliche Zeichendefinitionen nach den ersten 128 (d.h. 7-Bit) Zeichen hinzugefügt wurden.Zu den Kodierungen gehören ISCII (India,) VISCII (Vietnam). Obwohl diese Kodierungen manchmal als ASCII bezeichnet werden, wird wahres ASCII ausschließlich durch den ANSI-Standard definiert. Die meisten frühen Home-Computer-Systeme entwickelten ihre eigenen 8-Bit-Zeichen-Sets mit Linienzeichnung und Spiel Glyphen, und oft in einigen oder alle Kontrollzeichen von 0 bis 31 mit mehr Grafiken gefüllt. Kaypro CP/M Computer nutzten die oberen 128 Zeichen für das griechische Alphabet. Der PETSCII-Code Commodore International, der für ihre 8-Bit-Systeme verwendet wird, ist wahrscheinlich einzigartig unter Post-1970-Codes, die auf ASCII-1963 basieren, anstatt der häufigeren ASCII-1967, wie auf dem ZX-Spektrum-Computer gefunden. Atari 8-bit Computer und Galaksija Computer verwendet auch ASCII Varianten. Die IBM-PC definierte Code-Seite 437, die die Kontrollzeichen durch grafische Symbole wie lächelige Gesichter ersetzte und zusätzliche Grafikzeichen auf die oberen 128 Positionen abgebildet. Betriebssysteme wie DOS unterstützten diese Codeseiten und Hersteller von IBM PCs unterstützten sie in Hardware. Digital Equipment Corporation entwickelte das Multinational Character Set (DEC-MCS) für den Einsatz im beliebten VT220 Terminal als eine der ersten Erweiterungen für internationale Sprachen als für Blockgrafiken. Das Macintosh definierte Mac OS Roman und Postscript auch ein Set, beide enthielten sowohl internationale Buchstaben als auch typografische Pünctuationsmarken anstelle von Grafiken, mehr wie moderne Zeichensätze. Die Norm ISO/IEC 8859 (aus der DEC-MCS abgeleitet) lieferte schließlich einen Standard, den die meisten Systeme kopierten (zumindest so genau, wie sie ASCII, aber mit vielen Substitutionen kopierten). Eine beliebte weitere Erweiterung, die von Microsoft, Windows-1252 (oft als ISO-8859-1 bezeichnet) entworfen wurde, fügte die für den traditionellen Textdruck erforderlichen typografischen Punktierungsmarken hinzu. ISO-8859-1, Windows-1252 und das Original 7-Bit ASCII waren die häufigsten Zeichencodierungen bis 2008, als UTF-8 häufiger wurde. ISO/IEC 4873 führte 32 zusätzliche Steuercodes ein, die im Hexadezimalbereich 80–9F definiert sind, als Teil der Erweiterung der 7-Bit-ASCII-Kodierung zu einem 8-Bit-System. Unicode Unicode und das ISO/IEC 10646Universal Character Set (UCS) haben eine viel breitere Anzahl von Zeichen und ihre verschiedenen Codierformen haben begonnen, ISO/IEC 8859 und ASCII schnell in vielen Umgebungen zu supplantieren. Während ASCII auf 128 Zeichen beschränkt ist, unterstützen Unicode und die UCS mehr Zeichen, indem die Konzepte der eindeutigen Identifizierung (unter Verwendung von natürlichen Zahlen genannt Code Points) und Codierung (auf 8-, 16- oder 32-Bit binäre Formate, genannt UTF-8, UTF-16 und UTF-32) getrennt werden. ASCII wurde in das Unicode (1991)-Zeichen mit den ersten 128 Symbolen eingearbeitet, so dass die 7-Bit ASCII-Zeichen in beiden Sätzen die gleichen Zahlencodes haben. Damit kann UTF-8 rückwärtskompatibel mit 7-Bit ASCII sein, da eine UTF-8-Datei mit nur ASCII-Zeichen identisch ist mit einer ASCII-Datei, die dieselbe Zeichenfolge enthält. Noch wichtiger ist, dass die Vorwärtskompatibilität als Software gewährleistet ist, die nur 7-Bit ASCII-Zeichen als Spezial erkennt und Bytes mit dem höchsten Bitsatz nicht verändert (wie es oft getan wird, um 8-Bit ASCII-Erweiterungen wie ISO-8859-1) zu unterstützen, wird UTF-8-Daten unverändert erhalten. Siehe auch 3568 ASCII, ein Asteroid benannt nach der Zeichenkodierung Alt-Codes Ascii85ASCII Art ASCII Ribbon Campaign Basic Latin (Unicode block) (ASCII als Subsatz von Unicode) Erweiterte ASCII HTML dezimale Charakter Rendering Jargon File, ein Glossar des Computerprogrammierers slang, die eine Liste von gemeinsamen slang Namen für ASCII Zeichen enthält Liste der Computer-Zeichen-Sets Liste der Unicode-Zeichen Hinweise Referenzen Weiter lesen Bemer, Robert William (1960)."Ein Vorschlag für Charakter-Code-Kompatibilität". Kommunikation der ACM.3 (2:) 71–72.doi:10.1145/366959.366961.S2CID 9591147.Bemer, Robert William (2003-05-23)."Das Babel der Codes vor ASCII: Die 1960er Umfrage der Coded Character Sets: Die Gründe für ASCII". Archiviert aus dem Original auf 2013-10-17.Retrieved 2016-05-09, von: Bemer, Robert William (Dezember 1960). "Survey von codierter Zeichendarstellung". Kommunikation der ACM.3 (12:) 639–641.doi:10.1145/367487.367493.S2CID 21403172.Smith, H. J;. Williams, F. A. (Dezember 1960). "Survey of Puned Card Codes". Kommunikation der ACM.3 (12:) 642. doi:10.1145/367487.367491.American National Standard Code for Information Interchange. American National Standards Institute. 1977.Robinson, G. S;. Cargill, C. (1996). "Geschichte und Auswirkungen von Computerstandards."Computer. 29 (10:) 79–85.doi:10.1109/2.539725. Mullendore, Ralph Elvin (1964) [1963]. Ptak, John F. (ed.). " Zur Frühentwicklung von ASCII – Die Geschichte von ASCII". JF Ptak Science Books (veröffentlicht März 2012). Archiviert aus dem Original auf 2016-05-26.Retrieved 2016-05-26. Externe Links "C0 Controls and Basic Latin – Range: 0000–007F" (PDF). Der Unicode Standard 8.0.Unicode, Inc. 2015 [1991].Archiviert (PDF) aus dem Original auf 2016-05-26.Retrieved 2016-05-26.Fischer, Eric. "The Evolution of Character Codes, 1874–1968". CiteSeerX 10.1.1.96.678 [1]