Plattform als Service (PaaS) oder Applikationsplattform als Service (aPaaS) oder Plattform-basierter Service ist eine Kategorie von Cloud-Computing-Diensten, die es Kunden ermöglicht, ein modulares Paket aus einer Rechenplattform und einer oder mehreren Anwendungen bereitzustellen, zu betreiben und zu verwalten, ohne die Komplexität des Aufbaus und der Aufrechterhaltung der Infrastruktur, die typischerweise mit der Entwicklung und dem Start der Anwendung(en) verbunden ist, und Entwicklern zu ermöglichen, solche Softwarepakete zu erstellen, zu erstellen, zu entwickeln und zu erstellen. Entwicklung und Nutzung von PaaS können auf drei Arten geliefert werden: Als Public Cloud Service von einem Anbieter, wo der Verbraucher die Software-Bereitstellung mit minimalen Konfigurationsoptionen steuert, und der Anbieter bietet die Netzwerke, Server, Speicher, Betriebssystem (OS,) Middleware (z.B. Java-Laufzeit, .NET-Laufzeit, Integration, etc.) Datenbank und andere Dienste, um die Anwendung des Verbrauchers zu hosten. Als privater Service (Software oder Gerät) hinter einer Firewall. Als Software auf der öffentlichen Infrastruktur als Service eingesetzt. Die erste öffentliche Plattform als Service war Zimki, das von Fotango, einem in London ansässigen Unternehmen im Besitz von Canon Europe, gegründet wurde. Es wurde 2005 entwickelt, hatte eine Beta-Start im März 2006 und eine öffentliche Markteinführung bei EuroOSCON im Jahr 2006. Zimki war eine End-to-End-JavaScript-Plattform für Web-Anwendungsentwicklung und Dienstprogramm-Computing, die die wiederholten Aufgaben der Erstellung von Web-Anwendungen und Web-Services entfernt. Zimki automatisiert alle Aspekte der Infrastruktur und des Betriebs, von der Bereitstellung und Einrichtung virtueller Server, Skalierung, Konfiguration, Sicherheit und Backups. Zimki stellte den Tagline "Pre-Shaved Yaks" vor, um die Entfernung all dieser repetitiven Aufgaben zu beschreiben. Zimki war eine reine "Pay as you go"-Code-Ausführungsplattform, die Entwicklern erlaubte, Anwendungen oder Web-Dienste ohne Start-up-Kosten zu erstellen und zu implementieren, auf einer echten Dienstprogramm-basierten Rechenplattform. Die Aufladung basierte auf gebrauchtem Speicher, Netzwerkverkehr und JSOPs (Javascript-Operationen). Es war eine multitenante Plattform, in der Entwickler Anwendungen (Front und Back-End durch SSJS) erstellen konnten, indem sie eine einzige Sprache - Javascript. Alle Entwicklung, Abrechnung, Überwachung und Anwendungskontrolle wurden durch APIs freigelegt. Es gab eine Reihe von Komponentendiensten wie No-SQL-Objektspeicher und Message Queue-Dienste. Alle Funktionen in Zimki konnten als Web-Services freigelegt werden, und Zimki lieferte Abrechnungsanalysen bis hin zu einzelnen Funktionen. Während Zimki schnell wächst und Fotango profitabel war, entschied die Muttergesellschaft, dass dieser Bereich nicht der Kern war und den Service im Dezember 2007 geschlossen. Zum Zeitpunkt seiner Schließung hatte Zimki mehrere tausend Entwicklerkonten. Sie hatte die technische Lebensfähigkeit der Plattform als Service demonstriert, aber auch das erste Beispiel für die Gefahren, von einem einzigen Anbieter abhängig zu sein. Dies wurde hervorgehoben, als der CEO (Simon Wardley, bekannt für Wardley-Karten) auf der OSCON 2007 bekannt gab, dass Zimki nicht mehr Open-Source- und die Zukunft des sogenannten Framework-as-a-Service (später genannt Plattform-as-a-Service) über die Bedeutung eines Marktes von Anbietern auf Basis eines Open-Source-Referenzmodells diskutieren würde. Im April 2008 startete Google App Engine mit einer kostenlosen Testversion auf 10.000 Entwickler. Dies wurde gesagt, dass "der Internet-Cloud-Computing-Raum in eine vollwertige Industrie fast über Nacht gedreht haben. " Die ursprüngliche Absicht von PaaS war, das Schreiben von Code zu vereinfachen, mit der Infrastruktur und den Betrieben, die vom PaaS-Anbieter bearbeitet werden. Ursprünglich waren alle PaaSes in der Public Cloud. Weil viele Unternehmen nicht alles in der Public Cloud haben wollten, wurden private und hybride PaaS-Optionen (von internen IT-Abteilungen verwaltet) geschaffen. PaaS bietet eine Umgebung für Entwickler und Unternehmen, um Anwendungen zu erstellen, zu hosten und zu implementieren, Entwickler aus den Komplexitäten der Infrastruktur zu retten (Einstellung, Konfiguration und Verwaltung von Elementen wie Server und Datenbanken). PaaS kann die Geschwindigkeit der Entwicklung einer App verbessern und es seinem Benutzer ermöglichen, sich auf die Anwendung selbst zu konzentrieren. Mit PaaS verwaltet der Kunde Anwendungen und Daten, während der Anbieter (im öffentlichen PaaS) oder die IT-Abteilung (im privaten PaaS) Laufzeit, Middleware, Betriebssystem, Virtualisierung, Server, Storage und Networking verwaltet. Die vom Anbieter bereitgestellten Entwicklungstools werden entsprechend den Bedürfnissen des Nutzers angepasst. Der Benutzer kann wählen, um die Software aufrechtzuerhalten, oder haben Sie den Anbieter aufrechtzuerhalten. PaaS-Angebote können auch Einrichtungen für Anwendungsdesign, Anwendungsentwicklung, Testen und Bereitstellung, sowie Dienstleistungen wie Team-Kollaboration, Web-Service-Integration und Marshalling, Datenbank-Integration, Sicherheit, Skalierbarkeit, Storage, Beharrlichkeit, Staatsmanagement, Anwendungsversion, Anwendungsinstrumentierung und Entwickler-Community-Facilitation. Neben den Service-Engineering-Aspekten umfassen PaaS-Angebote Mechanismen für das Service-Management, wie Überwachung, Workflow-Management, Entdeckung und Reservierung. Vorteile und Nachteile Die Vorteile von PaaS sind in erster Linie, dass es eine übergeordnete Programmierung mit dramatisch reduzierter Komplexität ermöglicht; die Gesamtentwicklung der Anwendung kann effektiver sein, da sie die Infrastrukturressourcen im Hoch- und Tiefbau aufgebaut hat; und die Wartung und Erweiterung der Anwendung ist damit einfacher. Nachteile verschiedener PaaS-Anbieter, wie sie von ihren Nutzern genannt werden, sind erhöhte Preise in größeren Ausmaßen, mangelnde betriebliche Merkmale, reduzierte Kontrolle und die Schwierigkeiten der Verkehrsleitsysteme. Typen Öffentliche, private und hybride Es gibt verschiedene Arten von PaaS, einschließlich öffentlich, privat und hybrid. PaaS war ursprünglich für Anwendungen auf öffentlichen Cloud-Services gedacht, bevor es sich um private und hybride Optionen erweiterte. Public PaaS wird von Software als Service (SaaS) abgeleitet und befindet sich in Cloud Computing zwischen SaaS und Infrastruktur als Service (IaaS). SaaS ist eine Software, die in der Cloud gehostet wird, so dass es keine Festplattenspeicher auf den Computern von Benutzern aufnimmt. IaaS bietet virtuelle Hardware von einem Anbieter mit einstellbarer Skalierbarkeit. Bei IaaS muss der Benutzer den Server noch verwalten, während bei PaaS die Serververwaltung vom Anbieter durchgeführt wird. Ein privates PaaS kann in der Regel entweder in einem unternehmensinternen Rechenzentrum oder in einer öffentlichen Cloud heruntergeladen und installiert werden. Sobald die Software auf einem oder mehreren Maschinen installiert ist, arrangiert der private PaaS die Applikations- und Datenbankkomponenten in eine einzige Hosting-Plattform. Hybrid PaaS ist in der Regel eine Bereitstellung bestehend aus einer Mischung aus öffentlichen und privaten Bereitstellungen. Kommunikationsplattform als Service Eine Kommunikationsplattform als Service (CPaaS) ist eine Cloud-basierte Plattform, die Entwicklern ermöglicht, Echtzeit-Kommunikationsfunktionen (Voice, Video und Messaging) in ihren eigenen Anwendungen hinzuzufügen, ohne eine Back-End-Infrastruktur und Schnittstellen aufzubauen. Auch CPaaS und Hardware- und Software-Spezifikationen sind speziell entwickelt, um (tele)Kommunikationsanwendungen zu unterstützen. Diese Anwendungen und ihre Verwendung sind viel empfindlicher auf Jitter-, Latenz- und Paketverluste. Hosted PABX, zelluläre Netzwerke, (nahe Echtzeit) Anwendungen werden typischerweise auf CPaaS-Plattformen eingesetzt. Mobile Plattform als Service Initiiert im Jahr 2012 bietet mobile PaaS (mPaaS) Entwicklungsfunktionen für mobile App-Designer und Entwickler. Die Yankee-Gruppe identifizierte mPaaS als eines ihrer Themen für 2014. Open PaaSOpen PaaS beinhaltet nicht Hosting, sondern bietet Open-Source-Software, mit der ein PaaS-Anbieter Anwendungen in einer Open-Source-Umgebung, wie Google App Engine, ausführen kann. Einige offene Plattformen ermöglichen es dem Entwickler, beliebige Programmiersprachen, Datenbanken, Betriebssysteme oder Server zu verwenden, um ihre Anwendungen bereitzustellen. Anbieter Es gibt verschiedene Arten von PaaS-Anbietern. Alle bieten Anwendungshosting und eine Bereitstellungsumgebung sowie verschiedene integrierte Dienste an. Dienstleistungen bieten unterschiedliche Skalierbarkeit und Wartung. Entwickler können eine Anwendung schreiben und auf einen PaaS laden, der ihre Softwaresprache der Wahl unterstützt, und die Anwendung läuft auf diesem PaaS. Siehe auch Infrastruktur als Service Mobile Backend als Service-Netzwerk als Service Serverless Computing Software als Service == Referenzen ==