Numerische Analyse ist die Studie von Algorithmen, die numerische Approximation (im Gegensatz zu symbolischen Manipulationen) für die Probleme der mathematischen Analyse (wie von diskreten Mathematik unterscheidet). Numerische Analyse findet Anwendung in allen Bereichen der Technik und der Physik, und im 21. Jahrhundert auch die Lebens- und Sozialwissenschaften, Medizin, Wirtschaft und sogar die Künste. Das aktuelle Wachstum in der Rechenleistung ermöglichte den Einsatz komplexer numerischer Analysen und liefert detaillierte und realistische mathematische Modelle in Wissenschaft und Technik. Beispiele für die numerische Analyse sind: gewöhnliche Differentialgleichungen, wie sie in der himmlischen Mechanik (vorhersagen die Bewegungen von Planeten, Sternen und Galaxien), numerische lineare Algebra in der Datenanalyse, stochastische Differentialgleichungen und Markov-Ketten zur Simulation von lebenden Zellen in der Medizin und Biologie gefunden werden. Vor modernen Computern stützten sich die numerischen Methoden oft auf manuelle Interpolationsformeln mit Daten aus großen gedruckten Tabellen. Seit Mitte des 20. Jahrhunderts berechnen Computer stattdessen die erforderlichen Funktionen, aber viele der gleichen Formeln werden weiterhin in Softwarealgorithmen verwendet. Der numerische Gesichtspunkt geht zurück zu den frühesten mathematischen Schriften. Eine Tablette aus der Yale Babylonian Collection (YBC 7289,) gibt eine sexagesimale numerische Annäherung der Quadratwurzel von 2, die Länge der Diagonale in einem Einheitsplatz. Numerische Analyse setzt diese lange Tradition fort: anstatt exakt symbolische Antworten zu geben, die in Ziffern übersetzt werden und nur auf reale Weltmessungen anwendbar sind, werden ungefähre Lösungen innerhalb bestimmter Fehlergrenzen verwendet. Allgemeine Einleitung Das Gesamtziel des Bereichs der numerischen Analyse ist die Gestaltung und Analyse von Techniken, um ungefähre, aber genaue Lösungen für harte Probleme zu geben, deren Vielfalt durch folgendes vorgeschlagen wird: Erweiterte numerische Methoden sind essentiell, um numerische Wettervorhersage möglich zu machen. Die Berechnung der Trajektorie eines Raumfahrzeugs erfordert die genaue numerische Lösung eines Systems gewöhnlicher Differentialgleichungen. Autounternehmen können die Crash-Sicherheit ihrer Fahrzeuge durch Computersimulationen von Autoabstürzen verbessern. Solche Simulationen bestehen im wesentlichen darin, Teildifferenzgleichungen numerisch zu lösen. Hedge-Fonds (private Investmentfonds) verwenden Werkzeuge aus allen Bereichen der numerischen Analyse, um den Wert von Aktien und Derivaten genauer zu berechnen als andere Marktteilnehmer. Fluggesellschaften verwenden anspruchsvolle Optimierungsalgorithmen, um Ticketpreise, Flugzeuge und Crew-Zuweisungen und Kraftstoffbedarf zu bestimmen. Historisch wurden solche Algorithmen innerhalb des sich überschneidenden Bereichs der Operationsforschung entwickelt. Versicherungsgesellschaften nutzen numerische Programme zur versicherungstechnischen Analyse. Der Rest dieses Abschnitts beschreibt einige wichtige Themen der numerischen Analyse. Geschichte Der Bereich der numerischen Analyse prädiziert die Erfindung moderner Computer seit vielen Jahrhunderten. Die lineare Interpolation wurde bereits vor mehr als 2000 Jahren im Einsatz. Viele große Mathematiker der Vergangenheit wurden durch numerische Analyse vorbesetzt, wie es aus den Namen der wichtigen Algorithmen wie Newtons Methode, Lagrange Interpolation Polynom, Gaussian Eliminierung oder Eulers Methode ersichtlich ist. Um die Berechnungen von Hand zu erleichtern, wurden große Bücher mit Formeln und Tabellen von Daten wie Interpolationspunkte und Funktionskoeffizienten hergestellt. Mit diesen Tabellen, die oft auf 16 Dezimalstellen oder mehr für einige Funktionen berechnet werden, könnte man Werte suchen, um in die angegebenen Formeln einzufügen und sehr gute numerische Schätzungen einiger Funktionen zu erzielen. Die kanonische Arbeit im Feld ist die NIST-Veröffentlichung, die von Abramowitz und Stegun herausgegeben wird, ein 1000-plus-Seitenbuch mit einer sehr großen Anzahl von allgemein verwendeten Formeln und Funktionen und deren Werte an vielen Punkten. Die Funktionswerte sind nicht mehr sehr nützlich, wenn ein Computer zur Verfügung steht, aber die große Auflistung von Formeln kann noch sehr praktisch sein. Der mechanische Rechner wurde auch als Werkzeug zur Handberechnung entwickelt. Diese Rechner entwickelten sich in den 1940er Jahren zu elektronischen Rechnern, und es wurde dann gefunden, dass diese Rechner auch für administrative Zwecke nützlich waren. Die Erfindung des Computers beeinflusste aber auch das Feld der numerischen Analyse, da nun längere und kompliziertere Berechnungen vorgenommen werden konnten. Direkte und iterative Methoden Betrachten Sie das Problem der Lösung 3x3 + 4 = 28für die unbekannte Menge x. Für das iterative Verfahren wenden Sie das Bisection-Verfahren auf f(x=) 3x3 - 24. Die Anfangswerte sind a = 0, b = 3, f(a) = -24, f(b=) 57. Aus dieser Tabelle kann geschlossen werden, dass die Lösung zwischen 1.875 und 2.0625 liegt. Der Algorithmus kann eine beliebige Anzahl in diesem Bereich mit einem Fehler unter 0,2 Diskretierung und numerische Integration zurückgeben Bei einem zweistündigen Rennen wird die Geschwindigkeit des Autos zu drei Zeitpunkten gemessen und in der folgenden Tabelle aufgezeichnet. Eine Diskretierung würde sagen, dass die Geschwindigkeit des Autos konstant von 0:00 bis 0:40, dann von 0:40 bis 1:20 und schließlich von 1:20 bis 2:00 war. So beträgt die Gesamtstrecke in den ersten 40 Minuten etwa (2/3 h × 140 km/h) = 93,3 km. Damit können wir die Gesamtstrecke, die mit einer Riemann-Summe von 93,3 km + 100 km + 120 km = 313,3 km zurückgelegt wird, abschätzen, da die Verlagerung das Integral der Geschwindigkeit ist. Ill-konditioniertes Problem: Nehmen Sie die Funktion f(x)=1/(x − 1). Anmerkung: f(1.1=) 10 und f(1.001=) 1000: Eine Änderung von x von weniger als 0,1 verwandelt sich in eine Änderung von f(x) von fast 1000. Die Bewertung f(x) bei x = 1 ist ein krank-konditioniertes Problem. Guter Zustand: Die Auswertung der gleichen Funktion f(x) = 1/(x - 1) bei x = 10 ist dagegen ein gut konditioniertes Problem. Beispielsweise f(10) = 1/9 ≈ 0,111 und f(11) = 0,1: Eine bescheidene Änderung in x führt zu einer bescheidenen Änderung in f(x). Direkte Methoden berechnen die Lösung in einer endlichen Anzahl von Schritten auf ein Problem. Diese Methoden würden die genaue Antwort geben, wenn sie in unendlicher Präzisions-Arithmetik durchgeführt wurden. Beispiele sind die Gaussian-Abspaltung, die QR-Faktorisierungsmethode zur Lösung von Systemen linearer Gleichungen und die Simplex-Methode der linearen Programmierung. In der Praxis wird endliche Präzision eingesetzt und es ergibt sich eine Annäherung der wahren Lösung (Aufbaustabilität). Im Gegensatz zu direkten Verfahren werden iterative Verfahren nicht in einer endlichen Anzahl von Schritten enden erwartet. Ausgehend von einer anfänglichen Vermutung bilden iterative Methoden aufeinanderfolgende Annäherungen, die nur in der Grenze zur exakten Lösung konvergieren. Ein Konvergenztest, der oft den Rest beinhaltet, wird festgelegt, um zu entscheiden, wann eine hinreichend genaue Lösung gefunden wurde (hoffentlich). Auch mit unendlicher Präzisions-Arithmetik würden diese Methoden die Lösung nicht innerhalb einer endlichen Anzahl von Schritten erreichen (im Allgemeinen). Beispiele sind Newtons Methode, die Bisection-Methode und Jacobi Iteration. In der Rechenmatrix-Algebra werden im allgemeinen iterative Methoden für große Probleme benötigt. Iterative Methoden sind häufiger als direkte Methoden in der numerischen Analyse. Einige Methoden sind im Prinzip direkt, werden aber in der Regel verwendet, als ob sie nicht waren, z.B. GMRES und die Konjugatgradientenmethode. Für diese Verfahren ist die Anzahl der zur Erzielung der exakten Lösung erforderlichen Schritte so groß, daß eine Approximation in gleicher Weise wie bei einem iterativen Verfahren angenommen wird. Des weiteren müssen ständige Probleme manchmal durch ein diskretes Problem ersetzt werden, dessen Lösung bekannt ist, die des kontinuierlichen Problems anzunähern; dieser Vorgang wird als Diskretierung bezeichnet. Beispielsweise ist die Lösung einer Differentialgleichung eine Funktion. Diese Funktion muss durch eine endliche Datenmenge dargestellt werden, beispielsweise durch ihren Wert an einer endlichen Anzahl von Punkten an seiner Domäne, obwohl diese Domain ein Kontinuum ist. Erzeugung und Verbreitung von Fehlern Die Untersuchung von Fehlern ist ein wichtiger Teil der numerischen Analyse. Es gibt mehrere Möglichkeiten, wie Fehler in der Lösung des Problems eingebracht werden können. Rund-off Rund-Off-Fehler entstehen, weil es unmöglich ist, alle realen Zahlen genau auf einer Maschine mit endlichem Speicher zu repräsentieren (was alle praktischen digitalen Computer sind.) Trunkations- und Diskretierungsfehler Truncation-Fehler werden bei Beendigung eines iterativen Verfahrens oder einem mathematischen Verfahren angenähert, und die ungefähre Lösung unterscheidet sich von der genauen Lösung. Ebenso führt die Diskretierung zu einem Diskretierungsfehler, da die Lösung des diskreten Problems nicht mit der Lösung des kontinuierlichen Problems zusammenfällt. So kann beispielsweise bei der Iteration in der Seitenleiste die Lösung von 3 x 3 + 4 = 28 \{displaystyle 3x^{3}+4=28 , nach 10 oder so Iterationen, geschlossen werden, dass die Wurzel etwa 1,99 beträgt (z.B.). Es gibt daher einen Abkürzungsfehler von 0,01. Sobald ein Fehler erzeugt wird, wird er sich in der Regel durch die Berechnung ausbreiten. So wird bereits festgestellt, dass die Operation + auf einem Rechner (oder einem Computer) ungenau ist. Daraus folgt, dass eine Berechnung des Typs a + b + c + d + e \{displaystyle a+b+c+d+e} noch ungenauer ist. Der Abkürzungsfehler wird erstellt, wenn ein mathematisches Verfahren angenähert wird. Um eine Funktion exakt zu integrieren, ist es erforderlich, die Summe von unendlichen Trapezoiden zu finden, aber numerisch nur die Summe von nur endlichen Trapezoiden zu finden, und damit die Näherung des mathematischen Verfahrens. In ähnlicher Weise nähert sich das Differenzelement zur Unterscheidung einer Funktion Null, jedoch kann nur ein endlicher Wert des Differenzelements gewählt werden. Numerische Stabilität und gut gestellte Probleme Numerische Stabilität ist ein Begriff in der numerischen Analyse. Ein Algorithmus wird als "numerisch stabil" bezeichnet, wenn ein Fehler, was auch immer seine Ursache, während der Berechnung nicht viel größer wird. Dies geschieht, wenn das Problem gut konditioniert ist, was bedeutet, dass sich die Lösung nur um einen kleinen Betrag ändert, wenn die Problemdaten um einen kleinen Betrag geändert werden. Im Gegenteil, wenn ein Problem schlecht konditioniert ist, wird jeder kleine Fehler in den Daten zu einem großen Fehler wachsen. Sowohl das ursprüngliche Problem als auch der Algorithmus, der verwendet wird, um dieses Problem zu lösen, können gut konditioniert oder schlecht konditioniert sein, und jede Kombination ist möglich. So kann ein Algorithmus, der ein gut-konditioniertes Problem löst, entweder numerisch stabil oder numerisch instabil sein. Eine Art der numerischen Analyse ist es, einen stabilen Algorithmus zur Lösung eines gut aufgestellten mathematischen Problems zu finden. So ist beispielsweise die Berechnung der Quadratwurzel von 2 (die etwa 1.41421 ist) ein gut aufgestelltes Problem. Viele Algorithmen lösen dieses Problem, indem Sie mit einer anfänglichen Annäherung x0 bis 2 \{displaystyle \{sqrt {2} beginnen, z.B. x0 = 1,4, und dann verbesserte Rate x1, x2, etc. Eine solche Methode ist die berühmte babylonische Methode, die von xk+1 =xk/2 + 1/xk angegeben wird. Eine andere Methode, genannt 'Methode X,' wird durch xk+1 (=xk2 - 2) 2 + xk angegeben.Einige Iterationen jedes Schemas werden in der folgenden Tabelle berechnet, mit Anfangsraten x0 = 1.4 und x0 = 1.42 Beachten Sie, dass die babylonische Methode schnell zusammenläuft, unabhängig von der ersten Rate, während Methode X extrem langsam mit anfänglicher Rate x0 = 1,4 konvergiert und für anfängliche Rate x0 = 1,42 divergiert. Daher ist die babylonische Methode numerisch stabil, während Methode X numerisch instabil ist. Die Numerische Stabilität wird durch die Zahl der signifikanten Ziffern, die die Maschine hält, beeinflußt, wenn eine Maschine verwendet wird, die nur die vier bedeutendsten Dezimalziffern hält, ein gutes Beispiel für den Verlust von Bedeutung kann durch diese beiden äquivalenten Funktionen f (x) = x ( x + 1 - x ) und g ( x ) = x + 1 + x . Die Ergebnisse von f (500 ) = 500 (501 - 500 ) = 500 (22.38 - 22.36 ) = 500 (0.02 ) = 10 \{displaystyle f(500)=500\left({\sqrt 501}-{\sqrt {500}}\right)=500\left(22.38-22.36\right)=500(0.02)= 500{22.38+22.36}\\&={\fra x = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 2 = 2 = 1 = 2 = 1 = 1 = 1 = 2 = 1 = 2 = 1 = 1 = 2 = 1 = 1 = 1 = 1 = 2 = 1 = 2 = 2 = 2 = 2 = 1 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 2 = 2 = 2 = 2 = 2 = 1 = 1 = 1 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 1 = 2 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 − ( x ) 2 x + 1 + x = x + 1 - x + 1 + x = x 1 x + 1 + x = x + 1 + x = g ( x ) \{displaystyle start{alignedat}{4}f(x)&=x\left({\sqrt x+1}-{\sqrt x}}}\right)\&=x\left({\sqrt x}}}}}* ******************************************************************* *** ****************************************************************************************** x+1}+{\sqrt *}\\\&=x{\frac x+1-x}{\\qrt x+1}+{\sqrt *}}\\\&=x{\fra 1 x+1}+{\sqrt *}}\\\{\frac x}{\sqrt x+1}}}}}}}\\\&=g(x)\end{alignedat Der Sollwert, berechnet mit unendlicher Präzision, ist 11.174755... Das Beispiel ist eine Abwandlung von einem aus Mathew; Numerische Methoden mit Matlab, 3. Studienbereiche Der Bereich der numerischen Analyse umfasst viele Unterdisziplinen. Einige der wichtigsten sind: Kennwerte der Funktionen Eines der einfachsten Probleme ist die Auswertung einer Funktion an einem bestimmten Punkt. Der einfachste Ansatz, die Zahl in der Formel einfach einzustecken, ist manchmal nicht sehr effizient. Für Polynome wird das Horner-System besser angegangen, da es die notwendige Anzahl an Multiplikationen und Ergänzungen reduziert. Generell ist es wichtig, Abrundungsfehler, die sich aus der Verwendung von Floating Point arithmetic ergeben, abzuschätzen und zu kontrollieren. Interpolation, Extrapolation und Regression Interpolation löst das folgende Problem: Bei dem Wert einer unbekannten Funktion an einer Anzahl von Punkten, welchen Wert hat diese Funktion an einem anderen Punkt zwischen den angegebenen Punkten? Die Extrapolation ist der Interpolation sehr ähnlich, mit der Ausnahme, daß jetzt der Wert der unbekannten Funktion an einem Punkt gefunden werden muss, der außerhalb der angegebenen Punkte liegt. Regression ist ebenfalls ähnlich, aber es berücksichtigt, dass die Daten ungenau sind. Bei einigen Punkten und einer Messung des Wertes einer Funktion an diesen Punkten (mit einem Fehler) kann die unbekannte Funktion gefunden werden. Die am wenigsten quadratische Methode ist eine Möglichkeit, dies zu erreichen. Das Lösen von Gleichungen und Systemen von Gleichungen Ein weiteres grundlegendes Problem ist die Berechnung der Lösung bestimmter Gleichungen. Zwei Fälle zeichnen sich häufig aus, je nachdem, ob die Gleichung linear ist oder nicht. So ist die Gleichung 2 x + 5 = 3 \{Displaystyle 2x+5=3} linear, während 2 x 2 + 5 = 3 \{Displaystyle 2x{2}+5=3 nicht ist. Viel Aufwand wurde in die Entwicklung von Methoden zur Lösung von Systemen von linearen Gleichungen gelegt. Standard-Direktmethoden, d.h. Methoden, die eine Matrixzersetzung verwenden, sind Gausssche Abspaltung, LU-Zersetzung, Cholesky-Zersetzung für symmetrische (oder hermitische) und positiv-definite Matrix und QR-Zersetzung für nicht-quare Matrizen. Für große Systeme werden üblicherweise iterative Methoden wie die Jacobi-Methode, Gauss-Seidel-Methode, sukzessive Überrelaxation und Konjugat-Gradienten-Methode bevorzugt. Allgemeine iterative Methoden können mit einer Matrixspaltung entwickelt werden. Die Root-Suchen-Algorithmen werden verwendet, um nichtlineare Gleichungen zu lösen (sie sind so benannt, da eine Wurzel einer Funktion ein Argument ist, für das die Funktion Null ergibt). Ist die Funktion differenzierbar und das Derivat bekannt, so ist Newtons Methode eine beliebte Wahl. Linearisierung ist eine weitere Technik zur Lösung nichtlinearer Gleichungen. Lösen von Eigenwert- oder Einzelwertproblemen Mehrere wichtige Probleme können in Bezug auf Eigenwertzersetzungen oder Einzelwertzersetzungen formuliert werden. Beispielsweise basiert der spektrale Bildkompressionsalgorithmus auf der Singularwertzersetzung. Das entsprechende Werkzeug in der Statistik wird als Hauptkomponentenanalyse bezeichnet. Optimierungsprobleme verlangen den Punkt, an dem eine bestimmte Funktion maximiert wird (oder minimiert). Oft muss der Punkt auch einige Einschränkungen erfüllen. Das Optimierungsfeld wird je nach Form der Objektivfunktion und der Strenge in mehreren Teilfeldern weiter aufgeteilt. So geht es bei der linearen Programmierung um den Fall, dass sowohl die Zielfunktion als auch die Zwänge linear sind. Eine bekannte Methode in der linearen Programmierung ist die simplex Methode. Die Methode der Lagrange Multiplikatoren kann verwendet werden, um Optimierungsprobleme mit Zwängen auf unkonstrainierte Optimierungsprobleme zu reduzieren. Numerische Integration, in einigen Fällen auch als numerische Quadratur bekannt, verlangt nach dem Wert eines bestimmten Integrals. Beliebte Methoden verwenden eine der Newton-Cotes Formeln (wie die Mittelpunktregel oder Simpson's Regel) oder Gaussian Quadratur. Diese Methoden stützen sich auf eine "geteilte und erobernde" Strategie, wobei ein Integral auf einen relativ großen Satz in Integrale auf kleinere Sätze zerlegt wird. In höheren Dimensionen, bei denen diese Verfahren im Hinblick auf den rechnerischen Aufwand unverhältnismäßig teuer werden, können Monte Carlo- oder Quasi-Monte-Carlo-Methoden (siehe Monte Carlo-Integration) oder in bescheidenen großen Dimensionen die Methode der spärlichen Gitter verwendet werden. Differentialgleichungen Numerische Analyse beschäftigt sich auch mit der Berechnung (in etwa) der Lösung von Differentialgleichungen, sowohl gewöhnliche Differentialgleichungen als auch partielle Differentialgleichungen. Teildifferenzgleichungen werden dadurch gelöst, daß zunächst die Gleichung dehnt und in einen endlichen Raum gebracht wird. Dies kann durch ein endliches Element-Verfahren, ein endliches Differenz-Verfahren oder (insbesondere im Engineering) ein endliches Volumen-Verfahren erfolgen. Die theoretische Rechtfertigung dieser Methoden beinhaltet oft Theoreme aus der funktionellen Analyse. Dies reduziert das Problem bei der Lösung einer algebraischen Gleichung. Software Seit dem späten zwanzigsten Jahrhundert werden die meisten Algorithmen in einer Vielzahl von Programmiersprachen umgesetzt. Das Netlib-Repository enthält verschiedene Sammlungen von Software-Routinen für numerische Probleme, vor allem in Fortran und C. Handelsprodukte, die viele verschiedene numerische Algorithmen implementieren, umfassen die IMSL- und NAG-Bibliotheken; eine Software-Alternative ist die GNU Scientific Library. In den Jahren veröffentlichte die Royal Statistical Society zahlreiche Algorithmen in ihrer Angewandten Statistik (Code für diese AS-Funktionen ist hier;) ACM ähnlich, in seinen Transaktionen auf Mathematische Software (TOMS-Code ist hier). Das Naval Surface Warfare Center veröffentlichte mehrmals seine Bibliothek der Mathematik Subroutines (Code hier). Es gibt mehrere populäre numerische Computing-Anwendungen wie MATLAB, TK Solver, S-PLUS und IDL sowie kostenlose und Open Source-Alternativen wie FreeMat, Scilab, GNU Octave (ähnlich Matlab), IT+ (eine C+-Bibliothek). Es gibt auch Programmiersprachen wie R (ähnlich S-PLUS,) Julia und Python mit Bibliotheken wie NumPy, SciPy und SymPy. Die Leistung variiert weit: Während Vektor- und Matrixoperationen in der Regel schnell sind, können Skalarschleifen in der Geschwindigkeit um mehr als eine Größenordnung variieren. Viele Computer-Algebra-Systeme wie Mathematica profitieren auch von der Verfügbarkeit von willkürlich-präzis arithmetic, die genauere Ergebnisse liefern kann. Auch jede Tabellenkalkulationssoftware kann verwendet werden, um einfache Probleme im Zusammenhang mit der numerischen Analyse zu lösen. Excel hat beispielsweise Hunderte von verfügbaren Funktionen, einschließlich für Matrizen, die in Verbindung mit seinem eingebauten Soldat verwendet werden können. Siehe auch Analyse von Algorithmen Computational science Interval arithmetic Liste der numerischen Analysethemen Lokale Linearisierungsmethode Numerische Differenzierung Numerische Rezepte Symbolisch-numerische Berechnung validierte numerische Noten Referenzen Zitate Zitate Quellen Externe Links Journals gdz.sub.uni-goettingen, 1964AM Mathematikmer, Bände 1-66, Springer, 1959-1994 (Suche; Seiten sind deutsch) Online-Texte "Numerische Analyse" Encyclopedia of Mathematics, EMS Press, 2001 [1994] Numerische Rezepte, William H.Hars (kostenlos, herunterladbare Vorausgaben) Erste Schritte in Numerische Analyse (archiviert,) R.J.Hosking, S.Joe, D.C.Joyce, und J.C.Turner CSEP (Computational Science Education Project, Cambridge, 2008)