Ein Programmierteam ist ein Team von Menschen, die Computersoftware entwickeln oder pflegen. Sie können auf vielfältige Weise organisiert werden, aber das egolose Programmierteam und das Chefprogrammteam waren gemeinsame Strukturen. Warenbezeichnung Ein Programmierteam umfasst Menschen, die Computersoftware entwickeln oder pflegen. Programmierung von Teamstrukturen Programmierteams können auf vielfältige Weise organisiert werden, aber das egolose Programmierteam und das Chefprogrammteam sind zwei gemeinsame Strukturen, die typischerweise verwendet werden. Die wichtigsten Determinanten bei der Wahl der Programmier-Team-Struktur umfassen typischerweise: Schwierigkeit, Größe, Dauer, Modularität, Zuverlässigkeit, Zeit und Soziabilität. Egoless Programmierung Laut Marilyn Mantei berichten Einzelpersonen, die Teil eines dezentralisierten Programmierteams sind, eine höhere Stellenzufriedenheit. Aber ein egoloses Programmierteam enthält Gruppen von zehn oder weniger Programmierern. Code wird ausgetauscht und Ziele werden unter den Gruppenmitgliedern gesetzt. Die Führung wird innerhalb der Gruppe entsprechend den Anforderungen und Fähigkeiten, die während einer bestimmten Zeit erforderlich sind, gedreht. Der Mangel an Struktur im egolosen Team kann zu einer Schwäche von Effizienz, Effektivität und Fehlererkennung für Großprojekte führen. Egoless Programmierteams arbeiten am besten für Aufgaben, die sehr komplex sind. Hauptprogrammorteam Ein Hauptprogrammiererteam wird in der Regel drei Personen Teams aus einem Hauptprogrammierer, Senior Level Programmer und einem Programm librarian enthalten. Bei Bedarf werden dem Team zusätzliche Programmierer und Analysten hinzugefügt. Die Schwächen dieser Struktur umfassen einen Mangel an Kommunikation über Teammitglieder, Task-Kooperation und komplexe Aufgabenabwicklung. Das Hauptprogrammteam arbeitet am besten für Aufgaben, die einfacher und unkomplizierter sind, da der Informationsfluss im Team begrenzt ist. Individuen, die in dieser Teamstruktur arbeiten, berichten typischerweise eine geringere Arbeitsmoral. Geteilte Workstation-Teams Eine Entwicklungstechnik, bei der zwei Programmierer an einem Arbeitsplatz zusammenarbeiten. Mob-Programmierung Ein Software-Entwicklungsansatz, bei dem das gesamte Team gleichzeitig im gleichen Raum und auf demselben Computer arbeitet. Programmiermodelle Programmiermodelle ermöglichen Software-Entwicklungsteams, Projekte mit diesen verschiedenen Methoden zu entwickeln, einzusetzen und zu testen. Wasserfall Modell Das Wasserfallmodell, das als traditioneller Ansatz bezeichnet wird, ist ein lineares Modell der Produktion. Die Reihenfolge der Ereignisse dieser Methode folgt: Sammeln und Dokument-Anforderungen Design Code und Einheitstest Durchführen von Systemtests Benutzerakzeptanztests (UAT)Fix alle Probleme Liefern Sie die fertige ProduktJede Phase ist während des Software-Entwicklungsprozesses deutlich, und jede Phase im Allgemeinen beendet, bevor die nächste kann beginnen. Programming-Teams mit diesem Modell sind in der Lage, das Projekt frühzeitig im Entwicklungsprozess zu entwerfen, so dass Teams sich auf die Codierung und Prüfung während der Masse der Arbeit konzentrieren können, anstatt ständig Design zu wiederholen. Dies ermöglicht es Teams auch, vollständig und sorgfältiger zu entwerfen, so dass Teams ein vollständiges Verständnis aller Software-Auslieferungen haben können. Modell Das Agile-Entwicklungsmodell ist ein Team-basierter Ansatz zur Entwicklung als das bisherige Wasserfallmodell. Teams arbeiten in der schnellen Lieferung / Bereitstellung, die spaltet Arbeit in Phasen genannt sprints". Sprints werden in der Regel als zwei Wochen geplanter Software-Auslieferungen definiert, die jedem Team/Team-Mitglied gegeben werden. Nach jedem Sprint wird die Arbeit reproduziert und die aus dem vorherigen Sprint gewonnenen Informationen für die zukünftige Sprint-Planung genutzt. Da die Sprint-Arbeit abgeschlossen ist, kann sie vom Programmierteam überprüft und ausgewertet werden und für eine weitere Iteration (d.h. nächste Sprint) zurückgeschickt werden oder wenn abgeschlossen. Die allgemeinen Grundsätze des Agile Manifests sind wie folgt: Befriedigen Sie den Kunden und entwickeln Sie ständig Software. Für den Wettbewerbsvorteil des Kunden werden wechselnde Anforderungen berücksichtigt. Konzentrieren Sie sich auf die Bereitstellung von Arbeitssoftware häufig. Die Lieferpräferenz wird auf die kürzeste mögliche Zeitspanne gesetzt. Entwickler und Geschäftsleute müssen während des gesamten Projekts zusammenarbeiten. Projekte müssen auf Menschen basieren, die motiviert sind. Geben Sie ihnen die richtige Umgebung und die Unterstützung, die sie benötigen. Sie sollten darauf vertrauen, ihre Jobs zu erledigen. Face-to-face Kommunikation ist der beste Weg, um Informationen an und von einem Team zu übertragen. Arbeitssoftware ist die primäre Messung des Fortschritts. Agile Prozesse werden die nachhaltige Entwicklung fördern. Sponsoren, Entwickler und Anwender sollten in der Lage sein, ein unbestimmtes, konstantes Tempo zu halten.Ständige Aufmerksamkeit auf technische Exzellenz und gutes Design wird die Agilität verbessern. Einfachheit gilt als die Kunst der Maximierung der Arbeit, die nicht getan wird, und es ist wichtig. Selbstorganisierte Teams schaffen in der Regel die besten Designs. In regelmäßigen Abständen wird das Team darüber nachdenken, wie es effektiver wird, und sie werden ihr Verhalten entsprechend anpassen und anpassen. Siehe auch Cross-funktionales Team Scrum (Software-Entwicklung)Software-Entwicklungsprozess Team-Software-Prozess == Referenzen ==