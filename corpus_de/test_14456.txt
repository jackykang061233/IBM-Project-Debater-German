Die Internet-Protokoll-Suite, allgemein bekannt als TCP/IP, ist die Menge der Kommunikationsprotokolle im Internet und ähnliche Computernetzwerke. Die aktuellen Basisprotokolle in der Suite sind das Transmission Control Protocol (TCP) und das Internet Protocol (IP.) Während seiner Entwicklung wurden Versionen von ihm als Verteidigungsministerium (DoD) Modell bekannt, weil die Entwicklung der Vernetzungsmethode von der United States Department of Defense durch DARPA finanziert wurde. Seine Implementierung ist ein Protokollstapel. Die Internet-Protokoll-Suite bietet eine end-to-end-Datenkommunikation, in der angegeben wird, wie Daten paketiert, adressiert, übertragen, weitergeleitet und empfangen werden sollen. Diese Funktionalität wird in vier Abstraktionsschichten organisiert, die alle zugehörigen Protokolle nach dem Netzumfang jedes Protokolls klassifizieren. Von niedrigsten bis höchsten sind die Schichten die Verbindungsschicht, die Kommunikationsmethoden für Daten enthält, die innerhalb eines einzigen Netzwerksegments (Link;) der Internetschicht verbleiben und die Internet-Arbeit zwischen unabhängigen Netzwerken bereitstellen; die Transportschicht, die Verarbeitung von Host-to-Host-Kommunikation; und die Anwendungsschicht, die Prozess-zu-Prozess-Datenaustausch für Anwendungen. Die technischen Standards, die der Internet-Protokoll-Suite und ihren Bestandteil-Protokollen zugrunde liegen, werden von der Internet Engineering Task Force (IETF) eingehalten. Die Internet-Protokoll-Suite setzt das OSI-Modell vor, ein umfassenderes Referenz-Framework für allgemeine Netzwerksysteme. Geschichte Frühforschung Die Internet-Protokoll-Suite entstand aus der Forschung und Entwicklung der Defense Advanced Research Projects Agency (DARPA) in den späten 1960er Jahren. Nachdem DARPA 1969 den Pionier in ARPANET initiiert hatte, begann DARPA mit der Arbeit an einer Reihe anderer Datenübertragungstechnologien. Im Jahr 1972 trat Robert E. Kahn dem DARPA Informationsverarbeitungstechnikbüro bei, wo er sowohl an Satellitenpaketnetzen als auch an bodenbasierten Funkpaketnetzen arbeitete und den Wert erkannte, über beide kommunizieren zu können. Im Frühjahr 1973 trat Vinton Cerf, der bei der Entwicklung des bestehenden ARPANET Network Control Program (NCP) Protokolls mitwirkte, Kahn an Open-Architektur-Verbindungsmodellen mit dem Ziel zusammen, die nächste Protokollgeneration für das ARPANET zu entwerfen. Sie zogen die Erfahrungen der ARPANET-Forschungsgemeinschaft und der Internationalen Netzwerk-Arbeitsgruppe, die Cerf unter Vorsitz führte. Bis Sommer 1973 hatten Kahn und Cerf eine grundlegende Reformation durchgeführt, bei der die Unterschiede zwischen lokalen Netzprotokollen durch die Verwendung eines gemeinsamen Internet-Protokolls verdeckt wurden, und statt des für die Zuverlässigkeit verantwortlichen Netzes, wie in den bestehenden ARPANET-Protokollen, wurde diese Funktion den Hosts übertragen. Cerf würdigt Hubert Zimmermann und Louis Pouzin, Designer des CYCLADES Netzwerks, mit wichtigen Einflüssen auf dieses Design. Das neue Protokoll wurde 1974 als Transmission Control Program umgesetzt. Zunächst verwaltete das Transmission Control Program sowohl Datenübertragungen als auch Routing, aber als Erfahrung mit dem Protokoll wuchs, empfahlen die Mitarbeiter die Aufteilung der Funktionalität in Schichten verschiedener Protokolle. Zu den Advokaten gehörte Jonathan Postel vom Institut für Informationswissenschaften der Universität Südkalifornien, der die Anfrage für Kommentare (RFCs) die technische und strategische Dokumentreihe bearbeitete, die sowohl die Internetentwicklung dokumentiert als auch katalysiert hat, und die Forschungsgruppe von Robert Metcalfe am Xerox PARC. Postel sagte: "Wir verschrauben uns in unserer Gestaltung von Internet-Protokollen durch Verletzung des Prinzips der Schichtung." Die Verkapselung verschiedener Mechanismen soll eine Umgebung schaffen, in der die oberen Schichten nur auf das zugreifen konnten, was aus den unteren Schichten erforderlich war. Ein monolithisches Design wäre unflexibel und würde zu Skalierbarkeitsproblemen führen. In Version 3 von TCP, geschrieben 1978, wurde das Transmission Control Program in zwei verschiedene Protokolle aufgeteilt, das Internet Protocol als verbindungslose Schicht und das Transmission Control Protocol als zuverlässiger verbindungsorientierter Service. Die Gestaltung des Netzes umfasste die Erkennung, dass es nur die Funktionen der effizienten Übertragung und Routenverkehr zwischen Endknoten bereitstellen sollte und dass alle anderen Intelligenzen am Rand des Netzes, in den Endknoten liegen sollten. Diese Ausgestaltung ist als End-to-End-Prinzip bekannt. Mit diesem Design wurde es möglich, andere Netzwerke mit dem ARPANET zu verbinden, die das gleiche Prinzip, unabhängig von anderen lokalen Merkmalen, verwendet, wodurch Kahns anfängliches Internet-working Problem löste. Ein beliebter Ausdruck ist, dass TCP/IP, das evtl. Produkt von Cerf und Kahns Arbeit, über "zwei Zinndosen und eine Saite laufen kann. "Jetzt wurde als Witz die IP über Avian Carriers formale Protokollspezifikation erstellt und erfolgreich getestet. DARPA hat mit BBN Technologies, der Stanford University und dem University College London eine operative Version des Protokolls auf mehreren Hardware-Plattformen entwickelt. Bei der Entwicklung des Protokolls ging die Versionsnummer der Paket Routing-Schicht von der Version 1 auf die Version 4 zurück, deren letztere 1983 im ARPANET installiert wurde. Es wurde als Internet Protocol Version 4 (IPv4) bekannt als das Protokoll, das noch im Internet, neben seinem aktuellen Nachfolger, Internet Protocol Version 6 (IPv6.) Frühere Umsetzung 1975 wurde ein Zwei-Netzwerk-IP-Kommunikationstest zwischen Stanford und University College London durchgeführt. Im November 1977 wurde ein Drei-Netzwerk-IP-Test zwischen Standorten in den USA, Großbritannien und Norwegen durchgeführt. Zwischen 1978 und 1983 wurden in mehreren Forschungszentren mehrere andere IP-Prototypen entwickelt. Vor dem 1. Januar 1983 "Flag Day" benutzte das Internet NCP anstelle von TCP als Transportschichtprotokoll. Ein Computer, der Router genannt wird, ist mit einer Schnittstelle zu jedem Netzwerk versehen. Es leitet Netzwerkpakete zwischen ihnen hin und her. Ursprünglich wurde ein Router als Gateway bezeichnet, aber der Begriff wurde geändert, um Verwirrung mit anderen Arten von Gateways zu vermeiden. Adoption Im März 1982 erklärte das US-Verteidigungsministerium TCP/IP als Standard für alle militärischen Computernetzwerke. Im selben Jahr haben NORSAR und Peter Kirsteins Forschungsgruppe am University College London das Protokoll angenommen. Die Migration des ARPANET zu TCP/IP wurde am 1. Januar 1983 offiziell abgeschlossen, als die neuen Protokolle dauerhaft aktiviert wurden. Im Jahr 1985 veranstaltete der Internet Advisory Board (später Internet Architecture Board) einen dreitägigen TCP/IP-Workshop für die Computerindustrie, an dem 250 Verkäufer teilnahmen, das Protokoll förderten und zu einer zunehmenden kommerziellen Nutzung führte. 1985 konzentrierte sich die erste Interop-Konferenz auf die Netzinteroperabilität durch eine breitere Übernahme von TCP/IP. Die Konferenz wurde von Dan Lynch gegründet, einem frühen Internet-Aktivisten. Von Anfang an besuchten große Konzerne wie IBM und DEC das Treffen. IBM, AT&T und DEC waren die ersten großen Unternehmen, die TCP/IP annahmen, dies trotz konkurrierender proprietärer Protokolle. In IBM, ab 1984, Barry Appelmans Gruppe TCP/IP Entwicklung. Sie navigierten die Unternehmenspolitik, um einen Strom von TCP/IP-Produkten für verschiedene IBM-Systeme zu erhalten, darunter MVS, VM und OS/2. Gleichzeitig begannen mehrere kleinere Unternehmen, wie FTP Software und die Wollongongong Gruppe, TCP/IP-Stacks für DOS und Microsoft Windows anzubieten. Der erste VM/CMS TCP/IP-Stack stammte von der University of Wisconsin. Einige der frühen TCP/IP-Stacks wurden von einigen Programmierern einzeln geschrieben. Jay Elinsky und Oleg Vishnepolsky von IBM Research schrieb TCP/IP-Stacks für VM/CMS und OS/2. 1984 schrieb Donald Gillies am MIT eine Ntcp-Multiverbindung TCP, die die IP/PacketDriver-Schicht, die von John Romkey am MIT in 1983–4 gehalten wurde, übertraf. Romkey nutzte diese TCP 1986 als FTP Software gegründet wurde. Ab 1985 hat Phil Karn eine Multi-Verbindung TCP-Anwendung für Ham-Radio-Systeme (KA9Q TCP) erstellt. Die Verbreitung von TCP/IP wurde im Juni 1989 weiter vorangetrieben, als die University of California, Berkeley vereinbarte, den für BSD UNIX entwickelten TCP/IP-Code in die öffentliche Domäne zu stellen. Verschiedene Firmenanbieter, darunter IBM, haben diesen Code in kommerziellen TCP/IP-Software-Releases enthalten. Microsoft veröffentlichte einen nativen TCP/IP-Stack in Windows 95. Diese Veranstaltung half, die Dominanz von TCP/IP gegenüber anderen Protokollen auf Microsoft-basierten Netzwerken zu zementieren, die IBMs Systems Network Architecture (SNA) und auf anderen Plattformen wie dem DECnet der Digital Equipment Corporation, Open Systems Interconnection (OSI) und Xerox Network Systems (XNS) umfassten. In den späten 1980er und frühen 1990er Jahren wurden jedoch Ingenieure, Organisationen und Nationen über die Frage, welcher Standard, das OSI-Modell oder die Internet-Protokoll-Suite zu den besten und robuststen Computernetzwerken führen würde, polarisiert. Formelle Spezifikation und Normen Die technischen Standards, die der Internet-Protokoll-Suite zugrunde liegen, und deren Bestandteile Protokolle wurden der Internet Engineering Task Force (IETF) übertragen. Die charakteristische Architektur der Internet Protocol Suite ist ihre breite Aufteilung in den Einsatzbereich der Protokolle, die ihre Kernfunktionalität darstellen. Die definierende Spezifikation der Suite ist RFC 1122, die im Wesentlichen vier Abstraktionsschichten umgibt. Diese haben den Test der Zeit, da der IETF diese Struktur nie geändert hat. Als solches Modell der Vernetzung setzt die Internet Protocol Suite das OSI-Modell vor, ein umfassenderer Bezugsrahmen für allgemeine Netzwerksysteme. Die wichtigsten architektonischen Prinzipien Das End-to-End-Prinzip hat sich im Laufe der Zeit entwickelt. Der ursprüngliche Ausdruck brachte die Aufrechterhaltung von Zustand und allgemeine Intelligenz an den Rändern und nahm an, dass das Internet, das die Ränder angeschlossen, keinen Zustand beibehalten und auf Geschwindigkeit und Einfachheit konzentriert. Real-world-Anforderungen für Firewalls, Netzwerk-Adress-Übersetzer, Web-Content-Caches und dergleichen haben in diesem Prinzip Änderungen erzwungen. Das Robustheitsprinzip besagt: "Im Allgemeinen muss eine Umsetzung in ihrem Sendeverhalten konservativ und in ihrem Empfangsverhalten liberal sein. Das heißt, es muss vorsichtig sein, gut ausgebildete Datengramme zu senden, aber jedes Datengramm akzeptieren, das es interpretieren kann (z.B. nicht gegen technische Fehler, bei denen die Bedeutung noch klar ist). " "Der zweite Teil des Prinzips ist fast so wichtig: Software auf anderen Hosts kann Mängel enthalten, die es unklug machen, rechtliche, aber verdeckte Protokollfunktionen auszunutzen. " Die Verkapselung dient der Abstraktion von Protokollen und Diensten. Die Kapselung ist in der Regel mit der Aufteilung der Protokoll-Suite in Schichten der allgemeinen Funktionalität ausgerichtet. Im Allgemeinen verwendet eine Anwendung (die höchste Ebene des Modells) eine Reihe von Protokollen, um ihre Daten auf die Schichten zu senden. Die Daten werden auf jeder Ebene weiter gekapselt. Ein frühes Architekturdokument, RFC 1122, betont architektonische Prinzipien über Schichtung. RFC 1122, mit dem Titel Host-Anforderungen, ist in Absätzen mit Bezug auf Schichten strukturiert, aber das Dokument bezieht sich auf viele andere architektonische Prinzipien und betont nicht Schichtung. Es definiert lose ein vierschichtiges Modell, wobei die Schichten Namen, keine Zahlen, wie folgt haben: Die Anwendungsschicht ist der Bereich, in dem Anwendungen oder Prozesse, Benutzerdaten erstellen und diese Daten an andere Anwendungen auf einem anderen oder demselben Host übermitteln. Die Anwendungen nutzen die von den darunterliegenden unteren Schichten bereitgestellten Dienste, insbesondere die Transportschicht, die zuverlässige oder unzuverlässige Rohre zu anderen Prozessen liefert. Die Kommunikationspartner zeichnen sich durch die Anwendungsarchitektur aus, wie das Client-Server-Modell und Peer-to-Peer-Netzwerk. Dies ist die Ebene, in der alle Anwendungsprotokolle, wie SMTP, FTP, SSH, HTTP, funktionieren. Prozesse werden über Ports, die im Wesentlichen Dienste darstellen, angesprochen. Die Transportschicht führt Host-to-Host-Kommunikation auf dem lokalen Netzwerk oder Remote-Netzwerke durch Router. Es bietet einen Kanal für die Kommunikationsbedürfnisse von Anwendungen. UDP ist das grundlegende Transportschichtprotokoll, das einen unzuverlässigen verbindungslosen Datagram-Service bietet. Das Transmission Control Protocol bietet eine Durchflusskontrolle, Verbindungsaufbau und eine zuverlässige Übertragung von Daten. Die Internet-Schicht tauscht Datagramme über Netzwerkgrenzen aus. Es bietet eine einheitliche Netzwerkschnittstelle, die die eigentliche Topologie (Layout) der zugrunde liegenden Netzwerkverbindungen verbirgt. Es ist daher auch die Schicht, die die Internet-Bearbeitung feststellt. In der Tat definiert und stellt sie das Internet fest. Diese Schicht definiert die für die TCP/IP Protokoll-Suite verwendeten Adressierungs- und Routingstrukturen. Das primäre Protokoll in diesem Bereich ist das Internetprotokoll, das IP-Adressen definiert. Seine Funktion beim Routing besteht darin, Datengramme zum nächsten Host zu transportieren, der als IP-Router fungiert, der die Vernetzung zu einem Netzwerk näher an das Enddatenziel hat. Die Linkschicht definiert die Vernetzungsmethoden im Rahmen der lokalen Netzwerkverbindung, auf der Hosts kommunizieren, ohne Router zu intervenieren. Diese Schicht enthält die Protokolle, die zur Beschreibung der lokalen Netzwerktopologie und der Schnittstellen verwendet werden, die erforderlich sind, um die Übertragung von Internet-Layer-Datengrammen auf Next-Nighbor-Hosts zu beeinflussen. Link-Schicht Die Protokolle der Linkschicht arbeiten im Rahmen der lokalen Netzwerkverbindung, an der ein Host angeschlossen ist. Dieses Regime wird als Link in TCP/IP-Palance bezeichnet und ist die niedrigste Komponente der Suite. Der Link enthält alle Hosts, die ohne Router erreichbar sind. Die Größe der Verbindung wird daher durch die netzende Hardware-Konstruktion bestimmt. Grundsätzlich ist TCP/IP hardwareunabhängig ausgebildet und kann über nahezu jede Link-Layer-Technologie realisiert werden. Dazu gehören nicht nur Hardware-Implementierungen, sondern auch virtuelle Link-Schichten wie virtuelle private Netzwerke und Netzwerktunnel. Die Link-Schicht wird verwendet, um Pakete zwischen den Internet-Schicht-Schnittstellen von zwei verschiedenen Hosts auf demselben Link zu bewegen. Die Prozesse des Sendens und Empfangens von Paketen auf dem Link können im Gerätetreiber für die Netzwerkkarte, sowie in der Firmware oder durch spezialisierte Chipsätze gesteuert werden. Diese führen Funktionen, wie z.B. Friaming, zur Herstellung der Internet-Schichtpakete zur Übertragung und übertragen schließlich die Rahmen an die physikalische Schicht und über ein Übertragungsmedium. Das TCP/IP-Modell enthält Spezifikationen für die Überführung der im Internet Protocol verwendeten Netzwerk-Adressierungsmethoden auf Link-Layer-Adressen, wie Medienzugriffssteuerung (MAC)-Adressen. Alle anderen Aspekte unterhalb dieser Ebene werden jedoch implizit angenommen, dass sie existieren und nicht explizit im TCP/IP-Modell definiert sind. Die Linkschicht im TCP/IP-Modell hat entsprechende Funktionen in Layer 2 des OSI-Modells. Internetschicht Internetworking erfordert das Senden von Daten aus dem Quellnetzwerk in das Zielnetzwerk. Dieser Prozess wird als Routing bezeichnet und wird durch Host-Adressierung und Identifikation mit dem hierarchischen IP-Adressierungssystem unterstützt. Die Internet-Schicht bietet eine unzuverlässige Datenübertragungsanlage zwischen Hosts, die sich auf potenziell unterschiedlichen IP-Netzwerken befinden, indem sie Datengramme an einen geeigneten Next-Hop-Router zur weiteren Weiterleitung an ihr Ziel weiterleitet. Die Internet-Schicht hat die Verantwortung, Pakete über potenziell mehrere Netzwerke zu senden. Mit dieser Funktionalität ermöglicht die Internet-Schicht eine Internet-Bearbeitung, die Interworking verschiedener IP-Netzwerke und baut im Wesentlichen das Internet auf. Die Internetschicht unterscheidet nicht zwischen den verschiedenen Transportschichtprotokollen. IP trägt Daten für eine Vielzahl von verschiedenen Oberschichtprotokollen. Diese Protokolle werden jeweils durch eine eindeutige Protokollnummer gekennzeichnet: beispielsweise sind das Internet Control Message Protocol (ICMP) und das Internet Group Management Protocol (IGMP) Protokolle 1 bzw. 2. Das Internet-Protokoll ist der Hauptbestandteil der Internet-Schicht, und es definiert zwei Adressierungssysteme, um Netzwerkhosts zu identifizieren und sie im Netzwerk zu lokalisieren. Das ursprüngliche Adresssystem des ARPANET und seines Nachfolgers, das Internet, ist Internet Protocol Version 4 (IPv4). Es verwendet eine 32-Bit-IP-Adresse und ist daher in der Lage, etwa vier Milliarden Hosts zu identifizieren. Diese Einschränkung wurde 1998 durch die Standardisierung der Internet Protocol Version 6 (IPv6) beseitigt, die 128-Bit-Adressen verwendet. Die IPv6-Produktionsdurchführungen sind im Jahr 2006 entstanden. Transportschicht Die Transportschicht stellt grundlegende Datenkanäle fest, die Anwendungen für einen aufgabenspezifischen Datenaustausch verwenden. Die Schicht stellt Host-to-Host-Konnektivität in Form von End-to-End-Nachrichtenübertragungsdiensten fest, die unabhängig vom zugrunde liegenden Netzwerk sind und unabhängig von der Struktur der Nutzerdaten und der Logistik des Informationsaustauschs sind. Konnektivität an der Transportschicht kann als entweder verbindungsorientiert, in TCP implementiert oder verbindungslos in UDP implementiert eingestuft werden. Die Protokolle in dieser Schicht können Fehlerkontrolle, Segmentierung, Durchflusskontrolle, Staukontrolle und Applikationsadressen (Portnummern) bereitstellen. Zur Bereitstellung von prozessspezifischen Übertragungskanälen für Anwendungen stellt die Schicht das Konzept des Netzwerkports fest. Dies ist ein nummeriertes logisches Konstrukt, das speziell für jeden der Kommunikationskanäle eine Anwendung benötigt. Für viele Arten von Dienstleistungen wurden diese Portnummern standardisiert, so dass Client-Computer bestimmte Dienste eines Server-Computers ohne die Einbeziehung von Service-Erkennungen oder Verzeichnis-Dienste ansprechen können. Da IP nur eine optimale Lieferung bietet, bieten einige Transport-Layer-Protokolle Zuverlässigkeit. TCP ist ein verbindungsorientiertes Protokoll, das zahlreiche Zuverlässigkeitsprobleme bei der Bereitstellung eines zuverlässigen Byte-Streams anspricht: Daten kommen in-order-Daten haben minimalen Fehler (d.h. Korrektheit) Duplikate Daten werden verworfen verloren oder verworfene Pakete werden zurückgehalten einschließlich Verkehrsstaussteuerung Das neuere Stream Control Transmission Protocol (SCTP) ist auch ein zuverlässiger, verbindungsorientierter Transportmechanismus. Es ist Nachrichtenstrom-orientiert, nicht Byte-stream-orientiert wie TCP, und bietet mehrere Streams, die über eine einzige Verbindung multiplexiert sind. Es bietet auch eine Multihoming-Unterstützung, bei der ein Anschlussende durch mehrere IP-Adressen (die mehrere physikalische Schnittstellen darstellen) dargestellt werden kann, so dass bei Ausfall der Verbindung die Verbindung nicht unterbrochen wird. Es wurde zunächst für Telefonanwendungen entwickelt (zum Transport von SS7 über IP). Die Zuverlässigkeit kann auch dadurch erreicht werden, dass IP über ein zuverlässiges Daten-Link-Protokoll wie die High-Level Data Link Control (HDLC) betrieben wird. Das User Datagram Protocol (UDP) ist ein verbindungsloses Datagram Protokoll. Wie IP ist es ein am besten funktionierendes, unzuverlässiges Protokoll. Die Zuverlässigkeit wird durch Fehlererkennung mittels eines Prüfsummenalgorithmus behoben. UDP wird typischerweise für Anwendungen wie Streaming-Medien (Audio, Video, Voice over IP etc.) verwendet, bei denen die On-Time-Ankunft wichtiger ist als die Zuverlässigkeit, oder für einfache Abfrage/Response-Anwendungen wie DNS-Lookups, bei denen der Overhead der Einrichtung einer zuverlässigen Verbindung überproportional groß ist. Das Echtzeit-Transportprotokoll (RTP) ist ein Datengrammprotokoll, das über die UDP verwendet wird und für Echtzeitdaten wie Streaming-Medien ausgelegt ist. Die Anwendungen an einer beliebigen Netzwerkadresse zeichnen sich durch ihren TCP- oder UDP-Port aus. Durch die Konvention werden bestimmte bekannte Ports mit speziellen Anwendungen verbunden. Die Transport- oder Host-to-Host-Schicht des TCP/IP-Modells entspricht etwa der vierten Schicht im OSI-Modell, auch Transportschicht genannt. Anwendungsschicht Die Anwendungsschicht umfasst die Protokolle, die von den meisten Anwendungen zur Bereitstellung von Benutzerdiensten verwendet werden oder den Austausch von Anwendungsdaten über die Netzwerkverbindungen, die durch die unteren Level-Protokolle festgelegt werden, ermöglichen. Dies kann einige grundlegende Netzwerk-Support-Dienste wie Routing-Protokolle und Host-Konfiguration umfassen. Beispiele für Anwendungsschichtprotokolle sind das Hypertext Transfer Protocol (HTTP,) das Dateiübertragungsprotokoll (FTP,) das Simple Mail Transfer Protocol (SMTP,) und das Dynamic Host Configuration Protocol (DHCP). Gemäß Anwendungsschichtprotokollen kodierte Daten werden in Transportschichtprotokolleinheiten (wie TCP-Streams oder UDP-Datengramme) eingekapselt, die wiederum untere Schichtprotokolle zur eigentlichen Datenübertragung verwenden.Das TCP/IP-Modell berücksichtigt nicht die Spezifik der Formatierung und Darstellung von Daten und definiert keine zusätzlichen Schichten zwischen der Applikations- und Transportschicht wie im OSI-Modell (Präsentations- und Sitzungsschichten). Entsprechend dem TCP/IP-Modell sind solche Funktionen der Bereich von Bibliotheken und Anwendungsprogrammierungsschnittstellen. Die Applikationsschicht im TCP/IP-Modell wird oft mit einer Kombination aus der fünften (Session,) sechsten (Präsentation) und siebenten (Anwendung) Schichten des OSI-Modells verglichen. Anwendungsschichtprotokolle sind häufig mit bestimmten Client-Server-Anwendungen verbunden, und gemeinsame Dienste haben bekannte Portnummern reserviert von der Internet Assigned Numbers Authority (IANA). Zum Beispiel verwendet das HyperText Transfer Protocol Serverport 80 und Telnet verwendet Serverport 23. Clients, die mit einem Dienst verbunden sind, verwenden in der Regel ephemerale Ports, d.h. Portnummern, die nur für die Dauer der Transaktion zu zufällig oder aus einem bestimmten Bereich in der Anwendung konfiguriert sind. Das TCP/IP-Modell unterscheidet auf der Anwendungsschicht zwischen Benutzerprotokollen und Supportprotokollen. Unterstützungsprotokolle bieten Dienste an ein System von Netzwerkinfrastruktur. Benutzerprotokolle werden für aktuelle Benutzeranwendungen verwendet. FTP ist beispielsweise ein Benutzerprotokoll und DNS ist ein Support-Protokoll. Obwohl sich die Anwendungen in der Regel von Schlüsselqualitäten der Transportschichtverbindung, wie Endpunkt-IP-Adressen und Portnummern, bewusst sind, behandeln Anwendungsschichtprotokolle in der Regel die Transportschicht (und tiefere) Protokolle als schwarze Boxen, die eine stabile Netzwerkverbindung bieten, über die zu kommunizieren. Die Transportschicht und die unteren Ebenenschichten sind mit den Spezifika der Anwendungsschichtprotokolle nicht beunruhigt. Router und Switche untersuchen den gekapselten Verkehr nicht, sondern sie liefern nur eine Leitung dafür. Allerdings verwenden einige Firewall- und Bandbreitendrosselanwendungen eine tiefe Paketinspektion, um Anwendungsdaten zu interpretieren. Ein Beispiel ist das Resource Reservation Protocol (RSVP). Es ist manchmal auch notwendig, dass Anwendungen, die von NAT betroffen sind, die Anwendungs-Payload berücksichtigen. Ebenennamen und Anzahl der Schichten in der Literatur Die folgende Tabelle zeigt verschiedene Netzwerkmodelle. Die Anzahl der Schichten variiert zwischen drei und sieben. Einige der Netzwerkmodelle stammen aus Lehrbüchern, die sekundäre Quellen sind, die mit der Absicht von RFC 1122 und anderen IETF-Primärquellen kollidieren können. Vergleich der TCP/IP- und OSI-Schichtung Die drei Deckschichten im OSI-Modell, d.h. die Applikationsschicht, die Präsentationsschicht und die Sitzungsschicht, zeichnen sich im TCP/IP-Modell, das nur eine Auftragsschicht oberhalb der Transportschicht aufweist, nicht gesondert aus. Während einige reine OSI-Protokoll-Anwendungen, wie X.400, sie auch kombiniert, gibt es keine Anforderung, dass ein TCP/IP-Protokoll-Stapel monolithische Architektur über der Transportschicht aufzwingen muss. Beispielsweise läuft das NFS-Anwendungsprotokoll über das Präsentationsprotokoll Externe Datendarstellung (XDR), das wiederum über ein Protokoll mit dem Namen Remote Procedure Call (RPC) läuft. RPC bietet eine zuverlässige Datensatzübertragung, so dass es den besten UDP-Transport sicher nutzen kann. Verschiedene Autoren haben das TCP/IP-Modell unterschiedlich interpretiert und widersprechen, ob die Linkschicht oder irgendein Aspekt des TCP/IP-Modells OSI-Schicht 1 (physikalische Schicht) Probleme abdeckt oder ob TCP/IP eine Hardwareschicht unterhalb der Linkschicht annimmt. Mehrere Autoren haben versucht, die Schichten 1 und 2 des OSI-Modells in das TCP/IP-Modell einzubeziehen, da diese allgemein in modernen Standards (z.B. von IEEE und ITU) genannt werden. Dies führt oft zu einem Modell mit fünf Schichten, bei dem die Linkschicht oder Netzwerkzugangsschicht in die Schichten 1 und 2 des OSI-Modells aufgeteilt wird. Der Entwicklungsaufwand für die IETF-Protokolle geht nicht um eine strenge Schichtung. Einige seiner Protokolle können nicht sauber in das OSI-Modell passen, obwohl RFCs manchmal darauf verweisen und oft die alten OSI-Schichtennummern verwenden. Der IETF hat wiederholt erklärt, dass das Internetprotokoll und die Architekturentwicklung nicht OSI-konform sein sollen. RFC 3439, bezogen auf die Internet-Architektur, enthält einen Abschnitt mit dem Titel: "Layering betrachtet Harmful". Beispielsweise gelten die Sitzungs- und Präsentationsschichten der OSI-Suite als in der Anwendungsschicht der TCP/IP-Suite enthalten. Die Funktionalität der Session-Schicht kann in Protokollen wie HTTP und SMTP gefunden werden und ist in Protokollen wie Telnet und dem Session Initiation Protocol (SIP) deutlicher. Die Session-Layer-Funktionalität wird auch mit der Portnummerierung der TCP- und UDP-Protokolle realisiert, die in der Transportschicht der TCP/IP-Suite enthalten sind. Funktionen der Präsentationsschicht werden in den TCP/IP-Anwendungen mit dem MIME-Standard im Datenaustausch realisiert. IETF-Protokolle können rekursiv verkapselt werden, wie es durch Tunneling-Protokolle wie Generic Routing Encapsulation (GRE) gezeigt wird. GRE verwendet den gleichen Mechanismus, den OSI für den Tunnel an der Netzwerkschicht verwendet. Durchführung Die Internet-Protokoll-Suite setzt keine bestimmte Hardware- oder Softwareumgebung voraus. Es ist nur erforderlich, dass Hardware und Softwareschicht vorhanden sind, die in der Lage sind, Pakete auf einem Computernetzwerk zu senden und zu empfangen. Dadurch wurde die Suite auf im Wesentlichen jeder Rechenplattform implementiert. Eine minimale Umsetzung von TCP/IP umfasst Folgendes: Internet Protocol (IP), Address Resolution Protocol (ARP,) Internet Control Message Protocol (ICMP,) Transmission Control Protocol (TCP,) User Datagram Protocol (UDP,) und Internet Group Management Protocol (IGMP). Zusätzlich zu IP, ICMP, TCP, UDP, Internet Protocol Version 6 erfordert Neighbor Discovery Protocol (NDP,) ICMPv6 und Multicast Listener Discovery (MLD) und wird oft von einer integrierten IPSec Sicherheitsschicht begleitet. Anwendungsprogrammierer betreffen typischerweise nur Schnittstellen in der Applikationsschicht und oft auch in der Transportschicht, während die darunterliegenden Schichten Dienste des TCP/IP-Stacks im Betriebssystem darstellen. Die meisten IP-Implementierungen sind Programmierern über Steckdosen und APIs zugänglich. Einzigartige Implementierungen umfassen Lightweight TCP/IP, einen Open Source Stack, der für eingebettete Systeme konzipiert ist, und KA9Q NOS, einen Stack und zugehörige Protokolle für Amateurpaketfunksysteme und über serielle Leitungen verbundene Personalcomputer. Microcontroller Firmware im Netzwerkadapter behandelt typischerweise Link-Probleme, unterstützt von Treibersoftware im Betriebssystem. Eine nicht programmierbare analoge und digitale Elektronik ist in der Regel für die physikalischen Komponenten unterhalb der Linkschicht verantwortlich, typischerweise unter Verwendung eines anwendungsspezifischen integrierten Schaltkreises (ASIC)-Chipsatzes für jede Netzwerkschnittstelle oder andere physikalische Standards. Leistungsstarke Router basieren in großem Umfang auf einer schnellen, nicht programmierbaren digitalen Elektronik, die die Link-Level-Schaltung durchführt. Siehe auch BBN Report 1822, ein frühschichtiges Netzwerkmodell FLIP (Protokoll) (schneller lokaler Internet-Protokoll-Stapel)Verhalten von Automatisierungsprotokollen Liste der Informationstechnologie Akronyme Liste der IP-Protokollnummern Liste der Netzwerkprotokolle Liste der TCP- und UDP-Portnummern Bibliographie Douglas E. Comer. Internetbearbeitung mit TCP/IP – Prinzipien, Protokolle und Architektur. ISBN 86-7991-142-9 Joseph G. Davies und Thomas F. Lee.Microsoft Windows Server 2003 TCP/IP Protokolle und Services.ISBN 0-7356-1291-9 Forouzan, Behrouz A. (2003). TCP/IP Protokoll Suite (2. ed.). McGraw-Hill.ISBN 978-0-07-2460-5.Craig Hunt TCP/IP Network Administration.O'Reilly (1998) ISBN 1-56592-322-7 Maufer, Thomas A. (1999). IP Fundamentals. Prentice Hall.ISBN 978-0-13-975483-8.Ian McLean.Windows(R)2000 TCP/IP Black Book.ISBN 1-57610-687-X Ajit MungalePro .NET 1.1 Network Programming. ISBN 1-59059-345-6 W. Richard Stevens.TCP/IP Illustriert, Band 1: The Protocols.ISBN 0-201-63346-9 W. Richard Stevens und Gary R. Wright.TCP/IP Illustriert, Band 2: Die Umsetzung.ISBN 0-201-63354-X W. Richard Stevens.TCP/IP Illustriert, Band 3: TCP für Transaktionen, HTTP, NNTP und die UNIX Domain Protocols.ISBN 0-201-63495-3 Andrew S. Tanenbaum. Computer Networks.ISBN 0-13-066102-3 Clark, D. (1988). "Die Designphilosophie der DARPA-Internetprotokolle". Symposium über Kommunikationsarchitekturen und Protokolle - SIGCOMM '88 (PDF). SIGCOMM '88 Symposium über Kommunikationsarchitekturen und -protokolle.ACM.pp.106–114.doi:10.1145/52324.52336.ISBN 978-0897912792.S2CID 6156615. Erholt am 16. Oktober 2011. Referenzen Externe Links Internetgeschichte – Seiten auf Robert Kahn, Vinton Cerf und TCP/IP (rezensiert von Cerf und Kahn). RFC 675 – Spezifikation des Internet-Übertragungssteuerungsprogramms, Dezember 1974 Version RFC 1180A TCP/IP Tutorial – von der Internet Engineering Task Force (Januar 1991)TCP/IP FAQ Der TCP/IP Guide – Ein umfassender Blick auf die Protokolle und die Verfahren/Prozesse beteiligt Eine Studie des ARPANET TCP/IP Digest TCP/IP Sequence Diagrams Daryl's TCP/IP Prime