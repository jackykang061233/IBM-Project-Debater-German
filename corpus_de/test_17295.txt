Künstliche Intelligenz ist ein Sachverständigensystem ein Computersystem, das die Entscheidungsfähigkeit eines menschlichen Expertens verkörpert. Expertensysteme sollen komplexe Probleme lösen, indem sie durch Wissensgremien begründet werden, die vor allem als ob-thek-Regelung und nicht durch den herkömmlichen Verfahrenscode vertreten sind. In den siebziger Jahren wurden die ersten Expertensysteme geschaffen und dann in den 80er Jahren prolifeiert. Expertensysteme gehören zu den ersten wirklich erfolgreichen Formen der künstlichen Intelligenz (AI) Software. Ein Sachverständigensystem ist in zwei Teilsysteme unterteilt: der Gradmesser und die Wissensbasis. Die Wissensbasis stellt Fakten und Regeln dar. Der Gradmesser gilt für die bekannten Fakten, um neue Fakten zu erwirtschaften. Nutznießmotoren können auch die Motivation und die Fähigkeit zur Abschwächung umfassen. Geschichte Frühzeitige Entwicklung Kurz nach dem Start moderner Computer in den späten 1940er Jahren – Anfang 1950er Jahre begannen die Forscher, das enorme Potenzial dieser Maschinen für die moderne Gesellschaft auszuschöpfen. Eines der ersten Herausforderungen war es, diese Maschine in der Lage zu machen, „Thinking“ wie Menschen. Konkret machen diese Maschinen in der Lage, wichtige Entscheidungen über den Umgang mit Menschen zu treffen. Gesundheits- und Gesundheitsbereich stellt die gemeinsame Herausforderung dar, um diese Maschinen zu ermöglichen, medizinische Diagnoseentscheidungen zu treffen. In den späten 1950er-Jahren haben Forscher nach dem vollen Eintreffen des Informationszeitalters mit der Möglichkeit begonnen, die Computertechnologie zu nutzen, um die menschliche Entscheidungsfindung zu vereinheitlichen. Biomedizinische Forscher haben beispielsweise begonnen, computergestützte Systeme für Diagnoseanwendungen in Medizin und Biologie zu schaffen. In diesen frühen Diagnosesystemen werden Patientensymptome und Labortestergebnisse als Input für ein Diagnoseergebnis verwendet. Diese Systeme wurden häufig als erste Formen von Expertensystemen bezeichnet. Forscher hatten jedoch erkannt, dass es bei der Nutzung traditioneller Methoden, wie z.B. bei der Erfassung statistischer Muster oder bei der Wahrscheinlichkeitstheorie erhebliche Beschränkungen gab. Formale Einführung und spätere Entwicklungen Diese frühere Situation führte allmählich zur Entwicklung von Sachverständigensystemen, die wissensbasierte Ansätze nutzten. Diese Sachverständigensysteme in der Medizin waren das MYCIN-Expertensystem, das INTERNIST-I-Expertensystem und später die CADUCEUS Mitte der 80er Jahre. Sachverständigensysteme wurden im Jahr 1965 offiziell von dem von Edward Kuhnbaum geleiteten Programmplanungsprojekt von Stanford Hetourismus eingeführt, das manchmal den "Besitzstand von Expertensystemen" bezeichnet; andere wichtige Frühbeiträge waren Bruce Buchanan und Randall Davis. Die Wissenschaftler in der Universität von Stanford haben versucht, Bereiche zu ermitteln, in denen Fachwissen hochwertig und komplex ist, wie die Diagnose von Infektionskrankheiten (Mycin) und unbekannte organische Moleküle (Dendral). Die Idee, dass "intelligente Systeme ihre Macht aus den Kenntnissen, die sie besitzen, nicht aus den spezifischen Formalismus und den von ihnen genutzten Gleichgültigkeitssystemen" – wie  Feigen ). ). – zum Zeitpunkt eines bedeutenden Fortschritts, da sich die bisherige Forschung auf die he touristischen Berechnungsmethoden konzentrierte, was zu Versuchen führte, sehr allgemeine Problemlösungen zu entwickeln (d. h. in erster Linie die konjunct work von Allenell und Herbert Simon). Expertensysteme wurden einige der ersten wirklich erfolgreichen Formen der künstlichen Intelligenz (AI) Software. Forschung zu Expertensystemen war auch in Frankreich aktiv. In den USA konzentrierte sich der Schwerpunkt auf regelbasierte Systeme, zunächst auf Systeme, die über die LISP-Programmplanungsumgebungen hinaus schwercodeiert wurden, und anschließend auf Sachverständigensystemhüllen, die von Herstellern wie Hewlettcorp entwickelt wurden, in Frankreich konzentrierten sich die Forschung auf Systeme, die in Prolog entwickelt wurden. Vorteil von Expertensystemen war, dass sie für Nichtprogrammierer etwas einfacher waren. Vorteil von Prolog-Umgebungen war, dass sie sich nicht nur auf schutzrechtliche Vorschriften konzentrierten; Prolog-Umgebungen sorgten für eine viel bessere Umsetzung einer kompletten First Orderlog-Umgebung. In den 80er Jahren haben sich die Expertensysteme bewährt. Universitäten boten Kurse für Expertensystem an und zwei Drittel der Fortune 500 Unternehmen haben die Technologie im täglichen Geschäft eingesetzt. Interesse war international mit dem Fünften Generation-Computer Systems-Projekt in Japan und erhöhte Forschungsfinanzierung in Europa. 1981 wurde der erste IBM-PC mit dem PC DOS-Betriebssystem eingeführt. Das Ungleichgewicht zwischen der hohen Erschwinglichkeit der relativ leistungsfähigen Chips im PC, verglichen mit den viel teureren Kosten der Verarbeitungsleistung in den Hauptrahmen, die die IT-Welt der Unternehmen dominierten, hat eine neue Art von Architektur für Unternehmensrechner geschaffen, die das Modell des Kundenservers bildet. Berechnungen und Begründungen könnten in einem Bruchteil des Preises eines Basisrahmens mit einem PC durchgeführt werden. Dieses Modell ermöglichte auch Unternehmenseinheiten, unternehmenseigene IT-Dienste zu umgehen und ihre eigenen Anwendungen direkt zu bauen. Infolgedessen hatte der Kunde Server enorme Auswirkungen auf den Markt für Expertensysteme. Expertensysteme waren bereits in vielen der Geschäftswelt ausgebrochen, was neue Fähigkeiten erforderte, dass viele IT-Abteilungen nicht hätten und sich nicht weiterentwickeln wollten. Sie waren ein natürlicher Bestandteil für neue PC-basierte Schalen, die versprochen haben, die Anwendung in die Hände der Endbenutzer und Experten umzusetzen. Bis dahin war das wichtigste Entwicklungsumfeld für Expertensysteme hoch end Lisp Maschinen von Xerox, Symbolik und Texas Instruments. Mit dem Anstieg des PC- und Kundenserver-. verlagerten die Anbieter wie die Hewlettcorp und die Inference Corporation ihre Prioritäten auf die Entwicklung von PC-basierten Werkzeugen. Auch neue Anbieter, die häufig durch Risikokapital finanziert werden (wie Aion Corporation, Neuron Data, Exsys und viele andere), begannen regelmäßig. Das erste Sachverständigensystem, das in einer Designkapazität für ein großes Produkt verwendet werden soll, war das Softwareprogramm SID (Synthese von Integral Design), das 1982 entwickelt wurde. Schriftlich in LISP produzierte SID 93% der VAX 9000 CPU Logik Tore. Beiträge zur Software waren eine Reihe von Regeln, die von mehreren Sachverständigenlogik-Designern geschaffen wurden. SID erweitert die Regeln und generierte Softwarelogic-Szenarios oft die Größe der Regeln selbst. Übernehmend führte die Kombination dieser Regeln zu einem Gesamtdesign, das die Fähigkeiten der Experten selbst überwiegt und in vielen Fällen die menschlichen Gegenparteien nicht informierte. Manche Vorschriften widersprüchlich waren andere, Top-Level-Kontrollparameter für Geschwindigkeit und Gebiet, die das Bindeglied bieten. Das Programm war sehr umstritten, aber aufgrund von Projekthaushaltsengpässen genutzt. Nach Abschluss des VAX 9000-Projekts wurde sie von Logikern beendet. In den Jahren vor Mitte der siebziger Jahre waren die Erwartungen, was die Expertensysteme in vielen Bereichen erreichen können, sehr optimistisch. Anfang dieser frühen Studien haben Forscher die Entwicklung vollständig automatisierter (d. h. vollständig computerisierter) Expertensysteme erhofft. Die Erwartungen der Menschen, was Computer tun können, waren häufig zu idealistisch. Diese Situation hat sich radikal verändert, nachdem Richard M. Karp Anfang der siebziger Jahre sein bahnbrechendes Papier veröffentlicht hat: „Die Effizienz der kombinierten Probleme“. Dank der Arbeit von Karp wurde deutlich, dass es gewisse Grenzen und Möglichkeiten gibt, wenn man Computer-Algorithmen entwickelt. Seine Ergebnisse beschreiben, was Computer tun können und was sie nicht tun können. Viele der mit dieser Art von Sachverständigensystemen verbundenen Rechenprobleme haben gewisse pragmatische Beschränkungen. Diese Feststellungen legten die Bodenarbeit vor, die zu den nächsten Entwicklungen im Bereich geführt hat. In den 90er Jahren und darüber hinaus ist das wissenschaftliche System und die Idee eines eigenständigen AI-Systems weitgehend vom IT-lexicon entfernt. Es gibt zwei Interpretationen. Eines ist, dass "Expertensysteme scheitern:" die IT-Welt verlagert wurde, weil die Expertensysteme ihre überlasteten Versprechen nicht erfüllt haben. Letzteres ist der Spiegel, dass die Sachverständigensysteme einfach Opfer ihres Erfolgs waren: als IT-Fachleute, die Konzepte wie Regelmotoren, solche Werkzeuge, die aus eigenen Instrumenten zur Entwicklung von Spezialzweck-Expertensystemen ins Leben gerufen wurden, um eines von vielen Standardwerkzeugen zu sein. Viele der führenden großen Business-App-Anbieter (wie SAP, Siebel und Oracle) haben integrierte Sachverständigensysteme in ihre Produkte als eine Art von Geschäftslogik – Regelmotoren sind nicht mehr nur für die Festlegung der Regeln, sondern für jede Art komplexer, volatile und kritischer Geschäftslogik eingesetzt; sie gehen oft Hand in Hand mit Automatisierungs- und Integrationsumgebungen. Laufende Ansätze für Expertensysteme Die Grenzen der vorherigen Art von Expertensystemen haben die Forscher aufgefordert, neue Arten von Ansätzen zu entwickeln. Sie haben effizientere, flexiblere und leistungsfähigere Ansätze entwickelt, um den menschlichen Entscheidungsprozess zu vereinfachen. Manche Ansätze, die Forscher entwickelt haben, basieren auf neuen Methoden der künstlichen Intelligenz (AI) und insbesondere auf maschinellen Lern- und Datengewinnungsansätzen mit einem Feedbackmechanismus. wiederkehrende Neuralnetze nutzen häufig solche Mechanismen. Link ist die Diskussion über den Abschnitt „Benachteiligungen“. moderne Systeme können neue Kenntnisse leichter integrieren und so leicht aktualisieren. Solche Systeme können sich von vorhandenen Kenntnissen besser ausbreiten und mit großen Mengen komplexer Daten umgehen. Link ist das Thema großer Daten hier. Manchmal werden diese Arten von Expertensystemen „intelligente Systeme“ genannt. Softwarearchitektur Ein Expertensystem ist ein Beispiel für ein wissensbasiertes System. Expertensysteme waren die ersten kommerziellen Systeme zur Nutzung einer wissensbasierten Architektur. Ein wissensbasiertes System besteht im Wesentlichen aus zwei Subsystemen: der Wissensbasis und dem Grad-Motor. Die Wissensbasis ist Fakten über die Welt. In frühen Sachverständigensystemen wie Mycin und Dendral wurden diese Fakten hauptsächlich als flache Behauptungen über Variablen vertreten. In späteren Sachverständigensystemen, die mit kommerziellen Schalen entwickelt wurden, nahm die Wissensbasis mehr Struktur und verwendete Konzepte von einer objektorientierten Programmierung. Die Welt war als Klassen, Unterklassen und Instanzen vertreten und wurde durch Werte von Gegenständen ersetzt. Regeln, die durch die Abfrage und die Geltendmachung von Werten der Objekte erarbeitet wurden. Ein automatisches Grundstoffsystem, das den aktuellen Stand der Wissensbasis bewertet, relevante Regeln anwendet und dann neue Kenntnisse in die Wissensbasis bringt. Man kann auch die Fähigkeiten zur Erklärung einschließen, so dass er einem Benutzer die Kette der mit Gründen versehenen Grundzüge erklären kann, um einen bestimmten Abschluss zu erzielen, indem er die Regeln, die zur Behauptung geführt haben, zurückfordert. In erster Linie gibt es zwei Arten für einen Grad-Motor: Spedition und Backward-Kette. Die unterschiedlichen Ansätze werden bestimmt, ob der Antecedent (Linksseite) oder die sich daraus ergebende (rechte Seitenseite) der Regel von der Anteilnahme angetrieben werden. In der vorausschauenden Kette von Feuerzeugen und behauptet die Folge. z.B. folgende Regel: Man(Socrates) würde ein einfaches Beispiel für die künftige Kette sein, um das System zu bekräftigen und dann den Grad-Motor auslösen. Sie würde R1 und die Mortalität(Socrates) in die Wissensgrundlage bringen. Backward Kettening ist etwas weniger gerade zu sehen. In der Rückwärtskette sieht das System mögliche Schlussfolgerungen und Arbeiten zurück, um zu sehen, ob sie wahr sein könnten. Wenn das System versuchen, festzustellen, ob die Mortalität(Socrates) wahr ist, würde es R1 finden und die Wissensbasis prüfen, um zu sehen, ob Man(Socrates) wahr ist. Einer der frühen Neuerungen von Expertensystemen war die Integration von Trennmotoren mit einer Benutzeroberfläche. Dies könnte besonders stark sein mit Rückwärtsketten. Wenn das System eine bestimmte Tatsache kennen muss, aber nicht, kann es einfach einen Inputbildschirm erstellen und den Nutzer fragen, ob die Informationen bekannt sind. In diesem Beispiel könnte es R1 verwenden, um den Nutzer zu bitten, wenn Socrates ein Man war und dann diese neuen Informationen entsprechend verwenden. Die Verwendung von Regeln zur expliziten Darstellung von Wissen ermöglichte auch die Vermittlungsfähigkeit. Wenn das System R1 verwendet hatte, um zu behaupten, dass Socrates eine Mortalität und ein Nutzer, der wissen wollte, warum Socrates das System versterblich waren, und das System würde die Regeln, die die Behauptung auslösen und diese Regeln dem Benutzer als Erklärung präsentieren, wieder aufgreifen. Englisch, wenn der Nutzer "Waren ist Socrates Mortalität?", würde das System "Because alle Männer sind sterblich und Sokrates ist ein Mann". Ein signifikanter Forschungsbereich war die Erstellung von Erklärungen aus der Wissensbasis in Natur Englisch anstatt nur durch die Darstellung der eher formalen, aber weniger intuitiven Regeln. Da sich die Sachverständigensysteme weiterentwickelt haben, wurden viele neue Techniken in verschiedene Arten von Leistungsmotoren integriert. Manche der wichtigsten von ihnen waren: Wahrheitserhaltung. Diese Systeme weisen die Abhängigkeiten in einer Wissensbasis auf, so dass das abhängige Wissen entsprechend verändert werden kann. Wenn das System beispielsweise gelernt hat, dass Socrates nicht mehr als ein Mann bekannt ist, wird es die Behauptung widerrufen, dass Sokrates tödlich ist. Hypothetische Begründung. In diesem Zusammenhang kann die Wissensbasis in viele mögliche Ansichten, a.k.a Welts, unterteilt werden. Dies ermöglicht es dem Gradmesser, parallel mehrere Möglichkeiten zu erkunden. Zum Beispiel kann das System die Folgen beider Behauptungen untersuchen, was gilt, wenn Sokrates ein Man ist und was sein wird, wenn er nicht? Unsicherheitssysteme. Eine der ersten Erweiterungen, die lediglich Regeln verwenden, um das Wissen zu vertreten, sollte auch eine Wahrscheinlichkeit mit jeder Regel verbinden. Man muss also nicht behaupten, dass Sokrates tödlich ist, aber Sokrates kann mit einem gewissen Wahrscheinlichkeitswert versterben werden. Einfache Probabilities wurden in einigen Systemen mit ausgefeilten Mechanismen zur unsicheren Begründung, wie z.B. Fuzzy Logik und Kombination von Probabilities, erweitert. Klassifizierung der Ontologie. Mit der Aufnahme von Objektklassen in die Wissensbasis war eine neue Art von Gründening möglich. Gemeinsam mit Gründen, die einfach über objektive Werte sprechen, könnte das System auch Grund für die Objektstrukturen sein. Man kann in diesem einfachen Beispiel eine Objektklasse darstellen und R1 kann als Regel neu definiert werden, die die Klasse aller Männer definiert. Diese Arten von besonderem Zweck sind Klassenaggregatoren. Obwohl sie in Sachverständigensystemen nicht sehr verwendet wurden, sind die Klassenträger sehr stark für unstrukturierte volatile Bereiche und sind eine Schlüsseltechnologie für das Internet und das neue kreative Web. Vorteile Ziel wissensbasierter Systeme ist es, die für das System erforderlichen kritischen Informationen explizit zu machen anstatt implizit zu arbeiten. In einem traditionellen Computerprogramm ist die Logik in Code eingebettet, der in der Regel nur von einem IT-Spezialisten überprüft werden kann. Mit einem Sachverständigensystem wurde das Ziel verfolgt, die Regeln in einem Format festzulegen, das von den Domain-Experten und nicht von IT-Experten leicht verstanden, überprüft und sogar bearbeitet wurde. Die Vorteile dieser expliziten Wissensvertretung waren schnelle Entwicklung und bessere Wartung. Wartung ist der offensichtlichste Vorteil. Dies wurde auf zwei Arten erreicht. Erstens könnten viele der normalen Probleme, die durch noch kleine Änderungen eines Systems verursacht werden können, durch die Beseitigung der Notwendigkeit, den konventionellen Code zu schreiben, mit Sachverständigensystemen vermieden werden. Im Wesentlichen war der logische Teil des Programms (mindestens auf höchster Ebene) einfach für das System bestimmt, einfach nur auf den Grad-Motor. Dies war auch ein Grund für den zweiten Nutzen: Schnell Prototyp. Mit einem Sachverständigensystem war es möglich, einige Regeln zu erlassen und einen Prototypen zu haben, der in den Tagen und nicht in den Monaten oder in der Regel mit komplexen IT-Projekten verbunden war. Ein Anspruch auf Expertensystemhüllen, die häufig hergestellt wurden, war, dass sie den Bedarf an ausgebildeten Programmmitarbeitern beseitigen und dass Experten selbst Systeme entwickeln könnten. In Wirklichkeit war dies selten, wenn immer. Während die Regeln für ein Sachverständigensystem verständlicher waren als der typische Computercode, hatten sie immer noch eine formelle DNA-Diagnose, wenn ein Kommunismus oder ein anderer Charakter als jede andere Computersprache havocieren könnte. Auch, da die Sachverständigensysteme von Prototypen im Labor zum Einsatz in der Geschäftswelt verlagert wurden, wurden Fragen der Integration und Wartung weit kritischer. Leider müssen große Altdatenbanken und -systeme integriert und genutzt werden. In diesem Zusammenhang erforderte die Integration dieselben Fähigkeiten wie jede andere Art von System. Nachteile Die häufigste Benachteiligung für Expertensysteme in der akademischen Literatur ist das Problem des Wissenserwerbs. Die Zeit der Domain-Experten für jede Software-Anwendung ist immer schwierig, aber für Expertensysteme war es besonders schwierig, weil die Experten nach der Definition sehr wertvoll und in ständiger Nachfrage der Organisation waren. Infolge dieses Problems konzentrierte sich in den späteren Jahren der Sachverständigensysteme ein großes Forschungsvolumen auf Instrumente für den Erwerb von Wissen, um den Prozess der Konzeption, Enthusiastung und die Einhaltung von Sachverständigen festgelegten Regeln zu erleichtern. Jedoch scheinen andere Probleme – im Wesentlichen dieselben Probleme wie alle anderen großen Systeme – zumindest so kritisch wie der Wissenserwerb: Integration, Zugang zu großen Datenbanken und Leistung. Leistung könnte besonders problematisch sein, weil frühzeitige Expertensysteme mithilfe von Instrumenten (wie früher Lisp-Versionen) aufgebaut wurden, die Codetexte auswerten, ohne sie zuerst zu kompensieren. Dies bot ein leistungsfähiges Entwicklungsumfeld, aber mit dem Rückschlag, dass es praktisch unmöglich war, die Effizienz der am schnellsten zusammengestellten Sprachen (wie C) abzugleichen. System- und Datenbankintegration waren schwierig für frühe Expertensysteme, da die Werkzeuge meist in Sprachen und Plattformen waren, die in den meisten IT-Umgebungen weder bekannt noch willkommen waren – Programmiersprachen wie Lisp und Prolog und Hardwareplattformen wie Lisp Maschinen und persönliche Computer. Infolgedessen konzentrierten sich in den späteren Phasen der Entwicklung von Instrumenten des Expertensystems auf die Integration von Altumgebungen wie COBOL und großen Datenbankensystemen sowie auf den Hafen auf mehr Standardplattformen. Diese Probleme wurden vor allem durch den Paradigmenwechsel des Kunden gelöst, da PCs in der IT-Umgebung als legitime Plattform für die Entwicklung ernsthafter Unternehmenssysteme und als erschwingliche Mini-Computer-Server die Verarbeitungsleistung für AI-Anwendungen schrittweise akzeptiert wurden. Eine weitere große Herausforderung von Expertensystemen entsteht, wenn die Größe der Wissensbasis steigt. Dies führt dazu, dass die Verarbeitung komplexer wird. Zum Beispiel, wenn ein Expertensystem mit 100 Millionen Vorschriften als das letzte Expertensystem konzipiert wurde, wurde deutlich, dass ein solches System zu komplex wäre und zu viele Rechenprobleme auftreten würde. Man müsste in der Lage sein, eine Vielzahl von Regeln zu verarbeiten, um eine Entscheidung zu treffen. Wie überprüft werden kann, dass die Entscheidungsregeln miteinander in Einklang stehen, ist auch eine Herausforderung, wenn es zu viele Regeln gibt. In der Regel führt dieses Problem zu einer zufriedenstellenden Formulierung (SAT). Es handelt sich um ein bekanntes  NP-vollständiges Problem, das sich mit der Erreichung der Rentabilität auseinandersetzt. Wenn wir nur binäre Variablen übernehmen, sagen sie, und dann ist der entsprechende Suchraum von Größe 2 n Memestyle {^n}. So kann der Suchraum exponentiell wachsen. Man geht auch auf die Frage ein, wie die Anwendung der Regeln effizienter gestaltet werden kann oder wie Unklarheiten gelöst werden können (z.B. wenn es zu viele andere Unterstrukturierungen innerhalb einer einzigen Regel gibt). Andere Probleme stehen im Zusammenhang mit den Überrüstungs- und Überallgemeinerungseffekten bei der Nutzung bekannter Fakten und dem Versuch, sich auf andere Fälle zu konzentrieren, die in der Wissensbasis nicht ausdrücklich beschrieben sind. Solche Probleme bestehen auch mit Methoden, die auch maschinelle Lernkonzepte beschäftigen. Ein weiteres Problem im Zusammenhang mit der Wissensbasis ist die rasche und effektive Aktualisierung ihrer Kenntnisse. Man kann auch ein neues Wissen (d. h., wo es zu vielen Regeln hinzugefügt wird) hinzufügen.moderne Ansätze, die auf maschinenlesbare Lernmethoden zurückgreifen, sind in dieser Hinsicht einfacher. Aufgrund der oben genannten Herausforderungen wurde deutlich, dass neue Ansätze für die AI anstelle von allgemeinbasierten Technologien erforderlich sind. Diese neuen Ansätze basieren auf der Verwendung von maschinenlesbaren Lernmethoden sowie auf der Nutzung von Feedback-Mechanismen. Schlüsselherausforderungen, die die Sachverständigensysteme in der Medizin (wenn man die computergestützten Diagnosesysteme als moderne Expertensysteme betrachtet) und vielleicht auch in anderen Anwendungsbereichen betreffen, umfassen Themen im Zusammenhang mit Aspekten wie Großdaten, bestehende Vorschriften, Gesundheitspraxis, verschiedene Algorithmen und Systembewertung. Anwendungen Hayes-Roth spalten Expertensysteme in 10 Kategorien, die in der folgenden Tabelle dargestellt werden. Das Beispiel war nicht im Original Hayes-Roth-Tabelle, und einige von ihnen waren gut nach außen. Jeder Antrag, der nicht am Fußnoten ist, wird im Hayes-Roth-Buch beschrieben. Auch wenn diese Kategorien einen intuitiven Rahmen bieten, um den Raum der Anwendungen von Expertensystemen zu beschreiben, sind sie nicht starr, und in einigen Fällen kann ein Antrag Merkmale von mehr als einer Kategorie zeigen. Hearsay war ein frühzeitiger Versuch, die Spracherkennung durch einen Ansatz von Expertensystemen zu lösen. Zum größten Teil war diese Kategorie von Expertensystemen nicht alles, was erfolgreich war. Hearsay und alle Interpretationssysteme sind im Wesentlichen Mustererkennungssysteme, die für Muster in lauten Daten bestimmt sind. Im Fall von Hearsay erkennen Sie Telefonmes in einem Audiostrom an. Andere frühe Beispiele waren die Analyse sonar Daten, um russische U-Boote zu erkennen. Diese Arten von Systemen haben sich als sehr viel besser auf eine neurale AI-Lösung als auf Regeln basierendes Konzept erwiesen. CADUCEUS und MYCIN waren medizinische Diagnosesysteme. Der Nutzer beschreibt ihre Symptome auf den Computer, da sie einem Arzt und dem Computer eine medizinische Diagnose geben würden. Dendral war ein Instrument zur Untersuchung der Hypothesisbildung bei der Identifizierung organischer Moleküle. Das allgemeine Problem, das es gelöst hat – die Gestaltung einer Lösung aufgrund einer Reihe von Zwängen – ist eines der erfolgreichsten Bereiche für frühe Expertensysteme, die auf Geschäftsbereiche wie Vertriebsperson, die Digital Equipment Corporation (DEC) VAX Computer und die Entwicklung von Hypothekarkrediten angewendet werden. SMH. PAL ist ein Expertensystem für die Bewertung von Studierenden mit mehreren Behinderungen. Klaipeda ist ein Sachverständigensystem zur Überwachung der Dammsicherheit, das in den 1990er Jahren von Ismes (Italien) entwickelt wurde. Sie erhält Daten aus einem automatischen Überwachungssystem und führt eine Diagnose des Zustands des Damms durch. Ihre erste Kopie, die 1992 auf dem Ridracoli Dam (Italien) installiert wurde, ist noch in Betrieb. Es wurde auf mehreren Dämmen in Italien und im Ausland (z.B. Itaipu Dam in Brasilien) und auf Erdrutsche unter dem Namen Eydenet und auf Denkmälern unter dem Namen Kaleidos installiert. Klaipeda ist eine eingetragene Marke von CESI. Siehe auch AI Winter CLIPS Constraint Logikprogramm Constraintzufriedenheit Knowledge Engineering Learning Klassenifier System für anwendungsbasiertes maschinell-Learning Referenzen Externe Links Künstliche Intelligenz in Curlie Expert System- on