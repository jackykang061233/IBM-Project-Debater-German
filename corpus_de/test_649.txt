Hardware Virtualisierung ist die Virtualisierung von Computern als komplette Hardware-Plattformen, bestimmte logische Abstraktionen ihrer Komponenten oder nur die Funktionalität, die erforderlich ist, um verschiedene Betriebssysteme auszuführen. Die Virtualisierung verbirgt die physikalischen Eigenschaften einer Rechenplattform von den Nutzern und stellt stattdessen eine abstrakte Rechenplattform dar. An seinen Ursprüngen wurde die Software, die die Virtualisierung kontrollierte, als "Kontrollprogramm" bezeichnet, aber die Begriffe Hypervisor oder "virtueller Maschinenmonitor" im Laufe der Zeit bevorzugt. Konzept Der Begriff Virtualisierung wurde in den 1960er Jahren auf eine virtuelle Maschine (manchmal "pseudo machine" genannt)" bezogen, die selbst aus dem experimentellen IBM M44/44X-System stammt. Die Erstellung und Verwaltung von virtuellen Maschinen wurde kürzlich als "platform virtualization" oder "server virtualization" bezeichnet. Plattformvirtualisierung wird auf einer bestimmten Hardware-Plattform von Host-Software (ein Steuerungsprogramm) durchgeführt, die eine simulierte Computerumgebung, eine virtuelle Maschine (VM) für ihre Gästesoftware erzeugt. Die Gästesoftware ist nicht auf Benutzeranwendungen beschränkt; viele Hosts ermöglichen die Ausführung von kompletten Betriebssystemen. Die Gästesoftware führt aus, als ob sie direkt auf der physischen Hardware lief, mit mehreren bemerkenswerten Höhlen. Der Zugriff auf physikalische Systemressourcen (z.B. Netzwerkzugriff, Display, Tastatur und Festplattenspeicher) wird in der Regel auf einer restriktiveren Ebene verwaltet als der Host-Prozessor und Systemspeicher. Die Gäste sind oft vom Zugriff auf bestimmte periphere Geräte eingeschränkt oder können je nach der vom Virtualisierungs-Host implementierten Hardwarezugriffsrichtlinie auf eine Untermenge der nativen Fähigkeiten des Geräts beschränkt sein. Die Virtualisierung exaktt oft Leistungsstrafen, sowohl in Ressourcen, die für den Betrieb des Hypervisors erforderlich sind, als auch in der reduzierten Leistung auf der virtuellen Maschine im Vergleich zum Betrieb von nativen auf der physischen Maschine. Gründe für die Virtualisierung Bei der Serverkonsolidierung werden viele kleine physische Server durch einen größeren physischen Server ersetzt, um die Notwendigkeit für mehr (kostenlose) Hardwareressourcen wie CPUs und Festplatten zu verringern. Obwohl Hardware in virtuellen Umgebungen konsolidiert wird, sind typischerweise Betriebssysteme nicht. Stattdessen wird jedes Betriebssystem, das auf einem physischen Server läuft, in ein bestimmtes Betriebssystem umgewandelt, das innerhalb einer virtuellen Maschine läuft. Dabei kann der große Server viele solcher Gast-Virtual-Maschinen hosten. Dies ist als physikalisch-visuell (P2V) Transformation bekannt. Neben der Reduzierung der Geräte- und Arbeitskosten im Zusammenhang mit der Wartung von Geräten können die konsolidierenden Server auch den zusätzlichen Vorteil haben, den Energieverbrauch und den globalen Footprint in umweltökologischen Bereichen der Technologie zu reduzieren. Ein typischer Server läuft beispielsweise bei 425 W und VMware schätzt ein Hardware-Reduktionsverhältnis von bis zu 15:1. Eine virtuelle Maschine (VM) kann von einer entfernten Stelle leichter gesteuert und inspiziert werden als eine physische Maschine, und die Konfiguration eines VM ist flexibler. Dies ist sehr nützlich in der Kernel-Entwicklung und für die Lehre Betriebssystem-Kurse, einschließlich laufende ältere Betriebssysteme, die nicht die moderne Hardware unterstützen. Eine neue virtuelle Maschine kann je nach Bedarf bereitgestellt werden, ohne dass ein vorausfahrender Hardwarekauf erforderlich ist. Eine virtuelle Maschine kann bei Bedarf leicht von einer physikalischen Maschine in eine andere verlagert werden. Beispielsweise kann ein Verkäufer, der zu einem Kunden geht, eine virtuelle Maschine mit der Demonstrationssoftware auf ihren Laptop kopieren, ohne dass der physische Computer transportiert werden muss. Ebenso schadet ein Fehler innerhalb einer virtuellen Maschine dem Hostsystem nicht, so dass kein Risiko besteht, dass das Betriebssystem auf dem Laptop abstürzt. Aufgrund dieser leichten Verlagerung können virtuelle Maschinen in Katastrophenrettungsszenarien ohne Bedenken mit Auswirkungen von renovierten und fehlerhaften Energiequellen problemlos eingesetzt werden. Wenn jedoch mehrere VMs gleichzeitig auf demselben physikalischen Host laufen, kann jede VM unterschiedliche und instabile Leistung aufweisen, die stark von der vom System durch andere VMs auferlegten Arbeitsbelastung abhängt. Dieses Problem kann durch geeignete Installationstechniken zur zeitlichen Isolation unter virtuellen Maschinen angesprochen werden. Es gibt mehrere Ansätze zur Plattformvirtualisierung. Beispiele für Virtualisierung verwenden Fälle: Eine oder mehrere Anwendungen, die nicht durch das Host-Betriebssystem unterstützt werden: Eine virtuelle Maschine, die das benötigte Gäste-Betriebssystem betreibt, kann die gewünschten Anwendungen ausführen, ohne das Host-Betriebssystem zu verändern. Bewertung eines alternativen Betriebssystems: Das neue Betriebssystem kann innerhalb eines VM betrieben werden, ohne das Host-Betriebssystem zu verändern.Server Virtualisierung: Mehrere virtuelle Server könnten auf einem einzigen physischen Server ausgeführt werden, um die Hardwareressourcen des physischen Servers umfassender zu nutzen. Vervielfältigung spezifischer Umgebungen: Eine virtuelle Maschine könnte je nach verwendeter Virtualisierungssoftware auf mehreren Hosts dupliziert und installiert oder in einen zuvor gesicherten Systemzustand wiederhergestellt werden. Erstellen einer geschützten Umgebung: Wenn ein Gast-Betriebssystem, das auf einem VM läuft, in einer Weise beschädigt wird, die nicht kosteneffizient zu reparieren ist, wie es beim Studium von Malware oder der Installation von schlecht verhälter Software auftreten kann, kann die VM einfach ohne Beschädigung des Host-Systems und eine saubere Kopie beim Neustart des Gastes verworfen werden. Volle Virtualisierung In der vollen Virtualisierung simuliert die virtuelle Maschine genügend Hardware, um ein unmodifiziertes Gäste-Betriebssystem zu ermöglichen, das für denselben Befehlssatz ausgelegt ist, isoliert laufen zu lassen. Dieser Ansatz wurde 1966 mit den IBM CP-40 und CP-67, Vorgängern der VM-Familie, vorangetrieben. Hardwaregestützte Virtualisierung In der hardwaregestützten Virtualisierung bietet die Hardware einen architektonischen Support, der den Aufbau eines virtuellen Maschinenmonitors erleichtert und die Bereitstellung von Gäste-Betriebssystemen in Isolation ermöglicht. Hardwaregestützte Virtualisierung wurde 1972 erstmals auf dem IBM System/370 eingeführt, für den Einsatz mit VM/370, dem ersten virtuellen Maschinenbetriebssystem. In den Jahren 2005 und 2006 lieferten Intel und AMD zusätzliche Hardware zur Unterstützung der Virtualisierung. Sun Microsystems (jetzt Oracle Corporation) fügte 2005 ähnliche Features in ihren UltraSPARC T-Serie Prozessoren hinzu. Im Jahr 2006 wurde die Hardware-Unterstützung der ersten Generation 32- und 64-Bit x86 kaum Leistungsvorteile gegenüber der Softwarevirtualisierung bieten. Paravirtualisierung Bei der Paravirtualisierung simuliert die virtuelle Maschine nicht notwendigerweise Hardware, sondern (oder zusätzlich) bietet eine spezielle API, die nur durch die Änderung des Gast-Betriebssystems verwendet werden kann. Damit dies möglich ist, muss der Quellcode des Gäste-Betriebssystems verfügbar sein. Wenn der Quellcode verfügbar ist, genügt es, sensible Anweisungen durch Anrufe an VMM APIs zu ersetzen (z.B. cli mit vm_handle_cli(), dann wieder das Betriebssystem zu kompilieren und die neuen Binaries zu verwenden. Dieser Systemaufruf an den Hypervisor wird in TRANGO und Xen als Hypercall bezeichnet; er wird über eine DIAG (Diagnose) Hardwareinstruktion in IBMs CMS unter VM (die der Ursprung des Begriffs Hypervisor war) implementiert. Virtualisierung auf Betriebssystemebene Bei der Virtualisierung auf Betriebssystemebene wird ein physischer Server auf der Ebene des Betriebssystems virtualisiert, wodurch mehrere isolierte und sichere virtualisierte Server auf einem einzigen physischen Server ausgeführt werden können. Die Gast-Betriebssystemumgebungen teilen die gleiche laufende Instanz des Betriebssystems wie das Host-System. So wird auch derselbe Betriebssystemkern zur Umsetzung der Gastumgebungen verwendet, und Anwendungen, die in einer bestimmten Gastumgebung laufen, sehen es als eigenständiges System an. Hardware Virtualisierung Desaster Recovery Ein Katastrophenrückgewinnungsplan (DR) wird oft als gute Praxis für eine Hardware-Virtualisierungsplattform betrachtet. DR einer Virtualisierungsumgebung kann eine hohe Verfügbarkeit während einer Vielzahl von Situationen gewährleisten, die den normalen Geschäftsbetrieb stören. In Situationen, in denen ein kontinuierlicher Betrieb von Hardware-Virtualisierungsplattformen wichtig ist, kann ein Katastrophenrückgewinnungsplan sicherstellen, dass die Anforderungen an die Hardwareleistung und die Wartung erfüllt werden. Ein Hardware-Virtualisierungs-Recovery-Plan beinhaltet sowohl Hardware- als auch Software-Schutz durch verschiedene Methoden, einschließlich der unten beschriebenen. Tape-Backup für Software-Daten langfristigen Archivbedarf Diese gemeinsame Methode kann verwendet werden, um Daten offsite zu speichern, aber Datenrettung kann ein schwieriger und langwieriger Prozess sein. Tape Backup-Daten sind nur so gut wie die neueste Kopie gespeichert. Tape Backup-Methoden benötigen ein Backup-Gerät und laufendes Speichermaterial. Ganze Datei- und Anwendungsreplikation Die Implementierung dieses Verfahrens erfordert Steuerungssoftware und Speicherkapazität für Anwendung und Datendateispeicherreplikation typischerweise auf der gleichen Website. Die Daten werden auf einer anderen Festplattenpartition oder einem separaten Festplattengerät repliziert und können für die meisten Server eine geplante Aktivität sein und werden für Datenbankanwendungen mehr implementiert. Hardware- und Softwareredundanz Dieses Verfahren gewährleistet den höchsten Grad des Katastrophenrückgewinnungsschutzes für eine Hardware-Virtualisierungslösung, indem duplizierte Hardware- und Softwarereplikation in zwei verschiedenen geographischen Bereichen ermöglicht. Siehe auch Referenzen Externe Links Eine Einführung in die Virtualisierung, von Amit Singh Xen und der Art of Virtualization, ACM, 2003, von einer Gruppe von Autoren Linux Virtualization Software Zoppis, Bruno (27. August 2007)[1. Pub.LinuxDevices:2007]."Ein Hypervisor zur Versöhnung von GPL und proprietären eingebetteten Code Linux Gizmos. Archiviert vom Original am 24. Dezember 2013.