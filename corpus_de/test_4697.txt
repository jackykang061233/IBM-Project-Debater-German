Im Bereich der industriellen Gestaltung von Mensch-Computer-Interaktion ist eine Benutzeroberfläche (UI) der Raum, in dem Interaktionen zwischen Menschen und Maschinen auftreten. Ziel dieser Interaktion ist es, den Betrieb und die Kontrolle der Maschine vom menschlichen Ende zu ermöglichen, während die Maschine gleichzeitig Informationen zurückbringt, die den Entscheidungsprozess der Betreiber erleichtern. Beispiele für dieses breit angelegte Konzept der Benutzerschnittstellen sind die interaktiven Aspekte von Computer-Betriebssystemen, Handwerkzeugen, Hochleistungsmaschinenbetreiberkontrollen und Prozesskontrollen. Konzeptionserwägungen, die bei der Schaffung von Benutzerschnittstellen gelten, sind mit solchen Disziplinen wie ergonomische und Psychologie verbunden. Insgesamt ist das Ziel der Benutzeroberfläche, eine Benutzeroberfläche zu erstellen, die es leicht, effizient und angenehm (benutzerfreundlich) macht, eine Maschine in der Weise zu betreiben, die das gewünschte Ergebnis (d. h. eine maximale Benutzerfreundlichkeit) produziert. Dies bedeutet in der Regel, dass der Betreiber minimale Inputs bereitstellen muss, um die gewünschte Leistung zu erzielen, und dass die Maschine die unerwünschten Outputs auf den Nutzer minimiert. Benutzerschnittstellen bestehen aus einer oder mehreren Schichten, darunter eine Mensch-Maschine-Schnittstelle (HMI), die Schnittstellen mit physischen Hardware wie Tastaturen, Mäusen oder Spielpads und Output-Hardware wie Computermonitore, Redner und Druckern enthält. Ein Gerät, das ein Mensch-Schnittstellengerät (HID) umsetzt, wird als Menschschnittstelle bezeichnet. Andere Begriffe für Mensch-Maschine-Schnittstellen sind die Mensch-Maschine-Schnittstelle (MMI) und, wenn die Maschine ein Computer, eine Mensch-Computer-Schnittstelle ist. Mehr UI-Ebenen können mit einem oder mehreren menschlichen Gefühlen interagieren, darunter: tactile UI (touch), visuelle UI (sight), akkurate UI (smell), Gleichwertigkeit (Smell), Gleichgewicht (ausgewogenheit) und gu UI (Geschmack). Benutzerschnittstellen (CUIs) sind UIs, die mit zwei oder mehr Sinne interagieren. Die häufigste CUI ist eine grafische Benutzeroberfläche (GUI), die sich aus einer tactile UI und einer visuellen UI zusammensetzt, die die Grafik anzeigen kann. Wenn der Ton zu einem GUI hinzugefügt wird, wird er zu einer multimedialen Benutzeroberfläche (MUI). Es gibt drei große Kategorien von CUI: Standard, virtuelle und Augmented. Standard CUI nutzt Standard menschliche Schnittstellen wie Tastaturen, Mäuse und Computermonitore. Wenn die CUI die echte Welt um eine virtuelle Realität zu schaffen, ist die CUI virtuelle und nutzt eine virtuelle Realität. Wenn die CUI die echte Welt nicht blockiert und eine erweiterte Realität schafft, ist die CUI erweitert und nutzt eine erweiterte Realität. Wenn eine UI mit allen menschlichen Sinnen in Kontakt kommt, wird sie als eine Quarantäne bezeichnet, die nach der Theorie von qualia benannt wird. CUI kann auch von der Art und Weise erfasst werden, wie viele Sinne sie mit einer X-sense virtuellen Realitätsschnittstelle oder einer X-sense augmentierten Realitätsschnittstelle interagieren, bei der X die Zahl der Sinnesarten ist. Beispielsweise ist eine Smell-O-Vision eine 3-Sense-Standard-CUI mit visueller Anzeige, Ton und Geruch; wenn virtuelle Realitätsschnittstellen mit Geruchs und Berührung es gesagt ist, eine 4-Sense (4S) virtuelle Realität zu sein; und wenn eine erweiterte Realitätsschnittstelle mit Geruchs und Berührungspunkten darin besteht, dass sie eine 4-Sense (4S) erweiterte Realität ist. Übersicht Benutzeroberfläche oder Mensch-Maschine-Schnittstelle ist der Teil der Maschine, die die Interaktion zwischen Mensch und Maschine regelt. Membrane, Gummischlüsselpads und Touchscreens sind Beispiele für den physischen Teil der Mensch-Maschine-Schnittstelle, die wir sehen und berühren können. In komplexen Systemen ist die Mensch-Maschine-Schnittstelle in der Regel computerisiert. Mensch-Computer-Schnittstelle bezieht sich auf diese Art von System. Im Zusammenhang mit dem Computer erstreckt sich der Begriff in der Regel auch auf die Software zur Kontrolle der physikalischen Elemente, die für die Interaktion zwischen Mensch und Computer verwendet werden. Die Konstruktion von Mensch-Maschine-Schnittstellen wird durch die Prüfung von ergonomischen (menschlichen Faktoren) verbessert. Die entsprechenden Disziplinen sind Humanfaktoren Engineering (HFE) und Nutztechnik (UE), die Teil der Systemtechnik ist. Instrumente, die zur Einbeziehung menschlicher Faktoren in das Schnittstellendesign verwendet werden, basieren auf dem Wissen der Computerwissenschaft, wie Computerbilder, Betriebssysteme, Programmiersprachen. Heute verwenden wir die grafische Benutzeroberfläche für Mensch-Maschine-Schnittstelle auf Computern, denn fast alle nutzen nun Grafik. Multimodale Schnittstellen ermöglichen den Nutzern die Interaktion mit mehr als einer Modalitäten der Benutzereingabe. Terminologie Es gibt einen Unterschied zwischen einer Benutzeroberfläche und einer Benutzeroberfläche oder einer Mensch-Maschine-Schnittstelle (HMI). Die Begriff „Benutzeroberfläche“ wird oft im Zusammenhang mit (persönlichen) Computersystemen und elektronischen Geräten verwendet. Liegt ein Netz von Ausrüstungen oder Computern über ein MES (Manufacturing Implementation System) oder Host zur Anzeige von Informationen miteinander in Verbindung. Eine Mensch-Maschine-Schnittstelle (HMI) ist in der Regel lokal zu einer Maschine oder einem Gerät und ist die Schnittstelle zwischen Mensch und Ausrüstung/Maschinen. Ein Betreiber-Schnittstelle ist die Schnittstelle, mit der mehrere Geräte, die mit einem Host-Kontrollsystem verbunden sind, zugänglich oder kontrolliert werden. Das System kann mehrere Benutzerschnittstellen aufstellen, um verschiedene Arten von Nutzern zu bedienen. Zum Beispiel könnte eine computerisierte Bibliotheksdatenbank zwei Benutzerschnittstellen bieten, eine für Bibliotheks-Präsitoren (begrenzte Funktionen, optimierte Nutzung) und die andere für Bibliothekspersonal (weite Palette von Funktionen, optimiert für die Effizienz). Die Benutzeroberfläche eines mechanischen Systems, eines Fahrzeugs oder einer Industrieanlage wird manchmal als Mensch-Maschine-Schnittstelle (HMI) bezeichnet. HMI ist eine Änderung der ursprünglichen MMI-Schnittstelle (man-Maschine-Schnittstelle). In der Praxis wird die Abkürzung MMI immer noch häufig verwendet, obwohl einige behaupten können, dass MMI für etwas anders ist. Eine weitere Abkürzung ist HCI, wird jedoch eher für die menschliche – Computer-Interaktion verwendet. Andere Begriffe sind die Schnittstellenkonsole (OIC) und das Schnittstellenterminal des Betreibers (OIT). Kurz gesagt, die Begriffe beziehen sich jedoch auf die Schicht, die ein Mensch, der eine Maschine von der Maschine selbst betreibt. Ohne eine saubere und unsable Schnittstelle wäre der Mensch nicht in der Lage, mit Informationssystemen zu interagieren. In wissenschaftlicher Fiktion wird die Mensch-Maschine manchmal genutzt, um auf das zu verweisen, was besser als direkte Neural-Schnittstelle bezeichnet wird. Letztere sehen jedoch eine zunehmende Anwendung bei der tatsächlichen Verwendung von (medizinischen) Prothesen – die künstliche Verlängerung, die einen fehlenden Körperteil (z.B. Kochlear Implantate) ersetzt. In einigen Fällen könnten Computer den Nutzer beobachten und nach ihren Handlungen ohne spezielle Befehle reagieren. Ein Mittel zur Überwachung von Teilen des Körpers ist erforderlich, und Sensoren, die die Position des Kopfes, die Richtung des Amtsblatts und damit experimentelle Verwendung finden. Dies ist besonders wichtig für die Aufnahme von Schnittstellen. Geschichte Die Geschichte der Benutzerschnittstellen kann nach der marktbeherrschenden Benutzeroberfläche in folgende Phasen unterteilt werden: 1945-68: Batch-Schnittstelle In der Chargenzeit war die Rechenleistung extrem knapp und teuer. Benutzerschnittstellen waren rudimentär. Nutzer mussten Computer anstatt auf andere Weise aufnehmen; Benutzerschnittstellen wurden als überhöht angesehen, und Software war so konzipiert, dass der Verarbeiter möglichst wenig überlastet wird. Die Inputseite der Benutzerschnittstellen für Chargenmaschinen war vor allem gelockte Karten oder gleichwertige Medien wie Papierband. In diesen Medien fügte die Outputseite Druckereien hinzu. Mit der begrenzten Ausnahme der Konsole des Systembetreibers hat der Mensch nicht in Echtzeit mit Chargenmaschinen interagieren. Stellen Sie einen Job an einer beteiligten Chargenmaschine vor, zuerst ein Deck mit gestrichenenen Karten, das ein Programm und ein Dataset beschreibt. Machen Sie die Programmkarten nicht auf dem Computer selbst, sondern auf Schlüsselstrafen, spezialisierten Typautor-ähnlichen Maschinen, die nicht stark, unbedenklich und für mechanisches Versagen waren. Die Software-Schnittstelle war gleichermaßen unbedenklich, mit sehr strengen, von den kleinsten möglichen Sammlern und Dolmetschern zu begleichenden Medikamenten. Nachdem die Karten gestrichen wurden, würde man sie in einer Arbeitsschwüre verkleinern und warten. Künftig würden die Betreiber das Deck in den Computer einfhren, vielleicht die Installation von Magnetbanden, um eine andere Datenset- oder Hilfesoftware zu liefern. Der Job würde ein Printout erzeugen, das Endergebnisse oder ein Abort mit einem beigefügten Fehlerprotokoll enthält. Erfolgreiche Flüge könnten auch ein Ergebnis auf Magnetband schreiben oder einige Datenkarten generieren, die in einer späteren Berechnung verwendet werden sollen. Die Wendezeit für einen einzigen Job ist häufig über alle Tage verteilt. Wenn man sehr glücklich war, könnte es Stunden sein; es gab keine echte Antwort. Jedoch gab es schlechtere Schicksale als die Kartenschlange; einige Computer brauchten einen noch stärker verschuldeten und fehlerpronen Prozess der Umschichtung in Programmen im binären Code mit Konsolenschaltern. Die sehr frühen Maschinen mussten teilweise umgestaltet werden, um die Programmlogik in sich selbst zu integrieren, indem sie als Schalttafeln bekannte Geräte verwenden. Frühe Chargensysteme haben den gegenwärtigen Job des gesamten Computers gegeben; Programmdecks und -bänder mussten das umfassen, was wir jetzt als Betriebssystemcode betrachten, um mit I/O-Geräten zu sprechen und alles andere zu tun. Nach 1957 begannen verschiedene Gruppen mit sogenannten „Last-and-go“-Systemen zu experimentieren. Diese nutzten ein Überwachungsprogramm, das immer auf dem Computer ansässig war. Programme könnten die Überwachung für Dienstleistungen nennen. Eine weitere Funktion der Überwachung war es, bessere Fehlerkontrollen bei eingereichten Arbeitsplätzen vorzunehmen, Fehler früher und intelligenter aufzuholen und den Nutzern nützlichere Rückmeldungen zu ermöglichen. So stellten die Monitore den ersten Schritt auf dem Weg zu beiden Betriebssystemen dar und stellen die Benutzerschnittstellen ausdrücklich fest. 1969–2009: Befehl-line-Schnittstellen für die Benutzeroberfläche (CLIs) entwickelt sich von Chargenmonitoren, die mit der Systemkonsole verbunden sind. Ihr Interaktionsmodell war eine Reihe von Aufforderungsvorgängen, die als Textbefehle in einem spezialisierten Vokular ausgedrückt wurden. Versäumnis war weit niedriger als für die Chargensysteme, von Tagen oder Stunden auf Sekunden. Befehlssysteme erlaubten dem Nutzer daher, seine Meinung über spätere Phasen der Transaktion in Reaktion auf Echtzeit- oder in der Nähe von Echtzeit Rückmeldungen zu früheren Ergebnissen zu ändern. Software könnte explorierend und interaktiv sein. Diese Schnittstellen haben jedoch immer noch eine relativ schwere mnemoniclast auf dem Benutzer platziert, was eine ernsthafte Investition von Aufwand und Lernzeit erfordert. Die frühesten Befehlssysteme kombinierten Teleprinters mit Computern und passten eine ausgereifte Technologie an, die sich als wirksam erwiesen hat, um die Weitergabe von Informationen über die Verkabelungen zwischen Menschen zu vermitteln. Teleprinters war ursprünglich als Geräte für automatische Übertragung und Empfang entwickelt worden; sie hatten eine Geschichte, die bis zum Jahr 1967 zurückliegt und bereits in Nachrichtenräumen und anderswo bis zum Jahr 1920 etabliert wurde. In ihrer Ablehnung war die Wirtschaft sicherlich eine Frage, aber auch die Psychologie und die Rechtsstaatlichkeit der am wenigsten unangemeldeten Überraschungen; die Teleprinters boten eine Schnittstelle mit dem System an, das vielen Ingenieuren und Nutzern vertraut war. Die weit verbreitete Einführung von Video-App-Terminals (VDTs) in der zweiten Phase der Befehlssysteme. Letztere sind noch nicht so weit wie möglich, weil die Figuren schneller auf den Phosphorpunkten eines Bildschirms entworfen werden könnten als ein Druckerkopf oder eine Beförderung. Sie halfen der konservativen Widerstandsfähigkeit der interaktiven Programmierung durch Zerkleinerung von Tinten und Papierverschwendungen aus dem Kostenbild und waren der ersten TV-Generation der späten 1950er und 60er Jahre sogar noch stärker als Teleprinters in die Computer Pioniere der 1940er Jahre. Kurz gesagt, das Bestehen eines zugänglichen Bildschirms – eine zweidimensionale Anzeige von Texten, die schnell und unwiderruflich geändert werden könnten – macht es für Software-Designer ökonomisch sinnvoll, Schnittstellen zu installieren, die als visueller und nicht textual beschrieben werden könnten. Pioniere dieser Art waren Computerspiele und Textverlage; enge Nachkommen einiger der frühesten Exemplare, wie Rogue(6,) und vi(1), sind immer noch ein Live-Teil der Microsoft-tradition. 1985: SAA Benutzerschnittstelle oder Text-Based Benutzerschnittstelle IBM hat 1985 mit dem Start von Microsoft Windows und anderen grafischen Benutzerschnittstellen geschaffen, was die Systemarchitektur (SAA) genannt wird, die den gemeinsamen Benutzerzugang (CUA) umfasst. CUA hat erfolgreich geschaffen, was wir heute in Windows kennen und nutzen, und die meisten der jüngsten DOS- oder Windows-Apps werden diese Norm auch verwenden. Laut dieser Definition sollte ein Poolsystem an der Spitze des Bildschirms liegen, Status bar am unteren Rand, für alle gemeinsamen Funktionen (F2 bis zum Beispiel würde in allen Anwendungen arbeiten, die dem SAA-Standard entsprechen). Dies trug wesentlich dazu bei, dass die Nutzer einen Antrag so schnell wie möglich kennen und zu einem Industriestandard werden. 1968–2009: Grafikale Benutzerschnittstelle 1968 – Douglas Engelbart demonstrierte NLS, ein System, das eine Maus, Pointer, Hypertext und mehrere Fenster nutzt. 1970 – Forscher in Xerox Palo Alto Research Center (many from SRI) entwickeln WIMP-S Paradigma (Windows, Display, Menüs, Pointers) 1973 – Xerox Alto: Geschäftsversagen wegen Kosten, schlechte Benutzeroberfläche und fehlender Programme 1979 – Steve Jobs und andere Apple Ingenieure besuchen Xerox PARC. Obwohl die Piraten von Silicon Valley die Ereignisse diktieren, hat Apple bereits vor dem Besuch an der Entwicklung einer GUI, wie etwa der Projekte von Notebook und Lisa gearbeitet. 1981– Xerox Star: Konzentration auf WYSIWYG. Handelsversagen (25K verkauft) aufgrund der Kosten (16K je), Leistung (Minuten, um ein Dossier zu retten, ein paar Stunden vor dem Unfall) und schlechtes Marketing 1982 –Rob Eagle und andere auf Bell Labs, die 1984 von AT &T und Teletype als DMD 5620 Terminal veröffentlicht wurden. 1984 – Apple RAM behauptet die LE. Super Bowl kommerziellen zeigte zweimal, war das teuerste Geschäft, das jemals in dieser Zeit gemacht wurde. 1984 – X Window System des MIT: Hardwareunabhängige Plattform und Vernetzungsprotokoll zur Entwicklung von LEIT-Systemen auf UNIX-ähnlichen Systemen 1985 – Windows 1.0 – bietet LEIT-Schnittstelle an MS-DOS. Keine Überschneidung der Fenster (bisher). 1985 – Microsoft und IBM beginnen mit der Arbeit auf OS/2, um MS-DOS und Windows zu ersetzen 1986 – Apple drohte, digitale Forschung zu verdrängen, weil ihr GUI Desktop zu viel wie Apples Mac aussieht. 1987 – Windows 2.0 – Überschneidung und Resizable Fenster, Tastatur und Mausverbesserungen 1987 – RAM II: erste vollständige Mac 1988 – OS/2 1.10 Standard Edition (SE) hat von Microsoft geschrieben, sieht viel wie Windows 2 Interface-Design primäre Methoden, die im Schnittstellendesign verwendet werden, vor. Typischer Mensch-Maschine-Schnittstellendesign besteht aus folgenden Phasen: Interaktionsspezifikation, Interface-Softwarespezifikation und Prototyp: Gemeinsame Verfahren für Interaktionsspezifikationen umfassen nutzerorientiertes Design, persona, aktivitätsorientiertes Design, szenarienbasiertes Design und Resiliency Design. Gemeinsame Verfahren für Interface-Softwarespezifikationen umfassen die Verwendung von Fällen und die Einschränkung der Durchsetzung durch Interaktionsprotokolle (zur Vermeidung von Verwendungsfehlern). Gemeinsame Verfahrensweisen für Prototyp basieren auf Bibliotheken von Schnittstellenelementen (Kontrollen, Dekoration usw.). Qualitätsgrundsätze Alle großen Schnittstellen teilen acht Qualitäten oder Merkmale: Klarheit Die Schnittstelle vermeidet Unklarheit, indem sie alles durch Sprache, Fluss, Hierarchie und Metapheren für visuelle Elemente klar macht. Mitentscheidung: Es ist einfach, die Schnittstelle durch Überkörung und Kennzeichnung alles klar zu machen, aber dies führt zu Interface bloat, wo es gleichzeitig zu viel auf dem Bildschirm gibt. Wenn zu viele Dinge auf dem Bildschirm sind, was Sie suchen, ist schwierig, und so wird die Schnittstelle missbraucht. Die echte Herausforderung, eine große Schnittstelle zu schaffen, besteht darin, sie gleichzeitig klar und deutlich zu machen. Zuverlässigkeit: Selbst wenn jemand zum ersten Mal eine Schnittstelle benutzt, können bestimmte Elemente noch vertraut sein. Real-life Metaphers können zur Kommunikation verwendet werden. Reaktionsfähigkeit: Eine gute Schnittstelle sollte sich nicht schleppend fühlen. Dies bedeutet, dass die Schnittstelle dem Benutzer ein gutes Feedback darüber geben sollte, was geschieht und ob der Beitrag des Nutzers erfolgreich bearbeitet wird. Kohärenz: Die durchgängige Nutzung Ihrer Schnittstelle ist wichtig, weil sie es den Nutzern ermöglicht, Nutzungsmuster zu erkennen. Schönheit: Obwohl Sie keine Schnittstelle für die Ausübung ihres Arbeitsplatzes attraktiv machen müssen, so dass etwas gut aussehen wird, dass die Zeit, in der Ihre Nutzer Ihre Bewerbungen besser nutzen; und die ärmeren Nutzer können nur eine gute Sache sein. Effizienz: Zeit ist Geld, und eine große Schnittstelle sollte den Nutzer durch kurze und gute Gestaltung produktiver machen. Einstellung: Eine gute Schnittstelle sollte den Nutzern nicht für ihre Fehler bestraft werden, sondern sollte stattdessen die Mittel bereitstellen, um sie zu beheben. Leitprinzip von mindestens Astonation Das Prinzip der mindestensen Astonation (POLA) ist ein allgemeiner Grundsatz bei der Gestaltung aller Arten von Schnittstellen. Es basiert auf der Idee, dass Menschen nur zu einem Zeitpunkt voll Aufmerksamkeit schenken können, was zu dem Schluss führt, dass Neuheit minimiert werden sollte. Grundsatz der Gewohnheitsbildung Wenn eine Schnittstelle dauerhaft genutzt wird, wird der Nutzer die Gewohnheiten für die Benutzung der Schnittstelle unumgänglich entwickeln. Die Rolle des Designers kann somit als Gewähr dafür dienen, dass die Nutzer gute Gewohnheiten darstellen. Wenn der Designer mit anderen Schnittstellen erfahren wird, werden sie ähnliche Gewohnheiten entwickeln und oft unbewusst annehmen, wie der Nutzer mit der Schnittstelle interagieren wird. Modell für Designkriterien: Benutzererfahrung Honeycomb Peter Morville von Google hat 2004 den Rahmen für die Benutzererfahrung Honeycomb entwickelt, wenn führende Operationen in der Benutzeroberfläche entwickelt wurden. Der Rahmen wurde geschaffen, um Benutzerschnittstellendesign zu leiten. Es wäre eine Leitlinie für viele Web-Entwicklungsstudenten für ein Jahrzehnt. Usable: Ist das System einfach und einfach zu nutzen? Der Antrag sollte sich bewusst fühlen, und es sollte einfach sein, zu nutzen. Nutzen: Wenn der Antrag einen Bedarf erfüllt? Produkte oder Dienstleistungen eines Unternehmens müssen sinnvoll sein. Desirable: Ist die Gestaltung des Antrags schlank und an den Punkt? Die Ästhetik des Systems sollte attraktiv und leicht zu übersetzen sein. Suche nach: Sind die Nutzer in der Lage, schnell die Informationen zu finden, die sie suchen? Information muss gefunden und einfach zu bedienen sein. Kein Nutzer muss für Ihr Produkt oder Ihre Information niemals bejagen. Zugänglichkeit: Liegt der erweiterte Text, ohne den Rahmen zu brechen? Ein Antrag sollte für Behinderte zugänglich sein. Credible: Liegt der Antrag vertrauenswürdige Sicherheit und Unternehmensdetails vor? Ein Antrag sollte transparent, sicher und ehrlich sein. Valuable: Ist der Endnutzer der Meinung, dass es wertvoll ist? Wenn alle 6 Kriterien erfüllt sind, wird der Endnutzer Wert und Vertrauen in die Anwendung finden. Art Benutzerschnittstellen verwalten die Benutzerfreundlichkeit, indem sie entscheiden, wann der Nutzer, die Art der Warnhinweise und das Detail der dem Benutzer vorgelegten Nachrichten unterbrochen wird. Batch-Schnittstellen sind nichtinteraktive Benutzerschnittstellen, in denen der Nutzer alle Details der Chargenarbeit im Vorhinein für die Chargenverarbeitung spezifiziert und die Produktion erhält, wenn alle Verarbeitung erfolgt. Nach Beginn der Verarbeitung ist der Computer nicht zügig für weitere Eingaben. Leitungsschnittstellen (CLIs) fordern den Nutzer auf, Beiträge zu liefern, indem er eine Befehlsspanne mit der Computer-Diagnostik auszeichnet und auf den Text an die Computerüberwachung reagiert. Einsatz von Programmierern und Systemverwaltern, in technischen und wissenschaftlichen Umgebungen und von technisch fortschrittlichen persönlichen Computernutzern. Conversationale Schnittstellen ermöglichen es den Nutzern, den Computer mit einfachen Text Englisch (z.B. über Textnachrichten oder Chatbots) oder Sprachbefehlen anstelle von grafischen Elementen zu betrauen. Diese Schnittstellen geben häufig menschliche und menschliche Gespräche. Conversational Interfaces versuchen, die Computer-Schnittstelle in Form einer federführenden Person, Roboter oder anderer Art (wie Microsofts Clippy des Papierclips) zu kennzeichnen und Interaktionen in einer Gesprächsform zu präsentieren.Crossing-based Interfaces sind grafische Benutzerschnittstellen, in denen die primäre Aufgabe darin besteht, die Grenzen zu überschreiten, anstatt sich aufzuzeichnen. Direkte Manipulationsschnittstelle ist der Name einer allgemeinen Klasse von Benutzerschnittstellen, die es den Nutzern ermöglichen, Gegenstände zu manipulieren, die ihnen vorgelegt werden, wobei Maßnahmen, die mindestens locker auf die physische Welt abgestimmt sind. Gesture-Schnittstellen sind grafische Benutzerschnittstellen, die die Eingabe in eine Form von handgedeckten Gesten akzeptieren oder mit einer Computer-Menschen oder einem Farbblatt versehen sind. Grafikale Benutzerschnittstellen (GUI) akzeptieren Input über Geräte wie eine Computer-Diagnose und Maus und liefern auf der Computerüberwachung eine strukturierte grafische Produktion. Es gibt mindestens zwei unterschiedliche Grundsätze, die in der GUI-Design verwendet werden: objektorientierte Benutzerschnittstellen (OOUIs) und anwendungsorientierte Schnittstellen. Hardware-Schnittstellen sind die physikalischen, räumlichen Schnittstellen, die auf Produkten in der realen Welt von Toastern, bis hin zu Autobildschirmen bis zu Flugzeug Cockpits gefunden werden. Sie sind in der Regel eine Mischung aus Knopfen, Knopfen, Schaltern und Touchscreens. Holographische Benutzerschnittstellen liefern einen Beitrag zu elektronischen oder elektromechanischen Geräten, indem sie einen Finger durch vervielfältigte Holographische Bilder von dem, was sonst tactile Kontrollen dieser Geräte wären, die frei in der Luft, durch eine Wellenquelle und ohne Tactile-Interaktion entdeckt werden. Intelligente Benutzerschnittstellen sind Mensch-Maschine-Schnittstellen, die darauf abzielen, die Effizienz, die Wirksamkeit und die Naturität der Mensch-Maschine-Interaktion zu verbessern, indem sie die Modelle des Benutzers, der Domain, der Aufgabe, des Diskurses und der Medien (z.B. Grafik, Natursprache, Geste) repräsentieren. Filterschnittstellen überwachen die Körperbewegungen des Benutzers und übersetzen sie in Befehle, die derzeit von Apple entwickelt werden. Multi-Screen-Schnittstellen, die mehrere Displays verwenden, um eine flexiblere Interaktion zu gewährleisten. Häufig wird dies in Computerspiel-Interaktionen sowohl in den Handels- als auch in jüngster Zeit auf den Handmärkten eingesetzt. Natursprachliche Schnittstellen werden für Suchmaschinen und Webseiten verwendet. Benutzertypen in einer Frage und warten auf eine Antwort. Benutzerschnittstellen, die den Nutzer beobachten, um ihre Bedürfnisse und Absichten in Anspruch zu nehmen, ohne dass sie explizite Anweisungen formulieren. objektorientierte Benutzerschnittstellen (OOUI) basieren auf objektorientierten Programmierungsvariablen, die es Nutzern ermöglichen, simulierte Objekte und ihre Eigenschaften zu manipulieren. Permissionsgesteuerte Benutzerschnittstellen zeigen oder verbergen Menüoptionen oder Funktionen je nach Höhe der Genehmigungen des Nutzers. Das System zielt darauf ab, die Benutzererfahrung zu verbessern, indem es Gegenstände, die dem Nutzer nicht zur Verfügung stehen, beseitigt. Ein Nutzer, der Funktionen, die für die Nutzung nicht verfügbar sind, kann frustriert werden. Es bietet auch eine Verbesserung der Sicherheit, indem funktionelle Gegenstände von illegalen Personen verschleiert werden. Reflexive Benutzerschnittstellen, bei denen die Nutzer das gesamte System allein über die Benutzeroberfläche kontrollieren und neu definieren, z.B. um ihre Befehlsums zu ändern. In der Regel ist dies nur mit sehr reichen grafischen Benutzerschnittstellen möglich. Suchschnittstelle ist, wie die Suchbox einer Website angezeigt wird, sowie die visuelle Darstellung der Suchergebnisse. greifbare Benutzerschnittstellen, die einen stärkeren Schwerpunkt auf Berührung und körperlicher Umgebung oder ihrem Element legen. Task-zentrierte Schnittstellen sind Benutzerschnittstellen, die das Problem der Informationsüberlastung der Desktop-Dipher durch Aufgaben, nicht Dateien, die primäre Interaktionseinheit angehen. Textbasierte Benutzerschnittstellen (TUIs) sind Benutzerschnittstellen, die über Text interagieren. TUIs umfassen Kommandoschnittstellen und textbasierte WIMP-Umgebungen. Touchscreens sind Zeichen, die die Eingabe von Fingern oder einem Text akzeptieren. Mehr mobile Geräte und viele Arten von Verkauf, industrielle Prozesse und Maschinen, Selbstbedienungsmaschinen usw. Touch Benutzeroberfläche sind grafische Benutzerschnittstellen mit einem Touchscreen oder Touchscreen als kombiniertes Eingangs- und Outputgerät. Sie ergänzen oder ersetzen andere Formen der Produktion mit häptischen Feedbackmethoden. Einsatz in computergesteuerten Simulatoren usw. Sprachbenutzerschnittstellen, die die Eingabe akzeptieren und die Produktion durch die Schaffung von Sprachanrufen liefern. Der Nutzer wird von drängenden Schlüsseln oder Knopfen geliefert oder mündlich auf die Schnittstelle reagieren. Web-basierte Benutzerschnittstellen oder Web-Benutzerschnittstellen (WUI), die die Eingabe akzeptieren und durch die Erstellung von Web-Seiten, die der Nutzer unter Verwendung eines Webbrowser-Programms ansehen, Output liefern. Neue Umsetzungen nutzen PHP, Java, JavaScript, AJAX, Apache Flex, .NET Frameworkwork oder ähnliche Technologien, um Echtzeit-Kontrollen in einem separaten Programm zu ermöglichen, und beseitigen die Notwendigkeit, einen traditionellen, auf dem Computer basierenden Webbrowser aufzufrischen. Administrative Web-Schnittstellen für Web-Server, Server und vernetzte Computer werden häufig als Kontrolltafeln bezeichnet. Null-Input-Schnittstellen erhalten Beiträge von einer Reihe von Sensoren anstelle der Abfrage des Nutzers mit Input-Dialogen. Kurze Benutzerschnittstellen sind grafische Benutzerschnittstellen, bei denen auf verschiedenen Ebenen der Skala und des Details Informationsgegenstände vertreten sind und in denen der Nutzer den Umfang des angesehenen Bereichs ändern kann, um genauer zu zeigen. Galerie Siehe auch Verweise Externe Linkskonferenzen umfassen einen breiten Bereich der Benutzerschnittstellen-Veröffentlichungen Kapitel 2. Kurzgeschichte der Benutzerschnittstellen