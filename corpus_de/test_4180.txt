XNU ist das Computer-Betriebssystem (OS) Kernel entwickelt bei Apple Inc. seit Dezember 1996 für den Einsatz im Betriebssystem Mac OS X (jetzt macOS) und als Frei- und Open-Source-Software im Rahmen des Darwin OS veröffentlicht, das die Basis für die Apple TV Software, iOS, iPadOS, WatchOS und tvOS OSes ist. XNU ist eine Abkürzung von X ist Nicht Unix. Ursprünglich von NeXT für das NeXTSTEP-Betriebssystem entwickelt, war XNU ein Hybrid-Kernel aus der Version 2.5 des Mach-Kernels, der an der Carnegie Mellon University entwickelt wurde, selbst ein Nachkomme von 4.3BSD und mit dem Großteil des 4.3BSD-Kernels, zusammen mit einer Application Programmierschnittstelle (API) in Ziel-C für Schreibtreiber namens Driver Kit. Nachdem Apple NeXT erwarb, wurde der Kernel mit dem Code aktualisiert, der von OSFMK 7.3 von OSF abgeleitet wurde, und das FreeBSD-Projekt, und das Driver Kit wurde durch eine C+ API für Schreibtreiber mit dem Namen I/O Kit ersetzt. Kernel Design XNU ist ein Hybrid-Kernel, der Funktionen von monolithischen Kernen und Mikrokernen enthält, versucht, die beste Verwendung beider Technologien zu machen, wie die Nachrichtenübermittlungsfähigkeit von Mikrokernen, die eine größere Modularität und größere Teile des Betriebssystems ermöglichen, von Speicherschutz zu profitieren und die Geschwindigkeit von monolithischen Kernen für einige kritische Aufgaben zu halten. Ab 2021 läuft XNU auf ARM64 und x86-64 Prozessoren, sowohl ein Prozessor als auch symmetrische Multiprozessoren (SMP). PowerPC-Unterstützung wurde ab Version in Mac OS X 10.6 Unterstützung für IA-32 wurde ab Version in Mac OS X 10.7 entfernt; Unterstützung für 32-Bit ARM wurde ab Version in iOS 11 entfernt. Mach's gut. Basis des XNU-Kernels ist ein stark modifizierter (hybrid)Open Software Foundation Mach-Kernel (OSFMK) 7.3. Dadurch ist es in der Lage, den Kern eines Betriebssystems als getrennte Prozesse zu betreiben, was eine große Flexibilität ermöglicht (es könnte mehrere Betriebssysteme parallel über dem Mach-Kern laufen), was jedoch die Leistung aufgrund zeitaufwendiger Kernel/User-Modus-Kontextschalter und Overhead-Eingriffe aus Mapping- oder Kopiernachrichten zwischen den Adressräumen des Kernels und dem der Service-Daemons oft reduziert. Mit macOS haben die Designer versucht, einige Aufgaben zu optimieren und so wurden BSD-Funktionen mit Mach in den Kern eingebaut. Das Ergebnis ist ein stark modifizierter (hybrid) OSFMK 7.3 Kernel, Apple lizenzierte OSFMK 7.3, ein Mikrokern, aus dem OSF. OSFMK 7.3 enthält gültigen Code von der Universität von Utah Mach 4 Kernel und von den vielen Mach 3.0-Varianten, die von der originalen Carnegie Mellon University Mach 3.0 microkernel. BSD Der Berkeley Software Distribution (BSD) Teil des Kernels bietet die Portable Operating System Interface (POSIX) Application Programming Interface (API, BSD System Calls,) das Unix Prozessmodell atop Mach Aufgaben, grundlegende Sicherheitsrichtlinien, Benutzer und Gruppen-IDs, Berechtigungen, den Netzwerkprotokoll-Stacks (Protokolle,) den virtuellen Dateisystem-Code (einschließlich einer Dateisystem-unabhängigen Journaling-Schicht, Datei-System) Der in XNU vorhandene BSD-Code wurde zuletzt mit dem FreeBSD-Kernel synchronisiert. Obwohl ein Großteil davon deutlich verändert wurde, findet die Codefreigabe zwischen Apple und dem FreeBSD Projekt ab 2009 statt. K32/K64 XNU in Mac OS X Snow Leopard, v10.6, (Darwin Version 10) kommt in zwei Sorten, eine 32-Bit-Version namens K32 und eine 64-Bit-Version namens K64.K32 kann 64-Bit-Anwendungen im Benutzerland ausführen. Was in Mac OSX 10.6 neu war, war die Fähigkeit, XNU in 64-Bit-Kernel-Raum auszuführen. K32 war der Standardkern für 10.6 Server, wenn auf allen Maschinen außer Mac Pro und Xserve Modellen ab 2008 verwendet und kann 64-Bit-Anwendungen ausführen. K64 hat mehrere Vorteile gegenüber K32: Kann mehr als 32 GB RAM verwalten, da die Speicherkarte eine überproportional große Fläche des 32-Bit-Kernel-Raums verbrauchen würde. Cache-Puffergrößen können größer sein als der 32-Bit-Kernel-Raum erlaubt, potenziell steigende I/O-Leistung. Die Leistung wird beim Einsatz von leistungsstarken Netzwerkgeräten oder mehreren Grafik-Verarbeitungseinheiten (GPUs) erhöht, da der Kernel alle Geräte in 64-Bit-Raum abbilden kann, auch wenn mehrere sehr große direkte Speicherzugriffe (DMA)-Puffer aufweisen. Das Booten während des Niederhaltens 6 und 4 zwingt die Maschine, K64 auf Maschinen zu booten, die 64-Bit-Kernels tragen.K64 wird 32-Bit-Anwendungen ausführen, aber es wird nicht 32-Bit-Kernel-Erweiterungen (KEXTs,) ausgeführt, so dass diese an K64 portiert werden müssen, um laden zu können. XNU in OS X Mountain Lion, v10.8, und später nur einen 64-Bit-Kernel. I/O KitI/O Kit ist das Gerätetreiber-Framework, geschrieben in einer Untergruppe von C+ basierend auf Embedded C++. Mit seinem objektorientierten Design werden Funktionen, die jeder Klasse des Fahrers gemeinsam sind, im Rahmen bereitgestellt, wodurch Gerätetreiber in weniger Zeit und Code geschrieben werden. Das I/O Kit ist multi-Threaded, symmetric multiprocessing (SMP)-safe und ermöglicht Hot-pluggable-Geräte und automatische, dynamische Gerätekonfiguration. Viele Treiber können geschrieben werden, um aus dem Benutzerraum zu laufen, was die Stabilität des Systems weiter erhöht. Wenn ein Benutzer-Raum-Treiber abstürzt, wird er den Kernel nicht abstürzen. Wenn jedoch ein Kernel-Raum-Treiber abstürzt, wird er den Kernel abstürzen. Beispiele für Kernel-Raum-Treiber sind Festplattenadapter und Netzwerkadaptertreiber, Grafiktreiber, Treiber für Universal Serial Bus (USB) und FireWire Host-Controller sowie Treiber für virtuelle Maschinensoftware wie VirtualBox, Parallels Desktop für Mac und VMware Fusion. Siehe auch Kernel (Betriebssystem)A/UX mkLinux OSF/1 Darwin (Betriebssystem) – Open Source Betriebssystem von Apple, Inc., mit XNU als Kernel macOS – Betriebssystem, das von Apple, Inc., mit XNU als Kernel ReferencesLoepere, Keith veröffentlicht wird."MK:+ A High Performance, High Assurance Microkernel." Offizielle Website bei Apple Open Source Browser darwin-xnu auf GitHub, offizieller Spiegel XNU: Der Kernel auf der Wayback-Maschine (archiviert am 2. Juni 2020) – ein Überblick über die Komponenten von XNU, geschrieben von Amit Singh im Dezember 2003 Inside the Mac OS X Kernel – "Dieses Gespräch will die Verwirrung durch die Darstellung von Details des Mac OS X-Kernels aufklären"