Ein Smart Contract ist ein Computerprogramm oder ein Transaktionsprotokoll, das dazu bestimmt ist, gesetzlich relevante Ereignisse und Handlungen gemäß den Vertragsbedingungen oder einer Vereinbarung automatisch auszuführen, zu kontrollieren oder zu dokumentieren. Die Ziele von Smart Contracts sind die Verringerung der Notwendigkeit in vertrauenswürdigen Vermittler, Schiedsverfahren und Durchsetzungskosten, Betrugsverluste sowie die Verringerung von schädlichen und versehentlichen Ausnahmen. Vending-Maschinen werden als die älteste Technologie bezeichnet, die der intelligenten Vertragsumsetzung entspricht. Das Whitepaper von 2014 über die Kryptowährung Ethereum beschreibt das Bitcoin-Protokoll als schwache Version des Smart Contract-Konzepts, wie es von Informatiker, Anwalt und Kryptograph Nick Szabo definiert wird. Seit Ethereum unterstützen verschiedene Kryptowährungen Skriptsprachen, die erweiterte Smart Contracts zwischen nicht vertrauenswürdigen Parteien ermöglichen. Smart Contracts sollten von intelligenten Rechtskontrakten unterschieden werden. Letzteres bezieht sich auf eine traditionelle natürliche Sprache rechtsverbindliche Vereinbarung, die bestimmte Begriffe im maschinell lesbaren Code ausgedrückt und umgesetzt hat. Etymology Smart Contracts wurden erstmals Anfang der 1990er Jahre von Nick Szabo vorgeschlagen, der den Begriff prägte, indem er sich auf "eine Reihe von Versprechen bezieht, die in digitaler Form angegeben sind, einschließlich Protokolle, innerhalb derer die Parteien diese Versprechen ausführen". 1998 wurde der Begriff zur Beschreibung von Objekten in der Rechteverwaltungs-Serviceschicht des Systems The Stanford Infobus verwendet, das Teil des Stanford Digital Library Project war. Rechtsstatus von Smart Contracts Ein smarter Vertrag stellt nicht unbedingt eine rechtsgültige verbindliche Vereinbarung dar. Einige Rechtswissenschaftler behaupten, dass Smart Contracts keine Rechtsvereinbarungen sind, sondern Mittel zur Erfüllung von Verpflichtungen aus anderen Vereinbarungen, wie z.B. technologische Mittel zur Automatisierung von Zahlungsverpflichtungen oder Verpflichtungen, die bei der Übertragung von Token oder Kryptowährungen bestehen. Darüber hinaus haben andere Gelehrte argumentiert, dass der zwingende oder deklarative Charakter der Programmiersprachen die rechtliche Gültigkeit von Smart Contracts beeinflussen kann. Seit der Einführung der Ethereum-Blockchain 2015 wurde der Begriff "smart contract" speziell auf den Begriff der allgemeinen Zweckberechnung angewendet, die auf einer Blockchain oder verteilten Leiste erfolgt. Das US National Institute of Standards and Technology beschreibt einen "Smart Contract" als eine "Kollektion von Code und Daten (manchmal als Funktionen und Staat bezeichnet), die mit kryptographisch signierten Transaktionen im Blockchain-Netzwerk eingesetzt wird". Bei dieser Interpretation, die beispielsweise von der Ethereum Foundation oder IBM verwendet wird, ist ein Smart Contract nicht notwendigerweise mit dem klassischen Konzept eines Vertrags verbunden, sondern kann jede Art von Computerprogramm sein. Ein smarter Vertrag kann auch als gesichertes gespeichertes Verfahren angesehen werden, da seine Ausführung und kodifizierte Effekte wie die Übertragung eines Werts zwischen Parteien streng durchgesetzt werden und nicht manipuliert werden können, nachdem eine Transaktion mit bestimmten Vertragsdaten in eine Blockchain oder verteilte Leiste eingespeichert wird. Das liegt daran, dass die tatsächliche Ausführung von Verträgen von der Plattform kontrolliert und geprüft wird, nicht von beliebigen serverseitigen Programmen, die mit der Plattform verbinden. Im Jahr 2017 wurde Weißrussland durch die Umsetzung des Dekrets zur Entwicklung der digitalen Wirtschaft das erste Land, das Smart Contracts legalisiert. Der weißrussische Anwalt Denis Aleinikov gilt als Autor eines vom Dekret eingeführten intelligenten Vertragsrechtskonzepts. Im Jahr 2018 sagte ein US-Senatbericht: "Während intelligente Verträge neu klingen könnten, ist das Konzept im Grundvertragsrecht verankert. In der Regel beschuldigt das Justizsystem Vertragsstreitigkeiten und erzwingt Bedingungen, aber es ist auch üblich, eine andere Schiedsverfahren zu haben, insbesondere für internationale Transaktionen. Mit Smart Contracts erzwingt ein Programm den in den Code eingebauten Vertrag. " Eine Reihe von Staaten in den USA haben Gesetze über die Nutzung von Smart Contracts verabschiedet, wie Arizona, Nevada, Tennessee und Wyoming. Und im April 2020 verabschiedete das Repräsentantenhaus Iowa einen Gesetzentwurf, der intelligente Kontakte im Staat rechtlich erkennt. Im April 2021 veröffentlichte die britische Jurisdiction Taskforce (UKJT) die Digital Dispute Resolution Rules (die Digital DR Rules), um die schnelle Auflösung von Blockchain und Krypto Rechtsstreitigkeiten in Großbritannien zu ermöglichen. Ähnlich wie bei einer Übertragung von Werten auf eine Blockchain erfolgt die Bereitstellung eines Smart Contracts an einer Blockchain durch Senden einer Transaktion von einer Geldbörse für die Blockchain. Die Transaktion umfasst den zusammengestellten Code für den Smart Contract sowie eine spezielle Empfängeradresse. Diese Transaktion muss dann in einen Block aufgenommen werden, der der Blockchain hinzugefügt wird, an dem der Code des Smart Contracts zur Festlegung des Ausgangszustands des Smart Contracts ausgeführt wird. Byzantinische fehlertolerante Algorithmen sichern den smarten Vertrag dezentral von Versuchen, mit ihm zu tampieren. Sobald ein Smart Contract bereitgestellt wird, kann er nicht aktualisiert werden. Smart Contracts auf einer Blockchain können beliebigen Zustand speichern und willkürliche Berechnungen ausführen. Endkunden interagieren durch Transaktionen mit einem Smart Contract. Solche Transaktionen mit einem Smart Contract können andere Smart Contracts aufrufen. Diese Transaktionen können dazu führen, dass der Zustand geändert und Münzen von einem Smart Contract zu einem anderen oder von einem Konto zu einem anderen gesendet werden. Die beliebteste Blockchain für den Betrieb von Smart Contracts ist Ethereum. Auf Ethereum werden Smart Contracts in der Regel in einer Turing-complete Programmiersprache namens Solidity geschrieben und in Low-Level Bytecode kompiliert, um von der Ethereum Virtual Machine ausgeführt werden. Aufgrund des anhaltenden Problems und anderer Sicherheitsprobleme wird Turing-Komplettheit als ein Risiko angesehen und durch Sprachen wie Vyper bewusst vermieden. Einige der anderen Smart Contract Programmiersprachen fehlen Turing-completeness sind Simplicity, Scilla, Ivy und Bitcoin Script. Allerdings zeigten Messungen mit regelmäßigen Ausdrücken, dass nur 35,3% von 53,757 Ethereum Smart Contracts beinhaltete Recursions und Loops – Konstrukte, die mit dem Stillstandsproblem verbunden sind. Mehrere Sprachen sollen formale Verifikation ermöglichen: Bamboo, IELE, Simplicity, Michelson (kann mit Coq überprüft werden), Liquidität (zusammen mit Michelson,) Scilla, DAML und Pact. Verfahren auf einer Blockchain sind in der Regel deterministisch, um Byzantinische Fehlertoleranz zu gewährleisten. Dennoch erfordert die reale Weltanwendung von Smart Contracts, wie Lotterien und Casinos, eine sichere Zufälligkeit. Tatsächlich reduziert die Blockchain-Technologie die Kosten für die Lotterieführung und ist daher für die Teilnehmer von Vorteil. Zufälligkeit auf Blockchain kann durch die Verwendung von Block-Hasen oder Zeitstempeln, Orakeln, Verpflichtungsplänen, speziellen Smart Contracts wie RANDAO und Quanta sowie Sequenzen aus gemischter Strategie Nash equilibria realisiert werden. Anwendungen Im Jahr 1998 schlug Szabo vor, dass Smart Contract-Infrastruktur durch replizierte Asset Registries und Vertragsabwicklung mithilfe kryptografischer Hash-Ketten und byzantinischer fehlertoleranter Replikation realisiert werden kann. Askemos implementierte diesen Ansatz 2002 mit Scheme (später Hinzufügen von SQLite) als Vertragsskriptsprache. Ein Vorschlag für die Verwendung von Bitcoin für replizierte Asset-Registrierung und Vertragsabwicklung heißt "farbige Münzen". In verschiedenen Projekten werden replizierte Titel für potentiell willkürliche Eigentumsformen sowie replizierte Vertragsabwicklung umgesetzt. Ab 2015 experimentierte UBS mit "smarten Anleihen", die die Bitcoin-Blockchain verwenden, in der Zahlungsströme hypothetisch vollständig automatisiert werden konnten, wodurch ein selbstzahlendes Instrument geschaffen wurde. Erbwünsche könnten bei der Registrierung einer Todesurkunde mittels Smart Contracts hypothetisch automatisch umgesetzt werden. Geburtsurkunden können auch mit Smart Contracts zusammenarbeiten. Smart Contracts können auch genutzt werden, um Immobilientransaktionen (d.h. über Propy, ...) zu bewältigen und Blockchain-Lösungen werden auch auf dem Gebiet der Titelaufzeichnungen und im öffentlichen Register proliferiert. Smart Contracts können auch in Arbeitsverträgen, insbesondere befristeten Arbeitsverträgen, verwendet werden, die sowohl Arbeitgeber als auch Arbeitnehmer Vorteile bieten. Sicherheitsprobleme Ein blockchainbasierter Smart Contract ist für alle Nutzer dieser Blockchain sichtbar. Dies führt jedoch zu einer Situation, in der Fehler, einschließlich Sicherheitslöcher, für alle sichtbar sind, aber möglicherweise nicht schnell behoben werden. Ein solcher Angriff, der schnell zu beheben war, wurde erfolgreich auf der DAO im Juni 2016 ausgeführt, die damals rund 50 Millionen US$ von Ether entwässert, während Entwickler versuchten, zu einer Lösung zu kommen, die Konsens gewinnen würde. Das DAO-Programm hatte eine Zeitverzögerung, bevor der Hacker die Gelder entfernen konnte; eine harte Gabel der Ethereum-Software wurde getan, um die Gelder vom Angreifer zurück zu klauen, bevor die Frist abgelaufen ist. Andere hochkarätige Angriffe umfassen die Parity Multisignatur-Wandet-Angriffe und einen ganzzahligen Unterlauf/Überlauf-Angriff (2018), der mehr als 184 Millionen US-Dollar beträgt. Themen in Ethereum Smart Contracts umfassen insbesondere Mehrdeutigkeiten und einfach-absichere Konstrukte in seiner Vertragssprache Solidity, Compiler Bugs, Ethereum Virtual Machine Bugs, Angriffe auf das Blockchain-Netzwerk, die Unmutbarkeit von Bugs und dass es keine zentrale Quelle gibt, die bekannte Schwachstellen, Angriffe und problematische Konstrukte dokumentiert. Unterschied von Smart-Rechtsverträgen Smarte Rechtsverträge unterscheiden sich von Smart Contracts. Wie oben erwähnt, ist ein Smart Contract nicht unbedingt gesetzlich durchsetzbar als Vertrag. Andererseits hat ein smarter rechtlicher Vertrag alle Elemente eines rechtlich durchsetzbaren Vertrags in der Zuständigkeit, in der er durchsetzbar ist und durch ein Gericht oder Gericht durchsetzbar ist. Während jeder smarte rechtliche Vertrag einige Elemente eines smarten Vertrags enthalten wird, wird nicht jeder smart Vertrag ein smarter rechtlicher Vertrag sein. Es gibt keine formale Definition eines smarten Rechtsvertrags in der Rechtsindustrie. Ein Ricardian Vertrag ist eine Art intelligenter Rechtsvertrag. Siehe auch Code und andere Gesetze von CyberspaceDecentralized Anwendung Ethereum Regulation durch Algorithmen Regulation von Algorithmen Ricardian Vertrag (ein Design-Muster, um die Absicht der Vereinbarung von Parteien zu erfassen)Loan Secure Multiparty Berechnung Transparenz == Referenzen ==