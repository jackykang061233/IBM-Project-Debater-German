DNA Computing ist ein aufstrebender Zweig des Computing, der anstelle des herkömmlichen elektronischen Computings DNA, Biochemie und Molekularbiologie-Hardware verwendet. Forschung und Entwicklung in diesem Bereich betrifft Theorie, Experimente und Anwendungen von DNA Computing. Obwohl das Feld ursprünglich mit der Demonstration einer Computing-Anwendung von Len Adleman im Jahr 1994 begann, wurde es nun auf mehrere andere Wege erweitert, wie die Entwicklung von Speichertechnologien, nanoskalige Bildgebungsmodalitäten, synthetische Steuerungen und Reaktionsnetze, etc. Eine kurze Geschichte der DNA-Computing und der molekularen Programmierung Leonard Adleman der Universität Südkalifornien hat dieses Feld 1994 zunächst entwickelt. Adleman zeigte einen Nachweis der Verwendung von DNA als eine Form der Berechnung, die das sieben-Punkte- Hamiltonian-Pfad-Problem löste. Seit den ersten Adleman-Experimenten sind Fortschritte aufgetreten und verschiedene Turing-Maschinen haben sich als konstruktiv erwiesen. Seitdem hat sich das Feld in mehrere Wege erweitert. 1995 wurde die Idee für DNA-basiertes Gedächtnis von Eric Baum vorgeschlagen, der verworfen hat, dass eine Vielzahl von Mengendaten aufgrund seiner ultrahohen Dichte in einer winzigen Menge an DNA gespeichert werden können. Dies erweiterte den Horizont des DNA Computing in den Bereich der Speichertechnologie, obwohl die in vitro Demonstrationen fast nach einem Jahrzehnt gemacht wurden. Das Gebiet des DNA Computing kann als Teilfeld des breiteren DNA-Nanoscience-Feldes eingestuft werden, das von Ned Seeman etwa ein Jahrzehnt vor Len Adlemans Demonstration gestartet wurde. Neds ursprüngliche Idee in den 1980er Jahren war es, willkürliche Strukturen zu errichten, die mit der selbst-eigenen DNA-Botschaft für Anwendungen in der Kristallographie arbeiten. Sie wandelte sich jedoch in den Bereich der strukturellen DNA-Selbstmontage, die ab 2020 äußerst anspruchsvoll ist. Selbstmontierte Struktur aus einigen Nanometern hoch bis zu mehreren Zehn Mikrometern in der Größe wurde 2018 demonstriert. 1994, Prof. Die Gruppe von Seeman zeigte frühe DNA-Gitterstrukturen mit einem kleinen Satz von DNA-Komponenten. Während die Demonstration von Adleman die Möglichkeit von DNA-basierten Computern zeigte, war das DNA-Design trivial, weil die Anzahl der Knoten in einem Graph wächst, würde die Anzahl der DNA-Komponenten, die in der Implementierung von Adleman benötigt werden, exponentiell wachsen. Daher begannen Informatiker und Biochemiker mit der Erkundung von Kacheln, wo das Ziel war, eine kleine Reihe von DNA-Strängen als Fliesen zu verwenden, um willkürliche Berechnungen auf Wachstum durchzuführen. Weitere in den späten 90er Jahren theoretisch erforschte Wege umfassen die DNA-basierte Sicherheit und Kryptographie, die Rechenkapazität von DNA-Systemen, DNA-Speicher und -Disks und DNA-basierte Robotik. Im Jahr 2003 zeigte John Reifs Gruppe zunächst die Idee eines DNA-basierten Walkers, der auf einer Spur wie ein Linienfolger-Roboter durchzog. Sie nutzten Molekularbiologie als Energiequelle für den Walker. Seit dieser ersten Demonstration wurden eine Vielzahl von DNA-basierten Walkern gezeigt. Anwendungen, Beispiele und aktuelle Entwicklungen 1994 präsentierte Leonard Adleman den ersten Prototyp eines DNA-Computers. Der TT-100 war ein mit 100 Mikrolitern einer DNA-Lösung gefülltes Testrohr. Er schaffte es, eine Instanz des gerichteten Hamiltonischen Pfadproblems zu lösen. In Adlemans Experiment wurde das Hamiltonian Path Problem als „Travelling Salesman Problem“ bezeichnet. Dazu wurden verschiedene DNA-Fragmente geschaffen, von denen jeder eine Stadt repräsentiert, die besucht werden musste. Jedes dieser Fragmente ist in der Lage, mit den anderen Fragmenten zu verbinden. Diese DNA-Fragmente wurden in einem Reagenzglas hergestellt und gemischt. Innerhalb von Sekunden bilden die kleinen Fragmente größere, die die verschiedenen Reiserouten darstellen. Durch eine chemische Reaktion wurden die die längeren Strecken repräsentierenden DNA-Fragmente beseitigt. Die Überreste sind die Lösung für das Problem, aber insgesamt dauerte das Experiment eine Woche. Die aktuellen technischen Einschränkungen verhindern jedoch die Auswertung der Ergebnisse. Daher ist das Experiment nicht für die Anwendung geeignet, aber es ist dennoch ein Konzeptnachweis. Erste Ergebnisse zu diesen Problemen wurden von Leonard Adleman erhalten. 1994:Solving a Hamiltonian path in a graph mit 7 Gipfeln. 2002: Lösen eines NP-kompletten Problems sowie eines 3-SAT-Problems mit 20 Variablen. Tic-tac-toe Spiel Im Jahr 2002 schufen J. Macdonald, D. Stefanovic und M. Stojanovic einen DNA-Computer, der in der Lage ist, gegen einen menschlichen Spieler zu spielen. Der Rechner besteht aus neun Bins entsprechend den neun Quadraten des Spiels. Jeder bin enthält ein Substrat und verschiedene Kombinationen von DNA-Enzymen. Das Substrat selbst besteht aus einem DNA-Strang, auf den einerseits eine fluoreszierende chemische Gruppe und andererseits eine Repressorgruppe aufgepfropft wurde. Fluoreszenz ist nur aktiv, wenn die Moleküle des Substrats halbiert werden. Die DNA-Enzyme simulieren logische Funktionen. Beispielsweise wird sich eine solche DNA entfalten, wenn zwei spezifische Arten von DNA-Strang eingeführt werden, um die logische Funktion AND wiederzugeben. Standardmäßig wird der Computer als erster im zentralen Platz gespielt. Der menschliche Spieler beginnt mit acht verschiedenen Arten von DNA-Strängen entsprechend den acht verbleibenden Boxen, die gespielt werden können. Um Box Nummer i zu spielen, gießt der menschliche Spieler in alle bins die Stränge, die dem Eingang #i entsprechen. Diese Stränge binden an bestimmte in den Bins vorhandene DNA-Enzyme, was zu einem dieser Bins bei der Verformung der DNA-Enzyme führt, die an das Substrat binden und es schneiden. Der entsprechende Bin wird fluoreszierend, was anzeigt, welche Box vom DNA-Computer gespielt wird. Die DNA-Enzyme sind so unter die Bins aufgeteilt, dass das Beste, das der menschliche Spieler erreichen kann, eine Ziehung ist, wie in echten Tac-Toe. Neurale Netzwerk-basierte Computing Kevin Cherry und Lulu Qian bei Caltech entwickelten ein DNA-basiertes künstliches neuronales Netzwerk, das 100-Bit handschriftliche Ziffern erkennen kann. Sie erreichen dies durch Programmierung auf dem Computer im voraus mit einer entsprechenden Gewichtsmenge, die durch unterschiedliche Konzentrationen von Gewichtsmolekülen repräsentiert wird, die später dem Testrohr hinzugefügt werden, das die Eingangs-DNA-Stränge hält. Verbesserte Geschwindigkeit mit Localized (cache-like) Computing Eine der Herausforderungen des DNA Computing ist seine Geschwindigkeit. Während DNA als Substrat biologisch verträglich ist, d.h. es kann an Orten verwendet werden, an denen Siliziumtechnologie nicht kann, ist seine Rechengeschwindigkeit noch sehr langsam. Zum Beispiel dauerte die Quadrat-Root-Schaltung, die als Benchmark im Feld verwendet wurde, über 100 Stunden, um zu vervollständigen. Während neuere Wege mit externen Enzymquellen schnellere und kompaktere Schaltungen melden, hat Chatterjee et al.demonstrated eine interessante Idee im Bereich, um die Berechnung durch lokalisierte DNA-Schaltungen zu beschleunigen. Dieses Konzept wird von anderen Gruppen weiter untersucht. Diese Idee, die ursprünglich in der Computerarchitektur vorgeschlagen wurde, wurde auch in diesem Bereich angenommen. In der Computerarchitektur ist es sehr bekannt, dass, wenn die Anweisungen in Folge ausgeführt werden, dass sie im Cache geladen werden, zwangsläufig zu einer schnellen Leistung führen wird, auch als das Prinzip der Lokalisierung bezeichnet. Dies liegt daran, dass bei Anweisungen im schnellen Cache-Speicher, es gibt keine Notwendigkeit, sie in und aus dem Haupt-Speicher, die langsam sein können. Ebenso werden bei lokalisierten DNA-Computing die für die Berechnung verantwortlichen DNA-Stränge auf einer Tafel wie Substrat fixiert, die eine physikalische Nähe der Rechengates gewährleistet. Solche lokalisierten DNA-Computing-Techniken haben gezeigt, die Rechenzeit möglicherweise um Größenordnungen zu reduzieren. Erneuerbare (oder reversible)DNA-Computing Nachfolgende Forschung zum DNA-Computing hat reversible DNA-Computing erzeugt, wodurch die Technologie einen Schritt näher an das in (z.B.) PCs verwendete Silizium-basierte Computing gebracht wird. Insbesondere John Reif und seine Gruppe an der Duke University haben zwei verschiedene Techniken vorgeschlagen, um die Computer-DNA-Komplexe wieder zu verwenden. Das erste Design verwendet dsDNA-Gate, während das zweite Design DNA-Haarpin-Komplexe verwendet. Während beide Designs mit einigen Problemen konfrontiert sind (z.B. Reaktionslecks), scheint dies ein bedeutender Durchbruch im Bereich der DNA-Computing zu sein. Einige andere Gruppen haben auch versucht, das Tor Wiederverwendbarkeit Problem zu lösen. Unter Verwendung von Strangverdrängungsreaktionen (SRDs) werden reversible Vorschläge in "Synthesis Strategy of Reversible Circuits on DNA Computers"-Papier zur Umsetzung reversibler Gates und Schaltungen auf DNA-Computern durch Kombination von DNA-Computing und reversiblen Rechentechniken vorgestellt. Dieses Papier schlägt auch eine universelle reversible Gate-Bibliothek (URGL) vor, um n-Bit reversible Schaltungen auf DNA-Computern mit einer durchschnittlichen Länge und Kosten der konstruierten Schaltungen besser als die bisherigen Methoden zu synthetisieren. Methoden Es gibt mehrere Verfahren zum Aufbau einer auf DNA basierenden Recheneinrichtung mit jeweils eigenen Vor- und Nachteilen. Die meisten dieser bauen die Basis-Logik-Gatter (AND, OR, NOT), die mit digitaler Logik von einer DNA-Basis verbunden sind. Einige der verschiedenen Basen umfassen DNAzyme, Deoxyoligonucleotide, Enzyme und Zehenaustausch. Verdrängungsmechanismen Die grundlegendste Operation in der DNA-Computing und Molekular-Programmierung ist der Strangverdrängungsmechanismus. Derzeit gibt es zwei Möglichkeiten, die Strangverlagerung durchzuführen: Halten Sie vermittelte Strangverdrängung (TMSD) Polymerase-basierte Strangverdrängung (PSD) Toehold Austausch Neben einfachen Strangverdrängungsschemata wurden auch DNA-Computer unter Verwendung des Konzepts des Zehold Exchange konstruiert. In diesem System bindet ein Eingangs-DNA-Strang an ein klebriges Ende oder hält an ein anderes DNA-Molekül, das es erlaubt, ein anderes Strangsegment aus dem Molekül zu verschieben. Dies ermöglicht die Erstellung von modularen Logikkomponenten wie UND, OR und NOT-Gatter und Signalverstärker, die in beliebig große Computer verknüpft werden können. Diese Klasse von DNA-Computern erfordert keine Enzyme oder eine chemische Fähigkeit der DNA. Chemische Reaktionsnetze (CRNs)Der vollständige Stack für DNA Computing sieht sehr ähnlich wie eine traditionelle Computerarchitektur. Auf höchstem Niveau wird eine C-ähnliche allgemeine Programmiersprache mit einem Satz chemischer Reaktionsnetze (CRNs) ausgedrückt. Diese Zwischendarstellung wird in Domänen-Level-DNA-Design übersetzt und dann mit einer Reihe von DNA-Strängen implementiert. Im Jahr 2010 zeigte die Gruppe von Erik Winfree, dass DNA ein Substrat zur Umsetzung willkürlicher chemischer Reaktionen verwendet werden kann. Dieses geöffnete Tor zur Konstruktion und Synthese von biochemischen Steuerungen, da die ausdrucksstarke Leistung von CRNs einer Turing-Maschine entspricht. Solche Controller können in vivo für Anwendungen wie die Verhinderung von hormonellen Ungleichgewicht verwendet werden. DNAzyme Katalytische DNA (Deoxyribozym oder DNAzym) katalysieren eine Reaktion bei der Interaktion mit der entsprechenden Eingabe, wie einem passenden Oligonukleotid. Diese DNAzyme werden verwendet, um logische Gates analog zur digitalen Logik in Silizium zu bauen; jedoch sind DNAzyme auf 1,- 2,- und 3-Eingangsgates beschränkt, die keine aktuelle Implementierung zur Auswertung von Aussagen in Serie aufweisen. Das DNAzym-Logik-Gatter ändert seine Struktur, wenn es an ein passendes Oligonukleotid bindet und das fluorogene Substrat, an das es gebunden ist, frei gespalten wird. Während andere Materialien verwendet werden können, verwenden die meisten Modelle ein fluoreszenzbasiertes Substrat, weil es sehr einfach zu erkennen ist, auch an der einzigen Molekülgrenze. Die Fluoreszenzmenge kann dann gemessen werden, um zu sagen, ob eine Reaktion stattgefunden hat oder nicht. Das DNAzym, das sich ändert, wird dann "verwendet" und kann keine Reaktionen mehr initiieren. Diese Reaktionen erfolgen dadurch in einer Vorrichtung wie einem kontinuierlichen Rührkesselreaktor, wo altes Produkt entfernt und neue Moleküle zugegeben werden. Zwei häufig verwendete DNAzyme werden E6 und 8-17 genannt. Diese sind beliebt, weil sie eine Abspaltung eines Substrats an beliebiger Stelle ermöglichen. Stojanovic und MacDonald haben die E6 DNAzymes verwendet, um die MAYA I- und MAYA II-Maschinen zu bauen; Stojanovic hat auch Logik-Gate mit dem 8-17 DNAzym gezeigt. Während diese DNAzyme für die Konstruktion von Logik-Gattern als nützlich erwiesen wurden, sind sie durch die Notwendigkeit eines Metallkofaktors zur Funktion, wie Zn2+ oder Mn2,+ begrenzt und sind somit in vivo nicht nützlich. Ein als Stammschleife bezeichnetes Design, bestehend aus einem einzigen Strang von DNA, der eine Schleife am Ende aufweist, ist eine dynamische Struktur, die öffnet und schließt, wenn ein Stück DNA-Bindungen an das Schleifenteil. Dieser Effekt wurde genutzt, um mehrere Logik-Gate zu erstellen. Diese Logik-Gatter wurden verwendet, um die Computer MAYA I und MAYA II zu erstellen, die tic-tac-toe zu einem gewissen Grad spielen können. Enzyme Enzymbasierte DNA-Computer sind in der Regel als einfache Turing-Maschine; es gibt analoge Hardware in Form eines Enzyms und Software in Form von DNA. Benenson, Shapiro und Kollegen haben einen DNA-Computer mit dem FokI-Enzym demonstriert und auf ihrer Arbeit erweitert, indem sie automata zeigen, die diagnostizieren und auf Prostatakrebs reagieren: unter Expression der Gene PPAP2B und GSTP1 und einer Überexpression von PIM1 und HPN. Ihre Automata bewertete die Expression jedes Gens, eines Gens zu einer Zeit, und auf positive Diagnose dann veröffentlichte ein einzelnes Strang-DNA-Molekül (ssDNA), das ein Antisense für MDM2 ist. MDM2 ist ein Repressor des Proteins 53, das selbst ein Tumorsuppressor ist. Bei negativer Diagnose wurde beschlossen, einen Unterdrücker der positiven Diagnosedroge freizusetzen, anstatt nichts zu tun. Eine Einschränkung dieser Implementierung ist, dass zwei separate Automaten benötigt werden, eine zur Verabreichung jedes Medikaments. Der gesamte Prozess der Bewertung bis zur Freisetzung von Medikamenten dauerte etwa eine Stunde, um zu beenden. Dieses Verfahren erfordert auch Übergangsmoleküle sowie das FokI-Enzym. Die Anforderung für das FokI-Enzym beschränkt die Anwendung in vivo, zumindest für die Verwendung in "Zellen höherer Organismen". Es sei auch darauf hingewiesen, dass die Softwaremoleküle in diesem Fall wiederverwendet werden können. Algorithmische Selbst-Ambly-DNA-Nanotechnologie wurde auf dem verwandten Bereich der DNA-Computing angewendet. DNA-Fliesen können entworfen werden, um mehrere klebrige Enden mit Sequenzen ausgewählt, so dass sie als Wang-Fliesen wirken. Ein DX-Array wurde demonstriert, dessen Baugruppe eine XOR-Operation kodiert; dies ermöglicht es dem DNA-Array, einen zellulären Automaten zu implementieren, der einen fraktalen Sierpinski-Dicht erzeugt. Dies zeigt, dass die Berechnung in die Zusammenstellung von DNA-Arrays integriert werden kann, wodurch ihr Umfang über einfache periodische Arrays hinaus erhöht wird. Fähigkeiten DNA Computing ist eine Form des Parallel Computing, indem es die vielen verschiedenen Moleküle der DNA nutzt, um viele verschiedene Möglichkeiten auf einmal zu versuchen. Für bestimmte spezialisierte Probleme sind DNA-Computer schneller und kleiner als jeder andere Computer bisher gebaut. Darüber hinaus wurden spezielle mathematische Berechnungen gezeigt, um an einem DNA-Computer zu arbeiten. DNA-Computing bietet keine neuen Fähigkeiten aus dem Gesichtspunkt der Rechenschaftstheorie, deren Untersuchung mit verschiedenen Berechnungsmodellen rechnerisch auflösbar ist. Wenn beispielsweise der für die Lösung eines Problems benötigte Raum exponentiell mit der Größe des Problems (EXPSPACE-Probleme) an von Neumann-Maschinen wächst, wächst er immer noch exponentiell mit der Größe des Problems an DNA-Maschinen. Bei sehr großen EXPSPACE-Problemen ist die benötigte Menge an DNA zu groß, um praktisch zu sein. Alternative Technologien Eine Partnerschaft zwischen IBM und Caltech wurde im Jahr 2009 mit dem Ziel der "DNA Chips"-Produktion gegründet. A Die Caltech-Gruppe arbeitet an der Herstellung dieser nukleinsäurebasierten integrierten Schaltungen. Einer dieser Chips kann ganze Quadratwurzeln berechnen. Ein Compiler wurde in Perl geschrieben. Vor- und Nachteile Die langsame Verarbeitungsgeschwindigkeit eines DNA-Computers (die Ansprechzeit wird in Minuten, Stunden oder Tagen gemessen, anstatt Millisekunden) wird durch sein Potential kompensiert, um eine hohe Menge von mehreren parallelen Berechnungen zu machen. Dies ermöglicht es dem System, eine ähnliche Zeit für eine komplexe Berechnung wie für eine einfache zu nehmen. Dies wird dadurch erreicht, dass Millionen oder Milliarden von Molekülen gleichzeitig miteinander interagieren. Es ist jedoch viel schwieriger, die Antworten eines DNA-Computers als durch einen digitalen zu analysieren. Siehe auch Referenzen Weiter lesen Externe Links DNA modeled Computing Wie Stuff funktioniert Erklärung Dirk de Pol: DNS – Ein neuer Supercomputer?. In: Die Neue Gesellschaft / Frankfurter Hefte ISSN 0177-6738, Heft 2/96, Februar 1996, S. 170–172 ‚DNA computer’ cracks code, Physics Web Ars Technica - The New York Times DNA Computer for Detektieren Cancer Bringing DNA Computers to life, in Scientific American Japanese Researchers speichern Informationen in Bakterien DNA International Meeting on DNA Computing and Molecular Programmierung LiveScience.com-How DNA Könnte Power Computers