Klarer Text ist ein lockerer Begriff für Daten (z.B. Akteninhalt), die nur Zeichen von lesbarem Material darstellen, aber nicht seine grafische Darstellung oder andere Gegenstände (Tonnennummern, Bilder usw.). Man kann auch eine begrenzte Anzahl von weißen Weltraumzeichen umfassen, die eine einfache Anordnung von Texten betreffen, wie Räume, Line Pausen oder Tabulationszeichen (obwohl die Zeichen viele unterschiedliche Dinge bedeuten können, so sind sie kaum klar). Leichter Text unterscheidet sich vom Formatierten Text, in dem Stilinformationen enthalten sind; aus dem strukturierten Text, in dem die strukturellen Teile des Dokuments wie Absätze, Abschnitte und die entsprechenden Angaben aufgeführt sind; und von binären Dateien, in denen einige Teile als binäre Gegenstände auszulegen sind (verschlüsselte Zahlen, reale Zahlen, Bilder usw.). Der Begriff wird manchmal sehr locker verwendet, um Dateien, die nur lesbare Inhalte enthalten (oder nur Dateien mit nichts, dass der Sprecher nicht bevorzugt). Man könnte beispielsweise jede Angabe von Schrift oder Ausstattung (wie Markup, Markenabfall oder sogar Befüllung) ausschließen; Zeichen wie z.B. hemmende Zitate, nicht bahnbrechende Flächen, Soft hyphens, emhes und/oder ligatures oder andere Dinge. Prinzipiell kann der Text in jeder Kodierung erfolgen, aber gelegentlich wird der Begriff mit ASCII gemeint. Da Unicode-basierte Kodizes wie UTF-8 und UTF-16 mehr verbreitet werden, kann die Nutzung sinken. Leichter Text wird manchmal nur verwendet, um binäre Dateien auszuschließen: Diejenigen, in denen mindestens einige Teile der Datei nicht korrekt über den in Kraft gesetzten Charakter ausgelegt werden können. Zum Beispiel ist ein Dossier oder eine Spanne, die aus Gefangenschaft besteht (unabhängig von der Kodierung), gefolgt von 4 von ihnen, die eine binäre Zahl, die nicht nur eine Art(s) ist, eine binäre Datei, die nicht durch die lockersten gemeinsamen Nutzungen gekennzeichnet ist. Um eine einfache Textdatei auf eine Art zu übersetzen, die vollständig unterschiedliche Nummern verwendet, um Zeichen zu vertreten, ändert sich nicht die Bedeutung (so lange, wie Sie wissen, was die Kodierung ist), sondern für binäre Dateien, die eine solche Umwandlung bewirkt, ändert die Bedeutung mindestens einiger Teile der Datei. Klare Text- und reichhaltige Textdateien, die Marken enthalten oder andere Metadaten enthalten, gelten in der Regel als einfachen Text, solange die Marke auch in direkter menschlicher freundschaftlicher Form (wie in Nickel, XML und so). Da Coombs, Erneuerung und DeRose argumentieren, ist die Pünktung selbst gekennzeichnet, und es ist keines der Ansicht, dass es zweckmäßig ist, eine Datei von einem einfachen Text abzuweichen. Durch die Verwendung von einfachen Texten anstelle von binären Dateien können Dateien viel besser "im Wild" überleben, zum Teil durch die weitgehende Immunisierung der Computerarchitekturen. Zum Beispiel können alle Probleme der Endianness vermieden werden (mit Kodierungen wie UCS-2 anstelle von UTF-8, endianische Angelegenheiten, aber einheitlich für jeden Charakter, statt für potenziell bekannte Untersets). Laut dem Unicode Standard „Plain-Text ist eine reine Sequenz von Charaktercodes; der klare Text ist daher eine Sequenz von Unicode Charaktercodes“, der auch als reichhaltiger Text bekannt ist, ist jede Textvertretung, die durch Informationen wie eine Kennung, Schriftgröße, Farbe oder Hypertext Links ergänzt wird. Vertretungen wie SGML, RTF, HTML, XML, Wiki-Markup und TeX sowie fast alle Programmier-Sprach-Quellencode-Dateien gelten als einfachen Text. Inhalt ist für die Frage, ob eine Datei eindeutig ist. Zum Beispiel kann eine Datei mit einer grafischen Datei Zeichnungen oder sogar Bitd Abbildung zeigen, ist aber immer noch klar. Laut The Unicode Standard hat der Text zwei Haupteigenschaften gegenüber dem, was manchmal als reich (oder formatisiert) Text bezeichnet wird: „Bemerkung ist der zugrunde liegende Inhalt, auf den das Format angewendet werden kann." Leichter Text ist öffentlich, standardisiert und allgemein lesbar. Nutzung Zweck der Verwendung eines einfachen Textes ist heute in erster Linie Unabhängigkeit von Programmen, die ihre eigene spezielle Kodierung oder Formatierung oder Formatierung erfordern. Klare Textdateien können geöffnet, gelesen und mit allgegenwärtigen Textredakteuren und Versorgungsunternehmen bearbeitet werden. Eine Befehlsschnittstelle ermöglicht es den Menschen, im einfachen Text Anweisungen zu erteilen und eine Antwort zu erhalten, auch in der Regel in einem einfachen Text. Viele andere Computerprogramme sind auch in der Lage, einfache Texte zu verarbeiten oder zu erstellen, wie etwa zahllose Programme in DOS, Windows, klassisches Mac OS und Microsoft und seine Kin; sowie Webbrowser (ein paar Browser wie Lynx und das Line-Browser produzieren nur einen einfachen Text für die Anzeige) und andere E-Text-Reader. Klare Textdateien sind fast universell in der Programmierung; eine Quellecode-Datei, die Anweisungen in einer Programmiersprache enthält, ist fast immer eine einfache Textdatei. Leichter Text wird auch häufig für Konfigurationsdateien verwendet, die beim Start eines Programms für eingesparte Einstellungen gelesen werden. Leichter Text wird für viel E-Mail verwendet. Ein Kommentar, eine .txt-Datei oder ein TXT-Dokument enthält in der Regel nur einen einfachen Text (ohne Formatierung) für den Menschen. Das beste Format, um das Wissen dauerhaft zu speichern, ist klar und nicht nur ein bestimmtes binäres Format. Kennzeichencodes Vor den frühen 60er Jahren wurden vor allem Computer für die Numerierung anstatt für Text verwendet, und das Gedächtnis war extrem teuer. Computer haben oft nur 6 Bits für jede Art zugewiesen, so dass nur 64 Zeichen – als Versandcodes für A-Z, ein-z, und 0-9 würden nur 2 Codes verlassen: nirgendwo nahe genug. Die meisten Computer haben sich dafür entschieden, keine niedrigeren Schreiben zu unterstützen. frühe Textprojekte wie Roberto Busa's Index Thomisticus, der Brown Corpus und andere mussten daher auf Konventionen zurückgreifen, wie z.B. die Schlüsselinformationen, die vorher auf ein Risiko eingehen, die eigentlich den oberen Teil ausmachen. Fred Brooks von IBM argumentierte nachdrücklich, bis zu 8-bit von ihnen zu gehen, da einige Tage Menschen den Text verarbeiten möchten und gewinnen. Obwohl IBM EBCDIC benutzte, kamen die meisten Texte von damals an in ASCII mit Werten von 0 bis 31 für (nichtgedruckte) Kontrollzeichen und Werte von 32 bis 127 für grafische Zeichen wie Briefe, Ziffern und Pünkten. Die meisten Maschinen, die in 8 Bits anstatt 7 gespeichert sind, lehnen den verbleibenden Bit ab oder verwenden ihn als Checksum. In der Nähe von ASCII war eine große Hilfe, aber es versäumt, internationale und sprachliche Anliegen anzugehen. In England war der Dollar ($) nicht so nützlich, und die in spanischer, französischer, deutscher, portugiesischer und vieler anderer Sprachen verwendeten sichtbaren Figuren wurden in ASCII (nicht zu den in Griechenland, Russland und den meisten östlichen Sprachen verwendeten Zeichen) vollständig nicht verfügbar. Viele Einzelpersonen, Unternehmen und Länder haben zusätzliche Zeichen festgelegt, die erforderlich sind, um Kontrollzeichen zu übertragen oder Werte im Bereich von 128 bis 255 zu verwenden. Verwendung von Werten über 128 Konflikten mit dem 8. Bit als Checksum, aber die Checksum-Nutzung wird allmählich abgebaut. Diese zusätzlichen Zeichen wurden in verschiedenen Ländern unterschiedlich verschlüsselt, sodass Texten ohne Zusammenstellung der Ursprungsregeln unmöglich gemacht werden können. Zum Beispiel kann ein Browser anstelle von ‘ einen Browser anzeigen, wenn er versucht hat, einen anderen Charakter zu interpretieren. Die Internationale Organisation für Normung (ISO) hat schließlich mehrere Code-Seiten unter ISO 8859 entwickelt, um verschiedene Sprachen zu berücksichtigen. Die erste dieser (ISO 8859-1) ist auch als Lateinamerika-1 bekannt und deckt die Bedürfnisse der meisten (nicht alle) europäischen Sprachen ab, die lateinische Schriftzeichen verwenden (Es gab keinen ausreichenden Raum, um sie zu decken). ISO 2022 sah dann Konventionen für den Wechsel zwischen verschiedenen Charaktersets in Mid-Datei vor. Viele andere Organisationen entwickelten diese Unterschiede und seit vielen Jahren verwendete Windows- und RAM-Computer in kompatiblen Variationen. Mehr und komplexer geworden, was zu Anstrengungen der ISO und des Unicode-Konsortiums führt, um einen einheitlichen, einheitlichen Charakter zu entwickeln, der alle bekannten (oder zumindest alle derzeit bekannten) Sprachen abdecken könnte. Nach einigen Konflikten waren diese Anstrengungen vereint. Unicode erlaubt derzeit 1.114,112-Code-Werte und gibt Codes an, die nahezu alle modernen Textschriftsysteme sowie viele historische, und viele nicht-linguistische Zeichen wie Druckers bats, mathematische Symbole usw. abdecken. Text gilt unabhängig von seiner Kodierung als eindeutiger Text. Um es richtig zu verstehen oder zu verarbeiten, muss der Empfänger wissen (oder angeben), was die Kodierung verwendet wurde; sie müssen jedoch nicht wissen, was die Computerarchitektur, die verwendet wurde, oder über die von jedem Programm (falls überhaupt) definierten binären Strukturen, die die Daten erstellt haben. vielleicht ist die häufigste Möglichkeit, die spezifische Kodierung des einfachen Textes ausdrücklich mit einem MIME-Typ zu versehen. Für E-Mail und iPhone ist der Standard MIME-Typ Text/Erklärung -- einfachen Text ohne Kennzeichnung. Eine weitere MIME-Typ, die häufig sowohl bei E-Mail als auch bei VoIP verwendet wird, ist "Text/html; charset=UTF-8" - ein eindeutiger Text, der mit dem USTF-8-Typ, der mit einer Marke von mehreren Marken zusammenarbeitet. Ein weiterer gemeinsamer MIME-Typ ist Anwendung/json -- einfachen Text, der mit dem UTF-8-Typ, der mit der Marke Flash-Markup, vertreten ist. Wenn ein Dokument ohne explizite Angabe des Charakters der Kodierung erhalten wird, verwenden einige Anwendungen die Fazilität von charset, um zu ermitteln, was verwendet wurde. Kontrollcodes ASCII behält sich die ersten 32 Codes (Nummern 0–31 decimal) für Kontrollzeichen vor, die als "C0-Set" bezeichnet werden: Codes, die ursprünglich nicht zur Angabe von Druckinformationen dienen, sondern zur Kontrolle von Geräten (wie Drucker), die ASCII verwenden, oder zur Bereitstellung von Meta-Informationen über Datenströme wie die auf Magnetband gespeicherten Datenströme. Sie umfassen gemeinsame Zeichen wie das neue System und den tabakischen Charakter. In 8-bit-Elementen wie Lateinamerika-1 und anderen ISO 8859 werden auch die ersten 32 Zeichen der "oberen Halb" (128 bis 159) Kontrollcodes genannt, die als "C1" bezeichnet werden. Sie werden selten direkt verwendet; wenn sie sich in Dokumenten befinden, die in einer ISO 8859-Kodierung überholt sind, beziehen ihre Code-Positionen im Allgemeinen statt auf die Zeichen, die in einer eigenverantwortlichen, systemspezifischen Kodierung, wie Windows-1252 oder Mac OS Roman, die die Codes verwenden, um stattdessen zusätzliche grafische Zeichen zu liefern. Unicode definiert zusätzliche Kontrollzeichen, einschließlich bidirektionaler Textrichtung über die Zeichen (zur expliziten Aufschrift von rechts-to-left-Aufschrift innerhalb rechts rechts rechts rechts rechts rechts rechts rechts rechts rechts rechts rechts rechts rechts und auf der anderen Weise um) und Variabilitätsauswahler zur Auswahl alternativer Formen von CJK-ideographen, emoji und anderen Zeichen. Lesen Sie auch den Datencode Text-Datei-Text-Verpackungsnummer: