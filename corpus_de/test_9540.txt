Eine serverseitige dynamische Web-Seite ist eine Web-Seite, deren Konstruktion von einem anwendungsserververarbeitenden serverseitigen Skript gesteuert wird. In der serverseitigen Skriptierung bestimmen Parameter, wie die Montage jeder neuen Webseite abläuft, einschließlich der Einrichtung einer kundenseitigen Verarbeitung. Eine clientseitige dynamische Web-Seite verarbeitet die Webseite mithilfe von JavaScript, das im Browser läuft, während sie geladen wird. JavaScript kann mit der Seite über Document Object Model oder DOM interagieren, um den Seitenzustand abzufragen und zu ändern. Obwohl eine Web-Seite auf der Client-Seite dynamisch sein kann, kann sie immer noch auf einem statischen Hosting-Service wie GitHub Pages oder Amazon S3 gehostet werden, solange kein serverseitiges Code enthalten ist. Eine dynamische Webseite wird dann vom Benutzer oder von einem Computerprogramm neu geladen, um einige variable Inhalte zu ändern. Die Aktualisierungsinformationen könnten vom Server oder von Änderungen, die auf die DOM dieser Seite vorgenommen wurden, stammen. Dies kann oder darf die Browser-Geschichte nicht brechen oder eine gespeicherte Version erstellen, um zurück zu gehen, aber ein dynamisches Web-Seiten-Update mit AJAX-Technologien wird weder eine Seite erstellen, um zurück zu gehen, noch die Web-Browsing-Geschichte vor der angezeigten Seite zu klopfen. Mit AJAX erhält der Endbenutzer eine dynamische Seite, die als einzelne Seite im Webbrowser verwaltet wird, während der tatsächliche Webinhalt auf dieser Seite variieren kann. Die AJAX-Engine sitzt nur auf dem Browser, der Teile seiner DOM, die DOM, für seinen Client, von einem Anwendungsserver anfordert. DHTML ist der Begriff für Technologien und Methoden, die verwendet werden, um Webseiten zu erstellen, die keine statischen Webseiten sind, obwohl es aus dem gängigen Gebrauch seit der Popularisierung von AJAX gefallen ist, ein Begriff, der jetzt selbst selten verwendet wird. Client-side-scripting, serverseitiges Skripting oder eine Kombination dieser machen das dynamische Weberlebnis in einem Browser. Grundkonzepte Klassische Hypertext-Navigation, mit HTML oder XHTML allein, bietet statische Inhalte, was bedeutet, dass der Benutzer eine Webseite anfordert und einfach die Seite und die Informationen auf dieser Seite anzeigt. Eine Webseite kann jedoch auch ein Live-, dynamisches oder interaktives Nutzererlebnis bieten. Inhalt (Text, Bilder, Formularfelder usw.) auf einer Webseite kann sich ändern, in Reaktion auf verschiedene Kontexte oder Bedingungen. Es gibt zwei Möglichkeiten, diese Art von Wirkung zu erzeugen: Mit Hilfe von clientseitigen Skripten ändern Sie Schnittstellenverhalten innerhalb einer bestimmten Webseite, in Reaktion auf Maus- oder Tastaturaktionen oder bei bestimmten Timing-Ereignissen. In diesem Fall erfolgt das dynamische Verhalten innerhalb der Präsentation. Mit serverseitigem Skripting zur Änderung der bereitgestellten Seitenquelle zwischen Seiten, zur Einstellung der Reihenfolge oder Nachladung der dem Browser zugeführten Webseiten oder Webinhalte. Serverantworten können durch solche Bedingungen wie Daten in einer geposteten HTML-Form, Parameter in der URL, die Art des verwendeten Browsers, die Durchlaufzeit oder einen Datenbank- oder Serverzustand bestimmt werden. Webseiten, die auf der Client-Seite Scripting verwenden, müssen Präsentationstechnologie weithin als reiche Schnittstellenseiten verwenden. Clientseitige Skriptsprachen wie JavaScript oder ActionScript, die für Dynamic HTML (DHTML) bzw. Flash-Technologien verwendet werden, werden häufig verwendet, um Medientypen (Sound, Animationen, ändernde Text usw.) der Präsentation zu orchestrieren. Das Skripting ermöglicht auch die Verwendung von Remote-Skripting, einer Technik, mit der die DHTML-Seite zusätzliche Informationen von einem Server anfordert, mit einem versteckten Frame, XMLHtpRequests oder einem Webservice. Webseiten, die serverseitige Skripting verwenden, werden häufig mit Hilfe von serverseitigen Sprachen wie PHP, Perl, ASP, ASP erstellt. NET, JSP, ColdFusion und andere Sprachen. Diese serverseitigen Sprachen verwenden typischerweise die Common Gateway Interface (CGI) zur Erstellung dynamischer Webseiten. Diese Arten von Seiten können auch auf der Client-Seite die erste Art (DHTML, etc.) Geschichte Es ist schwierig, präzise über "dynamische Web-Seitenanfänge" oder Chronologie zu sein, weil das genaue Konzept erst nach der "breiten Entwicklung von Webseiten" Sinn macht. HTTP ist seit 1990 in Gebrauch, HTML, als Standard, seit 1996. Der Anstieg der Popularität des Webbrowsers begann 1993 mit Mosaic. Es ist jedoch offensichtlich, dass das Konzept dynamisch betriebener Webseiten das Internet vorschreibt, und zwar HTML. Zum Beispiel wurde 1990, vor der allgemeinen öffentlichen Nutzung des Internets, ein dynamisch angesteuertes Fernzugriff-Menüsystem von Susan Biddlecomb implementiert, der Direktor der Computerunterstützung des USC Health Care Systems an der University of Southern California BBS auf einem 16-Zeilen-TBBS-System mit TDBS add-on.database war. Die Einführung von JavaScript (also LiveScript genannt) ermöglichte die Erstellung von clientseitigen dynamischen Webseiten mit JavaScript-Code, der im Browser des Clients ausgeführt wird. Der Buchstabe J im Begriff AJAX gab ursprünglich die Verwendung von JavaScript sowie XML an. Mit dem Anstieg der Server-Seite JavaScript-Verarbeitung, zum Beispiel Node.js, ursprünglich 2009 entwickelt, wird JavaScript auch verwendet, um dynamisch Seiten auf dem Server zu erstellen, die vollständig an Clients gesendet werden. Execusite führte im Juni 1997 die erste dynamische Website-Lösung für den professionellen Markt ein. Execusite wurde im Januar 2000 von Website Pros (jetzt Web.com) erworben. Während des geschäftigen Zyklus der Dot-com-Blase kauften die ursprünglichen Execusite-Gründer das Unternehmen von Website Pros (Dezember 2000). Execusite wurde später von Wolters-Kluwer im Dezember 2001 erworben und als CCH Site Builder umbenannt. Serverseitiges Skript Ein auf einem Webserver laufendes Programm (serverseitiges Skripting) wird verwendet, um den Webinhalt auf verschiedenen Webseiten zu generieren, Benutzersitzungen zu verwalten und den Workflow zu steuern. Serverantworten können durch solche Bedingungen wie Daten in einer geposteten HTML-Form, Parameter in der URL, die Art des verwendeten Browsers, die Durchlaufzeit oder einen Datenbank- oder Serverzustand bestimmt werden. Solche Webseiten werden oft mit Hilfe von serverseitigen Sprachen wie ASP, ColdFusion, Go, JavaScript, Perl, PHP, Ruby, Python, WebDNA und anderen Sprachen erstellt, von einem Supportserver, der auf der gleichen Hardware wie der Webserver laufen kann. Diese serverseitigen Sprachen verwenden oft die Common Gateway Interface (CGI) zur Erstellung dynamischer Webseiten. Zwei bemerkenswerte Ausnahmen sind ASP. NET und JSP, die CGI-Konzepte in ihren APIs wiederverwenden, aber tatsächlich alle Web-Anfragen in eine gemeinsame virtuelle Maschine schicken. Die serverseitigen Sprachen werden verwendet, um Tags oder Marker innerhalb der Quelldatei der Webseite auf dem Webserver einzubetten. Wenn ein Benutzer auf einem Clientcomputer diese Webseite anfordert, interpretiert der Webserver diese Tags oder Marker, um Aktionen auf dem Server durchzuführen. Beispielsweise kann der Server angewiesen sein, Informationen aus einer Datenbank oder Informationen wie das aktuelle Datum einzufügen. Dynamische Webseiten werden oft geätzt, wenn nur wenige oder keine Änderungen erwartet werden und die Seite erwartet wird, dass eine erhebliche Menge von Web-Verkehr erhalten würde, die den Server verschwendet und die Seitenbelastung verlangsamen würde, wenn sie die Seiten auf der Fly für jede Anfrage generieren musste. Clientseitiges Scripting Clientseitiges Scripting verändert Schnittstellenverhalten innerhalb einer bestimmten Web-Seite in Reaktion auf Maus- oder Tastaturaktionen oder bei bestimmten Timing-Ereignissen. Dabei erfolgt das dynamische Verhalten innerhalb der Präsentation. Der clientseitige Inhalt wird auf dem lokalen Computersystem des Benutzers generiert. Solche Webseiten verwenden Präsentationstechnologie, genannt reiche Schnittstellenseiten. Clientseitige Skriptsprachen wie JavaScript oder ActionScript, die für Dynamic HTML (DHTML) bzw. Flash-Technologien verwendet werden, werden häufig verwendet, um Medientypen (Sound, Animationen, ändernde Text usw.) der Präsentation zu orchestrieren. Clientseitiges Skripting ermöglicht auch die Verwendung von Remote-Scripting, eine Technik, mit der die DHTML-Seite zusätzliche Informationen von einem Server anfordert, mit einem versteckten Frame, XMLHttpRequests oder einem Webservice. Die erste weit verbreitete Verwendung von JavaScript war 1997, als die Sprache als ECMAScript standardisiert und in Netscape 3 implementiert wurde. BeispielDer clientseitige Inhalt wird auf dem Computer des Clients erzeugt. Der Webbrowser holt eine Seite vom Server ab, verarbeitet dann den in der Seite eingebetteten Code (typisch in JavaScript geschrieben) und zeigt den Inhalt der abgerufenen Seite an den Benutzer. Die innereHTML-Eigenschaft (oder Schreibbefehl) kann die clientseitige dynamische Seitengenerierung illustrieren: zwei verschiedene Seiten A und B können als Dokument regeneriert werden (durch eine "Event Response Dynamic").innerHTML= A und document.innerHTML = B; oder "on load dynamic" by document.write(A) and document.write(B) Combining technologies Alle Client- und Serverkomponenten, die gemeinsam eine dynamische Web-Seite aufbauen, werden als Web-Anwendung bezeichnet. Web-Anwendungen verwalten Benutzerinteraktionen, Zustand, Sicherheit und Leistung. Ajax verwendet eine Kombination von beiden clientseitigen Skripting- und serverseitigen Anfragen. Es ist eine Web-Anwendungsentwicklungstechnik zum dynamischen Austausch von Inhalten, und es sendet Anfragen an den Server für Daten, um dies zu tun. Der Server gibt die angeforderten Daten zurück, die dann von einem clientseitigen Skript verarbeitet werden. Diese Technik kann die Server-Lastzeit reduzieren, weil der Client die gesamte Webseite nicht anfordert, die vom Sprachparser des Servers regeneriert wird; nur der Inhalt, der sich ändert, wird übertragen. Google Karten ist ein Beispiel für eine Web-Anwendung, die Ajax-Techniken verwendet. Ein Web-Client, wie ein Web-Browser, kann als eigenen Server fungieren und auf Daten von vielen verschiedenen Servern wie Gopher, FTP, NNTP (Usenet) und HTTP zugreifen, um eine Seite zu erstellen. HTTP unterstützt das Hochladen von Dokumenten vom Client zurück auf den Server. Dafür gibt es mehrere HTTP-Methoden. Siehe auch statische Webseite Dynamische HTMLResponsive Web Design Deep Web (Suchindexierung) Web Template-System Lösungsstacks, um dynamische Web-Seiten zu bedienen LAMP (Software Bündel) LYME (Software Bündel) LYCE (Software Bündel)Content Management System Web Content Management System Referenzen Externe Links Static versus dynamic web site from W3.orgDynamic web site using the Relationship Management Method, from W3.org. Große Analyse dynamischer Webseiten von University of Texas, Austin.