In der Programmiersprache Theorie, Semantik ist das Feld mit der strengen mathematischen Studie der Bedeutung der Programmiersprachen beschäftigt. Dies geschieht durch Auswertung der Bedeutung von syntaktisch gültigen Strings, die durch eine bestimmte Programmiersprache definiert sind und die Berechnung anzeigen. In einem solchen Fall, dass die Auswertung syntaktisch ungültiger Strings sein würde, wäre das Ergebnis nicht komputiert. Semantik beschreibt die Prozesse, die ein Computer bei der Durchführung eines Programms in dieser spezifischen Sprache folgt. Dies kann gezeigt werden, indem die Beziehung zwischen Eingabe und Ausgabe eines Programms beschrieben wird, oder eine Erklärung, wie das Programm auf einer bestimmten Plattform ausgeführt wird, wodurch ein Modell der Berechnung erstellt wird. Überblick Der Bereich der formalen Semantik umfasst alle folgenden: Die Definition von semantischen Modellen Die Beziehungen zwischen verschiedenen semantischen Modellen Die Beziehungen zwischen verschiedenen Bedeutungsansätzen Die Beziehung zwischen Berechnung und den zugrunde liegenden mathematischen Strukturen aus Feldern wie Logik, Satztheorie, Modelltheorie, Kategorietheorie usw. Es hat enge Verbindungen zu anderen Bereichen der Informatik wie Programmiersprache Design, Typ Theorie, Compiler und Dolmetscher, Programmverifikation und Modellkontrolle. Ansätze Es gibt viele Ansätze zur formalen Semantik; diese gehören zu drei großen Klassen: Denotationale Semantik, wobei jeder Satz in der Sprache als eine Bezeichnung interpretiert wird, d.h. eine konzeptuelle Bedeutung, die abstrakt betrachtet werden kann. Solche Bezeichnungen sind oft mathematische Objekte, die einen mathematischen Raum bewohnen, aber es ist nicht eine Anforderung, dass sie so sein sollten. Als praktische Notwendigkeit werden die Bezeichnungen unter Verwendung einer Form der mathematischen Notation beschrieben, die wiederum formalisiert werden kann als denotisches Metallanguage. So übersetzen z.B. denotationale Semantik von Funktionssprachen oft die Sprache in die Domänentheorie. Denotationale semantische Beschreibungen können auch als kompositorische Übersetzungen aus einer Programmiersprache in das demotationale Metallanguage dienen und als Grundlage für die Gestaltung von Compilern verwendet werden. Operationelle Semantik, wobei die Ausführung der Sprache direkt (anstatt durch Übersetzung) beschrieben wird. Operationelle Semantik entspricht lose der Interpretation, obwohl wieder die "Ergänzungssprache" des Dolmetschers in der Regel ein mathematischer Formalismus ist. Operationelle Semantik kann eine abstrakte Maschine (z.B. SECD-Maschine) definieren und Phrasen Bedeutung geben, indem sie die Übergänge beschreiben, die sie in Zuständen der Maschine induziert. Alternativ kann, wie beim reinen Lambda-Kalkus, die operative Semantik über syntaktische Transformationen auf Phrasen der Sprache selbst definiert werden; Axiomatische Semantik, wobei man Begriffe gibt, indem man die für sie geltenden Axiome beschreibt. Axiomatische Semantik unterscheidet nicht zwischen der Bedeutung eines Satzes und den logischen Formeln, die es beschreiben; seine Bedeutung ist genau das, was in irgendeiner Logik bewiesen werden kann. Das kanonische Beispiel der axiomatischen Semantik ist Hoare-Logik. Abgesehen von der Wahl zwischen den autonomen, operativen oder axiomatischen Ansätzen ergeben sich die meisten Variationen in formalen semantischen Systemen aus der Wahl des mathematischen Formalismus. Variationen Einige Variationen der formalen Semantik umfassen: Handlungsssemantik ist ein Ansatz, der versucht, denotationalen Semantik zu modularisieren, den Formalisierungsprozess in zwei Schichten (Makro- und Mikrosemantik) zu spalten und drei semantische Wesen (Aktionen, Daten und Ausbeuter) vorzubestimmen, um die Spezifikation zu vereinfachen; Algebraische Semantik ist eine Form der axiomatischen Semantik basierend auf algebraischen Gesetzen zur Beschreibung und Veranwendung von Programm semantik zur Definition von Programm semantik. Attribut grammars kann als eine denotationale Semantik verstanden werden, bei der die Zielsprache einfach die mit Attributannotationen angereicherte Originalsprache ist. Neben der formalen Semantik wurden auch Attribut grammars für die Codegenerierung in Compilern verwendet, und zur Augment regelmäßige oder kontextfreie Grammatik mit kontextsensitiven Bedingungen; Kategorische (oder functoriale) Semantik verwendet Kategorietheorie als Kern mathematischer Formalismus. Eine kategorische Semantik ist in der Regel bewiesen, einer axiomatischen Semantik zu entsprechen, die eine syntaktische Darstellung der kategorischen Strukturen gibt. Auch sind denotationale Semantik häufig Fälle einer allgemeinen kategorischen Semantik, Concurrency semantics ist ein Fang-all Begriff für jede formale Semantik, die gleichzeitige Berechnungen beschreibt.Historisch wichtige gleichzeitige Formalismen haben das Schauspieler-Modell und Prozess-Kalkuli enthalten; Spielsemantik verwendet eine Metapher inspiriert von der Spieltheorie. Predicate Transformatorsemantik, entwickelt von Edsger W. Dijkstra, beschreibt die Bedeutung eines Programmfragments als Funktion, die eine Postbedingung zu der Voraussetzung transformiert, die benötigt wird, um es zu etablieren. Beziehungen beschreiben Aus verschiedenen Gründen könnte man die Beziehungen zwischen verschiedenen formalen Semantik beschreiben wollen. Zum Beispiel: Um zu beweisen, dass eine bestimmte operative Semantik für eine Sprache die logischen Formeln einer axiomatischen Semantik für diese Sprache erfüllt. Ein solcher Nachweis zeigt, dass es gut ist, über eine bestimmte (operationelle) Interpretationsstrategie mit einem bestimmten (axiomatischen) Nachweissystem zu begründen. Um zu beweisen, dass die Betriebssemantik über eine hochrangige Maschine durch eine Simulation mit der Semantik über eine Low-Level-Maschine verbunden ist, wobei die Low-Level-Abstraktionsmaschine primitivere Operationen enthält als die hochrangige abstrakte Maschinendefinition einer bestimmten Sprache. Ein solcher Nachweis zeigt, dass die Low-Level-Maschine "getreu implementiert" die High-Level-Maschine. Es ist auch möglich, mehrere Semantik durch Abstraktionen über die Theorie der abstrakten Interpretation zu beziehen. Geschichte Robert W. Floyd wird mit der Gründung des Bereichs der Programmiersprache Semantik in Floyd (1967) ausgezeichnet. Siehe auch Computational semanticsFormale Semantik (logic)Formale Semantik (linguistics) Ontologie Ontologie (Informationswissenschaft)Semantische Gleichwertigkeit Semantische Technologie ReferenzenWeiter lesen TextbücherAlkylnitrite sind eine Gruppe von chemischen Verbindungen auf der Basis der molekularen Struktur R-ONO. Formal handelt es sich um Alkylester der salpetrigen Säure. Sie unterscheiden sich von Nitroverbindungen (R-NO2). Die ersten Mitglieder der Serie sind flüchtige Flüssigkeiten; Methylnitrit und Ethylnitrit sind bei Raumtemperatur und Druck gasförmig. Die Verbindungen haben einen ausgeprägten fruchtigen Geruch. Ein weiteres häufig vorkommendes Nitrit ist Amylnitrit (3-Methylbutylnitrit). Alkylnitrite wurden zunächst und weitgehend noch als Medikamente und chemische Reagenzien verwendet, eine Praxis, die Ende des 19. Jahrhunderts begann. In ihrer Verwendung als Medizin werden sie oft zur Linderung von Angina und anderen Herz-bedingten Krankheitssymptomen inhaliert. Alkylnitrite stellen jedoch, wenn als Poppers bezeichnet, Freizeitdrogen dar. Synthese und Eigenschaften Organische Nitrite werden aus Alkoholen und Natriumnitrit in Schwefelsäurelösung hergestellt. Sie zersetzen sich langsam beim Stehen, wobei die Zersetzungsprodukte Oxide von Stickstoff, Wasser, Alkohol und Polymerisationsprodukte des Aldehyds sind. Sie sind auch anfällig, homolytische Spaltung zu Alkylresten zu unterziehen, wobei die Nitrit-C-O-Bindung sehr schwach ist (in der Größenordnung von 40-50 kcal ∙ mol-1). Als wirksames Reagenz zur selektiven Nitrierung von Phenolen und Arylsulfonamiden n-Butylnitrit und Ammoniak wandeln Phenylhydroxylamin in sein Nitrosaminderivat Cupferron um. Ebenso ist Pyrrolidin ein Substrat für Ethylnitrit. Alkylnitrite werden auch bei der Bildung von Oximen mit den stärkeren Kohlensäuren und Säure- oder Basenkatalyse verwendet, beispielsweise bei der Umsetzung von 2-Butanon, Ethylnitrit und Salzsäure, die das Oxim bilden, der ähnlichen Reaktion mit Phenacylchlorid, oder der Umsetzung von Phenylacetonitril mit Methylnitrit und Natriumhydroxid. Ein isoliertes, aber klassisches Beispiel für die Verwendung von Alkylnitriten ist in Woodward und Doerings Chinin-Gesamtsynthese zu finden: für die sie diesen Reaktionsmechanismus vorgeschlagen haben: Medizinische Verwendung Antidot gegen Cyanidvergiftung Amylnitrit wird medizinisch als Antidot zur Cyanidvergiftung verwendet, Die leichten Alkylnitrite bewirken die Bildung von Methemoglobin, wobei als wirksames Antidot zur Cyanidvergiftung das Methemoglobin mit dem Cyanid zu ungiftigem Cyanmethemoglobin kombiniert. Die ersten Befragten tragen typischerweise ein Cyanidgift-Kit mit Amylnitrit. Referenzen Externe Links Medien im Zusammenhang mit Alkylnitriten bei Wikimedia Commons