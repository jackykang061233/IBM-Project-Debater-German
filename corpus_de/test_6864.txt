In der Kryptographie ist ein Nachrichtenauthentifizierungscode (MAC), der manchmal als Tag bezeichnet wird, ein kurzes Stück von Informationen, die zur Authentisierung einer Nachricht verwendet werden - mit anderen Worten, um zu bestätigen, dass die Nachricht vom angegebenen Absender (ihre Authentizität) kam und nicht geändert wurde. Der MAC-Wert schützt die Datenintegrität einer Nachricht sowie ihre Authentizität, indem Prüfer (die auch den geheimen Schlüssel besitzen) die Möglichkeit geben, Änderungen des Nachrichteninhalts zu erkennen. Terminologie Der Begriff Nachrichtenintegritätscode (MIC) wird häufig für den Begriff MAC substituiert, insbesondere in der Kommunikation, um ihn von der Verwendung dieser als Media Access Control Address (MAC-Adresse) zu unterscheiden. Einige Autoren verwenden jedoch MIC, um sich auf einen Nachrichtenverdau zu beziehen, der nur darauf abzielt, eine einzige Nachricht eindeutig, aber undurchsichtig zu identifizieren. RFC 4949 empfiehlt, den Begriff Nachrichtenintegritätscode (MIC) zu vermeiden und stattdessen mit Prüfsumme, Fehlererkennungscode, Hash, Keyed Hash, Nachrichtenauthentifizierungscode oder geschützter Prüfsumme. Begriffsbestimmungen Informell besteht ein Nachrichtenauthentifizierungscodesystem aus drei Algorithmen: Ein Schlüsselgenerationsalgorithmus wählt einen Schlüssel aus dem Schlüsselraum gleichmäßig zufällig aus. Ein Signierungsalgorithmus gibt einen Tag mit dem Schlüssel und der Nachricht effizient zurück. Ein Prüfalgorithmus überprüft effizient die Echtheit der Nachricht, die dem Schlüssel und dem Tag gegeben ist. Das heißt, Rückkehr akzeptiert, wenn die Nachricht und das Tag nicht mit geschmiedet oder geschmiedet, und ansonsten zurückgewiesen werden. Ein sicherer Nachrichten-Authentifizierungscode muss den Versuchen eines Gegners widerstehen, Tags zu schmieden, für willkürliche, auswählen oder alle Nachrichten, einschließlich unter Bedingungen der bekannten oder gewählten Botschaft. Es sollte rechnerisch unfehlbar sein, einen gültigen Tag der gegebenen Nachricht ohne Kenntnis des Schlüssels zu berechnen, auch wenn wir für den schlimmsten Fall davon ausgehen, dass der Gegner den Tag jeder Nachricht kennt, aber der in Frage stehende. Förmlich ist ein Nachrichtenauthentifizierungscode (MAC)-System ein Dreifach von effizienten Algorithmen (G, S, V) befriedigend: G (key-Generator) gibt den Schlüssel k am Eingang 1n, wobei n der Sicherheitsparameter ist. S (Zeichen) gibt einen Tag t auf den Schlüssel k und den Eingabestring x aus. V (verifizierende) Ausgänge an Eingängen akzeptiert oder abgelehnt: der Schlüssel k, der String x und der Tag t.S und V müssen folgendes erfüllen: Pr [k ← G(1n,) V(k, x, S(k, x) )= akzeptiert ]= 1.A MAC ist unvorhersehbar, wenn für jeden effizienten adversaryA Pr [k ← G(1n,) (x, t) ← AS(k, · (1n, x ∉ Query(AS(k, · ), 1n,) V(k, x, t=) akzeptiert] < negl(n), wo AS(k, · ) bedeutet, dass A Zugriff auf das Oracle S(k, · k) erhält, Sicherheit Während MAC-Funktionen cryptographische Hash-Funktionen ähnlich sind, besitzen sie unterschiedliche Sicherheitsanforderungen. Um als sicher angesehen zu werden, muss eine MAC-Funktion der existentiellen Fälschung unter gewählten Nachrichtenangriffen widerstehen. Dies bedeutet, dass selbst wenn ein Angreifer Zugang zu einem Orakel hat, das den geheimen Schlüssel besitzt und MACs für Nachrichten der Wahl des Angreifers erzeugt, kann der Angreifer das MAC für andere Nachrichten (die nicht verwendet wurden, um das Orakel zu fragen) nicht erraten, ohne unfehlbare Beträge der Berechnung durchzuführen. MACs unterscheiden sich von digitalen Signaturen, da beide MAC-Werte generiert und mit demselben geheimen Schlüssel überprüft werden. Dies bedeutet, dass der Sender und Empfänger einer Nachricht vor der Einleitung der Kommunikation auf denselben Schlüssel zustimmen müssen, wie dies bei symmetrischer Verschlüsselung der Fall ist. Aus dem gleichen Grund bieten MACs nicht die Eigenschaft von Nicht-Repudiation angeboten durch Signaturen speziell im Falle eines netzweiten gemeinsamen geheimen Schlüssels: Jeder Benutzer, der ein MAC überprüfen kann, ist auch in der Lage, MACs für andere Nachrichten zu generieren. Im Gegensatz dazu wird eine digitale Signatur mit dem privaten Schlüssel eines Schlüsselpaares erzeugt, das die Public-key-Kryptographie ist. Da dieser private Schlüssel nur seinem Inhaber zugänglich ist, beweist eine digitale Signatur, dass ein Dokument von keinem anderen als diesem Inhaber unterzeichnet wurde. So bieten digitale Signaturen keine Repudiation an. Allerdings kann die Nicht-Repudiation durch Systeme bereitgestellt werden, die die Schlüsselnutzungsinformationen sicher an den MAC-Schlüssel binden; derselbe Schlüssel ist im Besitz von zwei Personen, aber einer hat eine Kopie des Schlüssels, der für die MAC-Generation verwendet werden kann, während der andere eine Kopie des Schlüssels in einem Hardware-Sicherheitsmodul, das nur MAC-Verifikation erlaubt. Dies geschieht häufig in der Finanzbranche. Implementierung MAC-Algorithmen können aus anderen kryptographischen Primitiven, wie kryptographische Hash-Funktionen (wie bei HMAC) oder aus Block-Cipher-Algorithmen (OMAC, CCM, GCM und PMAC) aufgebaut werden. Allerdings sind viele der schnellsten MAC-Algorithmen wie UMAC-VMAC und Poly1305-AES auf Basis universeller Hashing aufgebaut. Intrinsisch Schlüsseled Hash Algorithmen wie SipHash sind auch durch Definition MACs; sie können noch schneller als universelle basierte MACs sein. Zusätzlich kann der MAC-Algorithmus bewusst zwei oder mehr kryptographische Primitiven kombinieren, um Schutz zu erhalten, auch wenn einer von ihnen später als verletzlich empfunden wird. So werden beispielsweise in Transport Layer Security (TLS) die Eingabedaten in Hälften aufgeteilt, die jeweils mit einem anderen Hashing Primitive (SHA-1 und SHA-2) verarbeitet werden, und dann zusammen XORed zum Ausgeben des MAC. Einmalige MAC Universal Hashing und insbesondere paarweise unabhängige Hash-Funktionen bieten einen sicheren Nachrichten-Authentifizierungscode, solange der Schlüssel maximal einmal verwendet wird. Dies ist als Einmal-Pad für die Authentifizierung zu sehen. Die einfachste derartige paarweise unabhängige Hash-Funktion wird durch den Zufallsschlüssel, Schlüssel =(a, b) definiert und der MAC-Tag für eine Nachricht m wird als Tag =(am + b) mod p berechnet, wobei p Prime ist. Im Allgemeinen bieten k-unabhängige Hashing-Funktionen einen sicheren Nachrichten-Authentifizierungscode, solange der Schlüssel weniger als k-mal für k-ways-unabhängige Hashing-Funktionen verwendet wird. Nachrichtenauthentifizierungscodes und Datenursprungauthentifizierung wurden auch im Rahmen der Quanten-Kryptographie diskutiert. Im Gegensatz zu anderen kryptographischen Aufgaben, wie z.B. der Schlüsselverteilung, wurde für eine ziemlich breite Quantenklasse MACs gezeigt, dass Quantenressourcen keinen Vorteil gegenüber bedingungslos sicheren ein-mal klassischen MACs bieten. Standards Es gibt verschiedene Standards, die MAC-Algorithmen definieren. Dazu gehören: FIPS PUB 113 Computer Data Authentication, 2002 zurückgezogen, definiert einen Algorithmus basierend auf DES. FIPSPUB 198-1 The Keyed-Hash Message Authentication Code (HMAC) ISO/IEC 9797-1 Mechanisms using a block cipher ISO/IEC 9797-2 Mechanisms using a dediziert hash-function ISO/IEC 9797-3 Mechanisms using a universal hash-function ISO/IEC 29192-6 Lightweight Kryptography - Message Authentifizierungscodes ISO/IEC 97 Diese Modelle und Parameter ermöglichen es, bestimmte Algorithmen durch Nominierung der Parameter zu definieren. Beispielsweise entspricht der FIPS PUB 113-Algorithmus funktionell dem ISO/IEC 9797-1 MAC-Algorithmus 1 mit Padding-Methode 1 und einem Block-Cipher-Algorithmus von DES. Ein Beispiel für MAC-Nutzung In diesem Beispiel führt der Absender einer Nachricht durch einen MAC-Algorithmus zur Erstellung eines MAC-Daten-Tags. Die Nachricht und das MAC-Tag werden dann an den Empfänger gesendet. Der Empfänger führt wiederum den Nachrichtenteil der Übertragung durch denselben MAC-Algorithmus mit demselben Schlüssel, wodurch ein zweites MAC-Daten-Tag erzeugt wird. Der Empfänger vergleicht dann das in der Übertragung empfangene erste MAC-Tag mit dem zweiten erzeugten MAC-Tag. Wenn sie identisch sind, kann der Empfänger sicher annehmen, dass die Nachricht bei der Übertragung (Datenintegrität) nicht verändert oder mitgedämpft wurde. Damit der Empfänger jedoch Replay-Angriffe erkennen kann, muss die Nachricht selbst Daten enthalten, die sicherstellen, dass diese gleiche Nachricht nur einmal gesendet werden kann (z.B. Zeitstempel, Sequenznummer oder Verwendung eines einmaligen MAC). Ansonsten könnte ein Angreifer – ohne seinen Inhalt zu verstehen – diese Nachricht aufzeichnen und zu einem späteren Zeitpunkt wieder abspielen und das gleiche Ergebnis wie der ursprüngliche Absender hervorbringen. Siehe auch Checksum CMAC HMAC (Hash-basierter Nachrichten-Authentifizierungscode)MAA MMH-Badger MACPoly1305 Authenticated Verschlüsselung UMAC VMAC SipHash Anmerkungen Referenzen Goldreich, Oded (2001,) Gründungen der Kryptographie I: Basic Tools, Cambridge: Cambridge University Press, ISBN 978-0-511-54689-1 Goldreich, Oded (2004,) Foundations of Kryptography II: Basic Applications (1. publ.ed, Labor) Cambridge Univ.PDF