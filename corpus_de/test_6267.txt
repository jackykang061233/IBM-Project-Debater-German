Eine Web-API ist eine Anwendungs-Programmierschnittstelle für einen Webserver oder einen Webbrowser. Es handelt sich um ein Web-Entwicklungskonzept, das in der Regel auf die Client-Seite einer Web-Applikation beschränkt ist (einschließlich aller verwendeten Web-Frameworks), und somit in der Regel keine Web-Server oder Browser-Implementierungsdetails wie SAPIs oder APIs enthält, es sei denn, diese werden von einer Remote-Web-Applikation öffentlich zugänglich gemacht. Serverseite Eine serverseitige Web-API ist eine programmatische Schnittstelle, die aus einem oder mehreren öffentlich exponierten Endpunkten zu einem definierten Anforderungs-Response-Nachrichtsystem besteht, das typischerweise in JSON oder XML ausgedrückt wird, das über das Web - am häufigsten mittels eines HTTP-basierten Webservers - exponiert wird. Mashups sind Web-Anwendungen, die die Verwendung von mehreren serverseitigen Web-APIs kombinieren. Webhooks sind serverseitige Web-APIs, die Eingabe als Uniform Resource Identifier (URI) nehmen, die wie ein Remote benanntes Rohr oder eine Art von Rückruf verwendet werden soll, so dass der Server als Client fungiert, um die bereitgestellte URI abzuleiten und ein Ereignis auf einem anderen Server auszulösen, der dieses Ereignis behandelt und so eine Art Peer-to-Peer IPC zur Verfügung stellt. Endpoints Endpoints sind wichtige Aspekte der Interaktion mit serverseitigen Web-APIs, da sie festlegen, wo Ressourcen liegen, die von Drittanbieter-Software aufgerufen werden können. Üblicherweise erfolgt der Zugriff über eine URI, auf die HTTP-Anfragen gepostet werden und von der somit die Antwort erwartet wird. Web-APIs können öffentlich oder privat sein, von denen letztere einen Zugriff auf Token erfordert. Endpunkte müssen statisch sein, andernfalls kann die korrekte Funktionsweise von Software, die mit ihr interagiert, nicht gewährleistet werden. Ändert sich der Standort einer Ressource (und damit der Endpunkt) dann bricht die zuvor geschriebene Software, da die benötigte Ressource nicht mehr an demselben Ort gefunden werden kann. Da API-Provider ihre Web-APIs noch aktualisieren wollen, haben viele ein Versioning-System in der URI eingeführt, das auf einen Endpunkt zeigt, zum Beispiel die Clarifai API: Der Endpunkt für die Tagging-Funktionalität innerhalb der Web-API hat folgende URI: https://api.google.com/v1/tag/". Der v1 Teil der URI gibt den Zugriff auf die erste Version der Web-API an. Wenn Clarifai beschließt, auf Version zwei zu aktualisieren, können sie dies tun, während weiterhin Unterstützung für Drittanbieter-Software, die die erste Version verwendet. Ressourcen versus services Web 2.0 Web APIs verwenden häufig maschinenbasierte Interaktionen wie REST und SOAP. RESTING Web APIs basieren typischerweise lose auf HTTP-Methoden, um Ressourcen über URL-codierte Parameter und die Verwendung von JSON oder XML zur Datenübermittlung zuzugreifen. Demgegenüber werden SOAP-Protokolle vom W3C standardisiert und die Verwendung von XML als Payload-Format, typischerweise über HTTP, beauftragt. Darüber hinaus verwenden SOAP-basierte Web-APIs die XML-Validierung, um strukturelle Nachrichtenintegrität zu gewährleisten, indem die mit WSDL-Dokumenten bereitgestellten XML-Schema verwendet werden. Ein WSDL-Dokument definiert genau die XML-Nachrichten und Transportbindungen eines Webdienstes. Die serverseitigen Web-APIs sind Schnittstellen für die Außenwelt, um mit der Geschäftslogik zu interagieren. Für viele Unternehmen sind diese interne Geschäftslogik und das damit verbundene geistige Eigentum, was sie von anderen Unternehmen unterscheidet und was ihnen möglicherweise einen Wettbewerbsvorteil verleiht. Sie wollen nicht, dass diese Informationen offengelegt werden. Um jedoch eine Web-API von hoher Qualität zur Verfügung zu stellen, muss es ein ausreichendes Maß an Dokumentation geben. Ein API-Anbieter, der nicht nur Dokumentation, sondern auch Links zu ihm in seinen Fehlermeldungen bietet, ist Twilio. Allerdings gibt es jetzt Verzeichnisse von beliebten dokumentierten serverseitigen Web-APIs. Wachstum und Auswirkungen Die Anzahl der verfügbaren Web-APIs ist in den letzten Jahren konsequent gewachsen, da Unternehmen die Wachstumschancen im Zusammenhang mit dem Betrieb einer offenen Plattform erkennen, mit der jeder Entwickler interagieren kann. Programmierbar Webtracks 9000 Web-APIs, die 2013 verfügbar waren, von 105 im Jahr 2005. Web-APIs sind allgegenwärtig geworden. Es gibt nur wenige große Software-Anwendungen/Dienste, die nicht bieten einige Form der Web-API. Eine der häufigsten Formen der Interaktion mit diesen Web-APIs ist die Einbettung von externen Ressourcen, wie Tweets, Facebook-Kommentare, YouTube-Videos, etc.. Tatsächlich gibt es sehr erfolgreiche Unternehmen, wie z.B. Disqus, deren Hauptdienst darin besteht, einbettbare Werkzeuge, wie z.B. ein merkmalsreiches Kommentarsystem, bereitzustellen. Jede Website der TOP 100 Alexa Internet-Ranking-Websites verwendet APIs und/oder bietet eigene APIs, die ein sehr ausgeprägter Indikator für die prodigiöse Größe und Auswirkungen von Web-APIs als Ganzes ist. Da die Anzahl der verfügbaren Web-APIs angewachsen ist, wurden Open Source-Tools entwickelt, um anspruchsvollere Suche und Entdeckung zu bieten. APIs.json bietet eine maschinenlesbare Beschreibung einer API und ihrer Operationen sowie der damit verbundenen Projekt-APIs. io bietet eine durchsuchbare öffentliche Liste von APIs basierend auf dem APIs.json Metadatenformat. Viele Unternehmen und Organisationen verlassen sich stark auf ihre Web-API-Infrastruktur, um ihren Kerngeschäftskunden zu dienen. 2014 erhielt Netflix rund 5 Milliarden API-Anfragen, die meisten von ihnen innerhalb ihrer privaten API. Regierung Viele Regierungen sammeln viele Daten, und einige Regierungen eröffnen jetzt Zugang zu diesen Daten. Die Schnittstellen, durch die diese Daten typischerweise zugänglich gemacht werden, sind Web-APIs. Web-APIs ermöglichen es, Daten wie "Haushalt, öffentliche Arbeiten, Verbrechen, rechtliche und andere Agentur-Daten" von jedem Entwickler auf bequeme Weise zuzugreifen. Client-Seite Eine clientseitige Web-API ist eine programmatische Schnittstelle, um die Funktionalität innerhalb eines Webbrowsers oder anderer HTTP-Clients zu erweitern. Ursprünglich waren dies am häufigsten in Form von nativen Plug-in-Browser-Erweiterungen, aber die meisten neueren Ziel standardisierte JavaScript-Bindungen. Die Mozilla Foundation erstellte ihre WebAPI-Spezifikation, die dazu dient, native mobile Anwendungen durch HTML5-Anwendungen zu ersetzen. Google erstellte ihre Native Client-Architektur, die dazu dient, unsichere native Plug-ins durch sichere native sandboxed Erweiterungen und Anwendungen zu ersetzen. Sie haben dies auch durch den Einsatz eines modifizierten LLVM AOT Compiler portabel gemacht. Siehe auch Anwendungs-Programmierschnittstelle Dynamische Webseite Überblick über RESTful API Beschreibung Sprachen REST Web-Service ReferenzenWeiter lesen Jacobson, Daniel; Woods, Dan; Brail, Greg (November 2011). AP Ist ein Strategieführer. Sebastopol, Calif: O'Reilly Media.ISBN 978-1-4493-0892-6.Mulloy, Brian.Web API Design - Crafting Interfaces that Developers Love (PDF). Apigee "Web APIs". Google Chrome. "Web API Referenz - Web-Technologie Referenz". Mozilla Developer Network."Web API Demonstration". Web API Demonstration.