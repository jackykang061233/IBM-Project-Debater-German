Client-Server-Modell ist eine verteilte Anwendungsstruktur, die Aufgaben oder Workloads zwischen den Anbietern einer Ressource oder Dienstleistung, genannt Server, und Service-Anfragenden, genannt Clients, verteilt. Oft kommunizieren Clients und Server über ein Computernetzwerk auf separater Hardware, aber sowohl Client als auch Server können im gleichen System wohnen. Ein Server-Host betreibt ein oder mehrere Serverprogramme, die ihre Ressourcen mit Clients teilen. Ein Client teilt in der Regel keine seiner Ressourcen, aber er fordert Inhalte oder Dienste von einem Server. Clients starten daher Kommunikationssitzungen mit Servern, die auf eingehende Anfragen warten. Beispiele für Computeranwendungen, die das Client-Server-Modell verwenden, sind E-Mail, Netzwerkdruck und das World Wide Web. Client- und Serverrolle Die Client-Server-Kennlinie beschreibt die Beziehung der kooperierenden Programme in einer Anwendung. Die Serverkomponente stellt eine Funktion oder einen Dienst für einen oder mehrere Clients bereit, die Anfragen für solche Dienste initiieren. Server werden nach den von ihnen bereitgestellten Diensten klassifiziert. Beispielsweise dient ein Webserver Webseiten und ein Dateiserver dient Computerdateien. Eine gemeinsame Ressource kann eine der Software und elektronischen Komponenten des Servercomputers sein, von Programmen und Daten zu Prozessoren und Speichergeräten. Die Aufteilung der Ressourcen eines Servers stellt einen Dienst dar. Ob ein Computer ein Client, ein Server oder beides ist, wird durch die Art der Anwendung bestimmt, die die Servicefunktionen benötigt. Beispielsweise kann ein einzelner Computer Webserver und Dateiserver-Software gleichzeitig ausführen, um verschiedene Daten an Clients zu bedienen, die verschiedene Arten von Anfragen machen. Client-Software kann auch mit Server-Software innerhalb desselben Computers kommunizieren. Die Kommunikation zwischen Servern, z.B. zum Synchronisieren von Daten, wird manchmal als Inter-Server oder Server-to-Server-Kommunikation bezeichnet. Generell ist ein Dienst eine Abstraktion von Computer-Ressourcen und ein Client muss sich nicht darum kümmern, wie der Server die Anforderung erfüllt und die Antwort liefert. Der Client muss nur die Antwort auf Basis des bekannten Anwendungsprotokolls, d.h. der Inhalte und die Formatierung der Daten für den gewünschten Dienst, verstehen. Clients und Server tauschen Nachrichten in einem Anfrage-Response-Messaging-Muster aus. Der Client sendet eine Anfrage und der Server gibt eine Antwort zurück. Dieser Nachrichtenaustausch ist ein Beispiel für die interprozessbezogene Kommunikation. Um zu kommunizieren, müssen die Computer eine gemeinsame Sprache haben, und sie müssen Regeln folgen, damit sowohl der Client als auch der Server wissen, was zu erwarten ist. Die Sprache und Kommunikationsregeln sind in einem Kommunikationsprotokoll definiert. Alle Protokolle arbeiten in der Anwendungsschicht. Das Anwendungsschichtprotokoll definiert die Grundmuster des Dialogs. Um den Datenaustausch noch weiter zu formalisieren, kann der Server eine Anwendungsprogrammierschnittstelle (API) implementieren. Die API ist eine Abstraktionsschicht für den Zugriff auf einen Dienst. Durch die Einschränkung der Kommunikation auf ein bestimmtes Content-Format erleichtert es die Parsing. Durch die Abstraktion des Zugangs erleichtert es den plattformübergreifenden Datenaustausch. Ein Server kann in kurzer Zeit Anfragen von vielen verschiedenen Clients erhalten. Ein Computer kann nur eine begrenzte Anzahl von Aufgaben zu jedem Zeitpunkt ausführen und setzt auf ein Planiersystem, um eingehende Anfragen von Kunden zu priorisieren, um sie aufzunehmen. Um Missbrauch zu verhindern und die Verfügbarkeit zu maximieren, kann die Serversoftware die Verfügbarkeit von Clients beschränken. Denial of Service-Angriffe werden entwickelt, um die Verpflichtung eines Servers zu nutzen, um Anfragen zu bearbeiten, indem es mit übermäßigen Anfrageraten überlastet wird. Die Verschlüsselung sollte angewendet werden, wenn sensible Informationen zwischen dem Client und dem Server übermittelt werden sollen. Beispiel Wenn ein Bank-Kunde mit einem Web-Browser (der Client) auf Online-Banking-Dienste zugreift, initiiert der Client eine Anfrage an den Webserver der Bank. Die Anmeldeinformationen des Kunden können in einer Datenbank gespeichert werden, und der Webserver greift auf den Datenbankserver als Client. Ein Anwendungsserver interpretiert die zurückgegebenen Daten durch Anwendung der Geschäftslogik der Bank und liefert die Ausgabe an den Webserver. Schließlich gibt der Webserver das Ergebnis an den Client-Webbrowser zur Anzeige zurück. In jedem Schritt dieser Sequenz von Client-Server-Nachrichtenaustauschen verarbeitet ein Computer eine Anfrage und gibt Daten zurück. Dies ist das Anforderungs-Response-Messaging-Muster. Wenn alle Anfragen erfüllt sind, ist die Reihenfolge vollständig und der Webbrowser stellt die Daten dem Kunden vor. Dieses Beispiel illustriert ein für das Client-Server-Modell gültiges Designmuster: Trennung von Bedenken.Frühgeschichte Eine frühe Form der Client-Server-Architektur ist Remote-Job-Eintrag, da mindestens OS/360 (angekündigt 1964,), wo die Anfrage war, einen Job auszuführen, und die Antwort war die Ausgabe. Bei der Formulierung des Client-Server-Modells in den 1960er und 1970er Jahren nutzten Informatiker, die ARPANET (im Stanford Research Institute) aufbauen, den Begriff Server-Host (oder Host) und User-Host (oder User-Host) und diese erscheinen in den frühen Dokumenten RFC 5 und RFC 4. Diese Nutzung wurde Mitte der 1970er Jahre bei Xerox PARC fortgesetzt. Ein Kontext, in dem Forscher diese Begriffe benutzten, war die Gestaltung einer Computernetzwerk-Programmiersprache namens Decode-Encode Language (DEL). Der Zweck dieser Sprache war es, Befehle von einem Computer (der Benutzer-Host) zu akzeptieren, die dem Benutzer Statusberichte zurückgeben würden, da er die Befehle in Netzwerkpaketen codierte. Ein weiterer DEL-fähiger Computer, der Server-Host, erhielt die Pakete, decodierte sie und lieferte formatierte Daten an den Benutzer-Host zurück. Ein DEL-Programm im User-Host erhielt die Ergebnisse, um dem Benutzer zu präsentieren. Dies ist eine Client-Server-Transaktion. Die Entwicklung von DEL begann gerade im Jahr 1969, das Jahr, dass das US-Verteidigungsministerium ARPANET (Vorläufer des Internets) gegründet. Client-Host und Server-Host Client-Host und Server-Host haben subtil verschiedene Bedeutungen als Client und Server. Ein Host ist jeder Computer, der mit einem Netzwerk verbunden ist. Während sich die Wörter Server und Client entweder auf einen Computer oder auf ein Computerprogramm beziehen können, beziehen sich Server-Host und Benutzer-Host immer auf Computer. Der Host ist ein vielseitiger, multifunktionaler Computer; Clients und Server sind nur Programme, die auf einem Host laufen. Im Client-Server-Modell wird ein Server eher der Aufgabe des Dienstes gewidmet. Eine frühe Verwendung des Wort-Clients erfolgt in "Daten von Funktion in einem verteilten Dateisystem trennen", einer Zeitung von 1978 von Xerox PARC Informatikern Howard Sturgis, James Mitchell und Jay Israel. Die Autoren sind vorsichtig, den Begriff für Leser zu definieren, und erklären, dass sie es verwenden, um zwischen dem Benutzer und dem Netzwerkknoten des Benutzers (der Client) zu unterscheiden. Bis 1992 war der Wortserver in die allgemeine Parlance eingetragen. Zentrale Berechnung Das Client-Server-Modell diktiert nicht, dass Server-Hosts mehr Ressourcen als Client-Hosts haben müssen. Vielmehr ermöglicht es jedem universellen Computer, seine Fähigkeiten durch die Nutzung der gemeinsamen Ressourcen anderer Hosts zu erweitern. Zentralisiertes Computing ordnet jedoch spezifisch eine große Menge an Ressourcen an eine kleine Anzahl von Computern zu. Je mehr Berechnung von Client-Hosts auf die zentralen Computer abgeladen wird, desto einfacher können die Client-Hosts sein. Es basiert auf Netzwerkressourcen (Server und Infrastruktur) für Berechnung und Speicherung. Ein scheibenloser Knoten lädt sogar sein Betriebssystem aus dem Netzwerk, und ein Computer-Endgerät hat überhaupt kein Betriebssystem; es ist nur eine Ein-/Ausgabe-Schnittstelle zum Server. Ein Fett-Client, wie ein persönlicher Computer, verfügt dagegen über viele Ressourcen und verlässt sich nicht auf einen Server für wesentliche Funktionen. Da die Mikrocomputer im Preis zurückgingen und von den 1980er- bis Ende der 1990er-Jahre an die Macht stiegen, überstiegen viele Organisationen die Berechnung von zentralisierten Servern, wie Mainframes und Minicomputern, auf Fettkunden. Dies ergab eine größere, individualisierte Dominion über Computerressourcen, aber kompliziertes Informationstechnologie-Management. Während der 2000er Jahre reiften Web-Anwendungen genug, um Rivalen-Anwendungssoftware für eine bestimmte Mikroarchitektur entwickelt. Diese Reifung, eine erschwinglichere Massenspeicherung und das Aufkommen einer serviceorientierten Architektur gehörten zu den Faktoren, die den Cloud Computing-Trend der 2010er Jahre hervorriefen. Vergleich mit Peer-to-Peer Architektur Neben dem Client-Server-Modell verwenden verteilte Rechenanwendungen oft die Peer-to-Peer (P2P) Anwendungsarchitektur. Im Client-Server-Modell ist der Server oft als zentralisiertes System konzipiert, das viele Clients bedient. Die Rechenleistungs-, Speicher- und Speicheranforderungen eines Servers müssen entsprechend auf die erwartete Arbeitsbelastung skaliert werden. Load-Balancing und Failover-Systeme werden häufig verwendet, um den Server über eine einzige physische Maschine hinaus zu skalieren. Der Lastausgleich wird definiert als die methodische und effiziente Verteilung von Netzwerk- oder Anwendungsverkehr auf mehreren Servern in einem Serverbetrieb. Jeder Load Balancer sitzt zwischen Client-Geräten und Backend-Servern, empfängt und verteilt dann eingehende Anfragen an jeden verfügbaren Server, der sie erfüllen kann. In einem Peer-to-Peer-Netzwerk bündeln zwei oder mehr Computer (Peers) ihre Ressourcen und kommunizieren in einem dezentralen System.Peers sind koequale oder ausrüstende Knoten in einem nicht-hierarchischen Netzwerk. Anders als Client-Server oder Client-queue-Client-Netzwerk kommunizieren Peers direkt miteinander. Bei der Peer-to-Peer-Netzwerkierung kann ein Algorithmus im Peer-to-Peer-Kommunikationsprotokoll die Last ausgleicht und sogar Peers mit bescheidenen Ressourcen dazu beitragen, die Last zu teilen. Wenn ein Knoten nicht verfügbar wird, bleiben seine gemeinsamen Ressourcen verfügbar, solange andere Peers es anbieten. Idealerweise muss ein Peer keine hohe Verfügbarkeit erreichen, da andere, redundante Peers für jede Ressourcen-Downtime ausmachen; da sich die Verfügbarkeit und die Tragfähigkeit der Peers ändern, leitet das Protokoll Anfragen um. Sowohl Client-Server als auch Master-Slave gelten als Unterkategorien verteilter Peer-to-Peer-Systeme. Siehe auch == Anmerkungen =Narkologie (Russisch: наркология: narkológija,) von russischer нарко-(narco, bezogen auf Narkotika, illegale Drogen) + -логия -(logie, "Branch of Study)" ist eine Unterbesonderheit der Psychiatrie, die sich mit der Prävention, Behandlung, Diagnose, Diagnose, Sozialversorgung und sozialabhängigen befasst. Die Studie und Wissenschaft von Phänomenen von Narkompanien, Toxikowonen, Alkoholkonsumstörungen, und seine Ätiologie, Pathogenese und klinische Aspekte. Der Begriff für einen Praktizierenden der Narziologie ist der Narkologe. In den Vereinigten Staaten sind die vergleichbaren Begriffe "Adiktionsmedizin" und Suchtist. Die Narkologie wurde in den frühen 1960er-Jahren als getrennte medizinische Spezialität in der Sowjetunion eingeführt. Der Begriff Narziologie wird insbesondere in den Ländern der ehemaligen Sowjetunion, einschließlich Russland, verwendet. Menschenrechtsverletzungen in den Körpern der Vereinten Nationen und Menschenrechtsorganisationen haben Menschenrechtsverletzungen gegen Menschen, die Drogen in Russland verwenden, dokumentiert, einschließlich des absoluten Verbots der Opioid-Substitutionstherapie und der Methadon-Behandlung, der Verwendung von unwissenschaftlichen Methoden bei der Behandlung von Suchtstörungen, der Abwesenheit von Drogenabhängigkeit Behandlung für Menschen mit schweren medizinischen Bedingungen. Weitere Literatur Stoimenov, Y. A;. Stoimenova, M. Y;. Koeva, P. Y. (2003). Психиатрический энциклопедический словарь[Psychiatric Encyclopaedic Dictionary] (auf Russisch). Киев: МАСП.p 565.ISBN 966-608-306-X. Elovich, Richard; Drucker, Ernest (2008). " Bei der Drogenbehandlung und der sozialen Kontrolle: Der große Rücksprung der russischen Narziologie". Harm Reduction Journal.5 (1:) 23.doi:10.1186/1477-7517-5-23.ISSN 1477-7517.PMC 2474597. Quellen