In der Rechenschaftstheorie ist die Kirche-Turing Dissertation (auch als Rechenschaftsarbeit, Turing-Church-Thesis, die Kirche-Turing Conjecture, Kirche-Thesis, Kirche-Konjektur und Turing-Thesis bekannt) eine Hypothese über die Natur der Rechenfunktionen. Es gibt an, dass eine Funktion auf den natürlichen Zahlen durch ein effektives Verfahren berechnet werden kann, wenn und nur, wenn sie von einer Turing-Maschine berechnet wird. Die Dissertation ist nach der amerikanischen Mathematiker Alonzo Kirche und dem britischen Mathematiker Alan Turing benannt. Vor der genauen Definition der Rechenfunktion nutzten Mathematiker oft den informellen Begriff effektiv kalkulierbar, um Funktionen zu beschreiben, die nach Papier- und Bleistiftmethoden berechnet werden. In den 1930er Jahren wurden mehrere unabhängige Versuche unternommen, den Begriff der Rechenschaftspflicht zu formalisieren: 1933 formierte Kurt Gödel mit Jacques Herbrand die Definition der Klasse der allgemeinen rekursiven Funktionen: die kleinste Klasse der Funktionen (mit willkürlich vielen Argumenten), die unter Komposition, Rekursion und Minimierung geschlossen wird und Null, Nachfolger und alle Projektionen beinhaltet. Im Jahre 1936 erstellte die Alonzo Kirche eine Methode zur Definition von Funktionen, die λ-Calculus genannt werden. Innerhalb von λ-Calculus definierte er eine Kodierung der natürlichen Zahlen, die die Kirchenzahlen genannt werden. Eine Funktion auf den natürlichen Zahlen wird als λ-komputierbar bezeichnet, wenn die entsprechende Funktion auf den Kirchenzahlen durch einen Begriff der λ-Calculus dargestellt werden kann. Auch im Jahr 1936, vor dem Erlernen der kirchlichen Arbeit, Alan Turing erstellte ein theoretisches Modell für Maschinen, jetzt Turing Maschinen genannt, die Berechnungen von Eingaben durch Manipulation von Symbolen auf einem Band durchführen könnte. Bei einer geeigneten Kodierung der natürlichen Zahlen als Zeichenfolgen wird eine Funktion auf den natürlichen Zahlen als Turing berechnet, wenn eine Turingmaschine die entsprechende Funktion auf codierten natürlichen Zahlen berechnet. Kirche, Kleene und Turing bewiesen, dass diese drei formal definierten Klassen von Rechenfunktionen zusammenfallen: Eine Funktion ist λ-komputierbar, wenn und nur, wenn Turing rechnerbar ist, und wenn und nur, wenn sie allgemein rekursiv ist. Dies hat Mathematiker und Informatiker dazu gebracht, dass das Konzept der Rechenbarkeit durch diese drei äquivalenten Prozesse genau charakterisiert ist. Andere formale Versuche, die Rechenschaftspflicht zu charakterisieren, haben diesen Glauben anschließend verstärkt (siehe unten). Die Kirche-Turing Dissertation hingegen besagt, dass die oben genannten drei formal definierten Klassen von Rechenfunktionen mit der informellen Vorstellung einer effektiv kalkulierbaren Funktion übereinstimmen. Obwohl die Dissertation eine nahezu-universale Akzeptanz aufweist, kann sie nicht formal nachgewiesen werden, da das Konzept einer effektiven Berechnungsbarkeit nur informaly definiert ist. Seit seiner Gründung sind Variationen auf der Originalthese entstanden, einschließlich Aussagen über das, was physikalisch durch einen Computer in unserem Universum (physikalische Kirchen-Turing-Thesis) realisiert werden kann und was effizient berechnet werden kann (Church-Turing-Thesis (Komplexitätstheorie). Diese Variationen sind nicht auf Kirche oder Turing zurückzuführen, sondern entstehen aus späteren Arbeiten in der Komplexitätstheorie und der digitalen Physik. Die These hat auch Auswirkungen auf die Philosophie des Geistes (siehe unten). Die Aussagen in den Worten J. B. Rosser (1939) von Church's and Turing richten sich an den Begriff der "wirksamen Rechenbarkeit" wie folgt: "Gleich die Existenz von CC und RC (Church's and Rosser's Proofs) setzt eine präzise Definition von Effektiv voraus. Hier wird "Effective Method" im eher speziellen Sinne eines Verfahrens verwendet, dessen jeder Schritt genau vorgegeben ist und das sicher ist, die Antwort in einer endlichen Anzahl von Schritten zu erzeugen". So wird die adverb-adjektive Wirkung im Sinne von "1a: Herstellung einer entschiedenen, entscheidenden oder gewünschten Wirkung" und "fähig, ein Ergebnis zu erzeugen". Im Folgenden werden die Worte "effektiv kalkulierbar" bedeuten, "durch beliebige intuitiv wirksame Mittel überhaupt hergestellt" und "effektiv rechnerisch" bedeutet "produziert von einer Turing-Maschine oder einem gleichwertigen mechanischen Gerät". Turings Definitionen in einer Fußnote in seiner 1938 Ph.D-Thesis Systems of Logic Basierend auf Ordinals, beaufsichtigt von der Kirche, sind praktisch die gleichen: † Wir werden den Ausdruck "komputable Funktion" verwenden, um eine von einer Maschine kalkulierbare Funktion zu bedeuten und "effektiv kalkulierbar" auf die intuitive Idee ohne besondere Identifikation mit einer dieser Definitionen zu verweisen. Die Dissertation kann als: Jede effektiv kalkulierbare Funktion ist eine rechnerische Funktion. Die Kirche sagte auch, dass "Kein Rechenverfahren wird als Algorithmus betrachtet werden, es sei denn, es kann als Turing Machine dargestellt werden". Turing sagte es so: Es wurde gesagt... dass "eine Funktion effektiv kalkulierbar ist, wenn ihre Werte durch einen rein mechanischen Prozess gefunden werden können". Wir können dies buchstäblich verstehen, dass durch einen rein mechanischen Prozess, der von einer Maschine durchgeführt werden könnte. Die Entwicklung ... führt zu einer Identifizierung der Rechenschaftspflicht mit einer effektiven Rechenbarkeit.[† ist die oben zitierte Fußnote] Geschichte Eines der wichtigen Probleme für Logiker in den 1930er Jahren war das Entscheidungsproblem von David Hilbert und Wilhelm Ackermann, das fragte, ob es ein mechanisches Verfahren zur Trennung mathematischer Wahrheiten von mathematischen Fehlern gab. Diese Suche erforderte, dass der Begriff des Algorithmus oder "effektive Berechnungsfähigkeit" verdrängt werden, zumindest gut genug, um die Suche zu beginnen. Aber von Anfang an begannen die Versuche der Alonzo-Kirche mit einer Debatte, die bis heute weitergeht. War der Begriff der "wirksamen Berechnungsfähigkeit" (i) ein "Axiom oder Axiome" in einem axiomatischen System, (ii) nur eine Definition, die zwei oder mehr Sätze identifiziert, (iii) eine empirische Hypothese, die durch Beobachtung von natürlichen Ereignissen überprüft werden soll, oder (iv) nur ein Vorschlag für die Argumentation (d.h. eine These). Circa 1930–1952 Im Zuge des Studiums des Problems stellte die Kirche und sein Student Stephen Kleene den Begriff von λ-definierbaren Funktionen vor, und sie konnten beweisen, dass mehrere große Funktionsklassen, die in der Zahlentheorie häufig vorkommen, λ-definierbar waren. Die Debatte begann, als die Kirche Gödel vorschlug, die "effektiv rechnerischen" Funktionen als die λ-definierbaren Funktionen zu definieren. Gödel war jedoch nicht überzeugt und nannte den Vorschlag "etwa unbefriedigend". Vielmehr hat Gödel in Übereinstimmung mit der Kirche (ca. 1934–35) vorgeschlagen, den Begriff der "wirksamen Berechnungsfähigkeit" zu axiomatisieren; in einem Brief von 1935 an Kleene berichtete die Kirche, dass: Seine [Gödels] einzige Idee damals war, dass es möglich sein könnte, in Bezug auf die effektive Berechnungsfähigkeit als undefinierte Vorstellung eine Reihe von Axiomen zu nennen, die die allgemein akzeptierten Eigenschaften dieses Begriffs verkörpern würden, und etwas auf dieser Grundlage zu tun. Aber Gödel bot keine weitere Anleitung. Schließlich würde er seine Rekursion, geändert durch Herbrands Vorschlag, vorschlagen, dass Gödel in seinen 1934 Vorträgen in Princeton NJ (Kleene und Rosser transkribierten die Notizen). Aber er glaubte nicht, dass die beiden Ideen zufriedenstellend identifiziert werden könnten "außer heuristisch". Als nächstes war es notwendig, die Gleichwertigkeit von zwei Begriffen der effektiven Berechnungsfähigkeit zu identifizieren und zu beweisen. Ausgestattet mit der λ-Calculus und der allgemeinen Rekursion, Stephen Kleene mit Hilfe von Kirche und J. Barkley Rosser produzierte Beweise (1933, 1935), um zu zeigen, dass die beiden Calcula gleichwertig sind. Die Kirche änderte anschließend seine Methoden, um die Herbrand-Gödel-Rekursion einzubeziehen, und dann bewiesen (1936) dass das Entscheidungsproblem unlösbar ist: Es gibt keinen Algorithmus, der feststellen kann, ob eine gut gebildete Formel eine "normale Form" aufweist. Viele Jahre später in einem Brief an Davis (c. 1965) sagte Gödel, dass "er war zum Zeitpunkt dieser [1934] Vorträge, überhaupt nicht davon überzeugt, dass sein Konzept der Rekursion alle möglichen Rekursionen umfasste". Bis 1963-64 würde Gödel Herbrand-Gödel-Rekursion und die λ-Calculus zugunsten der Turing-Maschine als Definition des Algorithmus oder "mechanisches Verfahren" oder "formales System" verwerfen. Eine Hypothese, die zu einem natürlichen Gesetz führt:? Ende 1936 wurde Alan Turings Papier (auch beweisen, dass das Entscheidungsproblem unlösbar ist) oral ausgeliefert, aber noch nicht im Druck erschienen. Auf der anderen Seite war Emil Posts 1936 Papier erschienen und wurde unabhängig von Turings Arbeit zertifiziert. Die kirchliche Identifizierung der effektiven Rechenschaft mit den λ-Calculus und der Wiederaufklärung ist nach wie vor nicht miteiner Meinung: Tatsächlich trägt die von Kirche und anderen bereits geleistete Arbeit diese Identifikation erheblich über die Arbeitshypothese hinaus. Aber diese Identifikation unter einer Definition zu maskieren... blindt uns auf die Notwendigkeit seiner ständigen Überprüfung. Vielmehr betrachtete er den Begriff der "wirksamen Kalkulationsfähigkeit" als bloße "Arbeitshypothese", die durch induktive Argumentation zu einem "natürlichen Gesetz" anstatt durch "eine Definition oder ein Axiom" führen könnte. Diese Idee wurde von der Kirche scharf kritisiert. So war Post in seinem 1936 Papier auch Kurt Gödels Vorschlag an die Kirche in 1934–35, dass die These als Axiom oder Axiom-Set ausgedrückt werden könnte. Turing fügt eine andere Definition hinzu, Rosser entspricht allen drei: In nur kurzer Zeit erschien Turings 1936–37 Zeitung "Über Computable Numbers, mit einem Antrag auf Entscheidungsproblem". In ihm erklärte er einen weiteren Begriff der "wirksamen Rechenbarkeit" mit der Einführung seiner a-Maschinen (jetzt bekannt als das Turing Machine Abstract Computermodell). Und in einem als Anlage zu seinem 1936–37-Papier hinzugefügten Proof-Sketch zeigte Turing, dass die Funktionsklassen von λ-Calculus und Turing-Maschinen zusammenfallen. Die Kirche war schnell zu erkennen, wie überzeugend Turings Analyse war. In seiner Überarbeitung von Turings Papier machte er deutlich, dass Turings Begriff "die Identifizierung mit Wirksamkeit im gewöhnlichen (nicht explizit definierten) Sinn sofort sichtbar gemacht". In einigen Jahren (1939) würde Turing, wie Kirche und Kleene vor ihm, vorschlagen, dass seine formale Definition des mechanischen Rechenmittels die richtige war. So hatten bis 1939 sowohl die Kirche (1934) als auch Turing (1939) individuell vorgeschlagen, dass ihre "formalen Systeme" Definitionen der "effektiven Berechnungsfähigkeit" sein sollten, die ihre Aussagen nicht als Thesen rahmen. Rosser (1939) identifizierte formal die drei Begriffe-als-Definitionen: Alle drei Definitionen sind gleichwertig, also spielt es keine Rolle, welche verwendet wird. Kleene schlägt vor Dissertation I: Dies hinterließ die Übertreibung einer Dissertation an Kleene. In seinem 1943 Papier Rekursive Prädikate und Quantifiers schlug Kleene sein "THESIS I:" Diese heuristische Tatsache [die allgemeinen rekursiven Funktionen sind effektiv kalkulierbar]... führte die Kirche zu der folgenden These. Die gleiche These ist implizit bei Turings Beschreibung von Rechenmaschinen(23). THEMA I.Jede effektiv kalkulierbare Funktion (effektiv dezidierbares Prädikat) ist allgemein rekursive[Kleenes Italics] Da eine genaue mathematische Definition des Begriffs effektiv kalkulierbar (effektiv dezidierbar) gewünscht wurde, können wir diese These als Definition von ihr ... Referenzen Kirche 1936; (23) Referenzen Turing 1936–7 Kleene geht weiter zu beachten, dass: die These hat den Charakter einer Hypothese – ein Punkt, der von der Post und von der Kirche betont wird(24). Betrachtet man die These und ihre Konverse als Definition, so ist die Hypothese eine Hypothese über die Anwendung der mathematischen Theorie, die aus der Definition entwickelt wurde. Für die Annahme der Hypothese gibt es, wie wir vorgeschlagen haben, recht zwingende Gründe.(24) Referenzen Post 1936 der Post und die formalen Definitionen der Kirche in der Theorie der Ordnungszahlen, Fund.Math.vol 28 (1936) S.11–21 (siehe ref.#2, Davis 1965:286). Die Kirche-Tür-Thesis: Stephen Kleene, in Einleitung Zur Metamathematik geht es schließlich um den formalen Namen "Church's Thesis" und "Turing's Thesis" mit seiner Theorie der rekursiven Realizability. Kleene hat von der Präsentation seiner Arbeit in der Terminologie der kirche-Kleene Lambda-Definability auf die von Gödel-Kleene-Rekursivität (teilweise rekursive Funktionen) umgestellt. In diesem Übergang modifizierte Kleene Gödels allgemeine rekursive Funktionen, um Nachweise über die Unlöslichkeit von Problemen im Intuitionismus von E. J. Brouwer zu ermöglichen. In seinem Diplom-Schriftbuch zur Logik wird "Church's These" eingeführt und grundlegende mathematische Ergebnisse werden als unrealisierbar erwiesen. Als nächstes präsentiert Kleene "Turing's Dissis", wo die Ergebnisse als unbestritten dargestellt werden, indem er eine auf der Arbeit von Emil Post basierende Turing-Maschine vereinfacht ableitet. Beide Thesen werden durch den Einsatz von "Theorem XXX" als gleichwertig erwiesen. These I.Jede effektiv kalkulierbare Funktion (effektiv dezidierbares Prädikat) ist allgemein rekursiv. Theorem XXX: Die folgenden Klassen von Teilfunktionen sind koextensiv, d.h. haben die gleichen Glieder: (a) die teilweise rekursiven Funktionen, (b) die rechnerischen Funktionen. Turing's Dissertation: Turings These, dass jede Funktion, die natürlich als rechnerisch angesehen werden würde, unter seiner Definition, d.h. durch eine seiner Maschinen, berechnet werden kann, entspricht der These der Kirche von Theorem XXX. Kleene, endlich, verwendet zum ersten Mal den Begriff "Church-Turing thesis" in einem Abschnitt, in dem er hilft, um Klarheit zu Konzepten in Alan Turings Papier "Das Wort Problem in Semi-Gruppen mit Abbruch", wie in einer Kritik von William Boone gefordert. Spätere Entwicklungen Ein Versuch, den Begriff der "effektiven Rechenbarkeit" besser zu verstehen, führte Robin Gandy (Turings Student und Freund) im Jahr 1980 zur Analyse der Maschinenberechnung (im Gegensatz zu der von einer Turing-Maschine ausgearbeiteten Human-Computation). Gandys Neugier über und Analyse der zellulären Automaten (einschließlich Conway's Spiel des Lebens,) Parallelismus und kristalline Automaten, führte ihn zu vier "Principles (oder Einschränkungen) ... die es argumentiert, jede Maschine muss befriedigen". Seine wichtigste vierte, "das Prinzip der Kausalität" basiert auf der "Endgeschwindigkeit der Ausbreitung von Effekten und Signalen; zeitgenössische Physik lehnt die Möglichkeit der sofortigen Aktion in einer Entfernung ab". Aus diesen Prinzipien und einigen zusätzlichen Zwängen -(1a) eine untere Begrenzung auf die linearen Abmessungen eines der Teile, (1b) eine obere Begrenzung auf die Ausbreitungsgeschwindigkeit (die Lichtgeschwindigkeit,) (2) diskrete Fortschritte der Maschine und (3) deterministisches Verhalten - er erzeugt ein Theorem, dass "Was durch eine Vorrichtung berechnet werden kann, die die Prinzipien I-IV erfüllt, berechnet werden kann. " In den späten 1990er-Jahren analysierte Wilfried Sieg Turings und Gandys Vorstellungen von "wirksamer Berechnungsfähigkeit" mit der Absicht, "die informelle Vorstellung zu schärfen, ihre allgemeinen Merkmale axiomatisch zu formulieren und den axiomatischen Rahmen zu untersuchen". In seiner Arbeit von 1997 und 2002 präsentiert Sieg eine Reihe von Zwängen über das Verhalten eines Recheners – ein Human Computing Agent, der mechanisch fortfährt". Diese Zwänge reduzieren sich auf: ("B.1) (Boundedness)Es gibt eine feste Grenze auf der Anzahl der symbolischen Konfigurationen, die ein Rechner sofort erkennen kann. ("B.2) (Boundedness)Es gibt eine feste Grenze auf der Anzahl der internen Zustände, in denen ein Rechengerät eingeschaltet werden kann. ("L.1) (Locality)Ein Rechener kann nur Elemente einer beobachteten symbolischen Konfiguration ändern. (L.2) (Lokalität) Ein Rechner kann die Aufmerksamkeit von einer symbolischen Konfiguration auf eine andere verschieben, aber die neuen beobachteten Konfigurationen müssen in einem begrenzten Abstand der unmittelbar zuvor beobachteten Konfiguration liegen. ("D) (Bestimmung) Die sofort erkennbare (Teil-)Konfiguration bestimmt eindeutig den nächsten Berechnungsschritt (und id [instantane Beschreibung;]") gab eine andere Weise an: "Einen internen Zustand eines Rechenrechners zusammen mit der beobachteten Konfiguration fixiert eindeutig den nächsten Berechnungsschritt und den nächsten internen Zustand. " Die Angelegenheit bleibt in aktiver Diskussion innerhalb der akademischen Gemeinschaft. Die Dissertation als Definition Die These kann als nichts als eine gewöhnliche mathematische Definition angesehen werden. Kommentare von Gödel zu diesem Thema schlagen diese Ansicht vor, z.B. "die richtige Definition der mechanischen Rechenbarkeit wurde über jeden Zweifel von Turing festgelegt". Der Fall für die Betrachtung der These als nichts anderes als eine Definition wird explizit von Robert I. Soare, wo es auch argumentiert wird, dass Turings Definition der Rechenbarkeit nicht weniger wahrscheinlich ist, korrekt als die epsilon-delta Definition einer kontinuierlichen Funktion. Erfolg der Dissertation Andere Formalismen (neben Rekursion, λ-Calculus und Turing-Maschine) wurden vorgeschlagen, um eine effektive Berechnungs-/Kompetenzfähigkeit zu beschreiben. Stephen Kleene (1952) fügt der Liste die Funktionen "verschreckbar im System S1" von Kurt Gödel 1936, und Emil Posts (1943, 1946) "kanonische [auch normale] Systeme" hinzu. In den 1950er Jahren vereinfachten Hao Wang und Martin Davis das Einband-Turniermaschinenmodell (siehe Post-Turing-Maschine). Marvin Minsky erweiterte das Modell auf zwei oder mehr Bänder und vereinfachte die Bänder stark in "Up-down-Zähler", die Melzak und Lambek weiter zu dem weiterentwickelten, was heute als Gegenmaschinenmodell bekannt ist. In den späten 1960er und frühen 1970er Jahren erweiterten die Forscher das Gegenmaschinenmodell in die Registermaschine, einen engen Cousin zur modernen Vorstellung des Computers. Weitere Modelle umfassen kombinatorische Logik und Markov Algorithmen. Gurevich fügt das Pointer-Maschinenmodell von Kolmogorov und Uspensky (1953, 1958:) "... sie wollten sich nur... überzeugen, dass es keinen Weg gibt, den Begriff der Rechenfunktion zu erweitern. " Alle diese Beiträge beinhalten Nachweise, dass die Modelle rechnerisch der Turing-Maschine entsprechen; solche Modelle sollen Turing komplett sein. Da all diese unterschiedlichen Versuche, das Konzept der "wirksamen Kalkulations-/Kompetenzfähigkeit" zu formalisieren, gleichwertige Ergebnisse erzielt haben, wird nun allgemein angenommen, dass die Kirche-Turing-Thesis korrekt ist. In der Tat hat Gödel (1936) etwas stärker als dies vorgeschlagen; er beobachtete, dass es etwas Absolutes über das Konzept des "nachrüstbaren in S1:" gab. Es kann auch gezeigt werden, dass eine Funktion, die in einem der Systeme rechnerbar ist [wiederholbar] Si oder auch in einem transfinitischen System ist in S1 bereits rechnerisch [reckonable]. So ist das berechenbare Konzept in einem bestimmten bestimmten Sinn absolut, während praktisch alle anderen bekannten metamathetischen Konzepte (z.B. nachweisbar, definierbar, etc.) ganz im Wesentlichen vom System abhängen, auf das sie definiert sind ... Informelle Verwendung in den Beweisen Beweisen in der Rechenschaftstheorie oft auf die Kirche-Turing-Thesis auf informelle Weise, um die Rechenschaftspflicht der Funktionen zu etablieren, während die (oft sehr langen) Details, die an einem strengen, formalen Beweis beteiligt werden würde. Um festzustellen, dass eine Funktion von der Turing-Maschine berechnet wird, wird in der Regel als ausreichend angesehen, um eine informelle englische Beschreibung zu geben, wie die Funktion effektiv berechnet werden kann, und abschließend "von der Kirche-Turing-Thesis", dass die Funktion ist Turing rechnerisch (äquivalent, teilweise rekursiv). Dirk van Dalen gibt folgendes Beispiel für die Veranschaulichung dieser informellen Nutzung der Kirche-Türarbeit: Beispiel: Jedes unendliche RE-Set enthält ein unendliches rekursives Set. Beweis: Lassen Sie ein unendliches RE sein. Wir listen die Elemente A effektiv, n0, n1, n2, n3, . Aus dieser Liste ziehen wir eine zunehmende Subliste: setzen m0=n0, nach endlich vielen Schritten finden wir eine nk so, dass nk > m0, setzen m1=nk. Wir wiederholen dieses Verfahren, um m2 > m1, usw. zu finden. Dies ergibt eine effektive Auflistung der Untermenge B = {m0,m1,m2} von A, mit der Eigenschaft mi < mi+1. Anspruch. B ist dezidierbar. Für, um k in B zu testen, müssen wir überprüfen, ob k=mi für einige i. Da die Reihenfolge von mi's zunimmt, müssen wir höchstens k+1 Elemente der Liste produzieren und mit k vergleichen. Ist keiner von ihnen gleich k, dann k nicht in B. Da dieser Test wirksam ist, ist B dezidierbar und durch die These der Kirche rekursiv. Um das obige Beispiel völlig streng zu machen, müsste man vorsichtig eine Turing-Maschine, oder λ-Funktion, oder sorgfältig wiederholende Axiome, oder bestenfalls schlau rufen verschiedene Theoreme der Rechenbarkeitstheorie. Da aber der Rechenschaftstheoretiker glaubt, dass Turing-Rechnbarkeit richtig erfasst, was effektiv berechnet werden kann, und weil ein effektives Verfahren in englischer Sprache zur Entscheidung des Satzes B herausgeschrieben wird, akzeptiert der Rechenschaftstheoretiker dies als Beweis, dass das Set tatsächlich wiederkehrend ist.Variationen Der Erfolg der kirchlichen Arbeit führte zu Änderungen der Dissertation. So heißt es in der physischen Kirche – in der Dissertation: "Alle physikalisch berechenbaren Funktionen sind Turing-computable." DieChurch-Turing-Thesis sagt nichts über die Effizienz, mit der ein Modell der Berechnung eine andere simulieren kann. Es hat sich beispielsweise gezeigt, dass eine (multi-tape)universale Turing-Maschine nur einen logarithmischen Verlangsamungsfaktor bei der Simulation einer Turing-Maschine erleidet. Eine Variation der kirchlichen Studien thematisiert, ob ein willkürliches, aber vernünftiges Berechnungsmodell effizient simuliert werden kann. Dies nennt man die Machbarkeitstheorie, auch bekannt als die (klassische) komplexitätstheoretische Kirche – während der Dissertation oder die erweiterte Kirche–Währende These, die nicht durch Kirche oder Turing, sondern wurde allmählich in der Entwicklung der Komplexitätstheorie realisiert. Es heißt: "Eine probabilistische Turing-Maschine kann jedes realistische Berechnungsmodell effizient simulieren. " Das Wort bedeutet hier effizient bis zu Polynom-Zeit-Reduktionen. Diese These wurde ursprünglich als rechnerische komplexitätstheoretische Kirche bezeichnet – während der These von Ethan Bernstein und Umesh Vazirani (1997). Die komplexitätstheoretische Kirche – in der Dissertation, stellt dann fest, dass alle vernünftigen Berechnungsmodelle die gleiche Klasse von Problemen ergeben, die in der polynomischen Zeit berechnet werden können. Unter der Annahme der Vermutung, dass probabilistische Polynomzeit (BPP) gleicht deterministische Polynomzeit (P,) ist das Wort probabilistisch optional in der komplexitätstheoretischen Kirche-Turing These. Eine ähnliche These, die als Invarianz-Thesis bezeichnet wird, wurde von Cees F. Slot und Peter van Emde Boas eingeführt. Es heißt: "Reasonable Machines können sich in einem polynomial begrenzten Overhead in der Zeit simulieren und ein Konstantfaktor Overhead im Raum." Die These erschien ursprünglich in einem Papier bei STOC'84, das war das erste Papier, um zu zeigen, dass Polynom-Zeit Overhead und Konstant-Raum Overhead gleichzeitig für eine Simulation einer Random Access Machine auf einer Turing-Maschine erreicht werden konnte. Wenn BQP als strenger Überrest von BPP gezeigt wird, würde es die komplexitätstheoretische Kirche-Turing Dissertation ungültig machen. Mit anderen Worten, es gäbe effiziente Quantenalgorithmen, die Aufgaben ausführen, die keine effizienten probabilistischen Algorithmen haben. Dies würde jedoch die ursprüngliche Kirche-Turing Dissertation nicht ungültig machen, da ein Quantencomputer immer von einer Turing-Maschine simuliert werden kann, aber es würde die klassische Komplexität-theoretische Kirche-Turing These aus Effizienzgründen ungültig machen. Die quantenkomplexitätstheoretische Kirche – in der Dissertation heißt es daher: "Eine Quanten-Turniermaschine kann jedes realistische Berechnungsmodell effizient simulieren. "Eugene Eberbach und Peter Wegner behaupten, dass die Church-Turing-Thesis manchmal zu breit interpretiert wird und "die breitere Behauptung, dass Algorithmen genau erfassen, was berechnet werden kann, ist ungültig". Sie behaupten, dass Formen der Berechnung, die nicht von der These erfasst werden, heute relevant sind, Begriffe, die sie als super-Turing-Rechnung bezeichnen. philosophische Implikationen Die Philosophen haben die Kirche – die Arbeit als Implikationen für die Philosophie des Geistes interpretiert. B Jack Copeland sagt, dass es eine offene empirische Frage ist, ob es tatsächlich deterministische physikalische Prozesse gibt, die auf lange Sicht eine Simulation durch eine Turing-Maschine erklären; außerdem stellt er fest, dass es eine offene empirische Frage ist, ob solche Prozesse an der Arbeit des menschlichen Gehirns beteiligt sind. Es gibt auch einige wichtige offene Fragen, die die Beziehung zwischen der Kirche und der Physik und der Möglichkeit der Hypercomputation abdecken. Bei Anwendung auf die Physik hat die These mehrere mögliche Bedeutungen: Das Universum ist einer Turing-Maschine gleichwertig; so ist die Berechnung nicht-rekursiver Funktionen physikalisch unmöglich. Dies wurde als starke Kirche-Turing-Thesis oder Church-Turing-Deutsch-Prinzip bezeichnet und ist eine Grundlage der digitalen Physik. Das Universum entspricht nicht einer Turing-Maschine (d.h. die Gesetze der Physik sind nicht Turing-komputierbar), aber unangemessene physische Ereignisse sind nicht für den Aufbau eines Hypercomputers nutzbar. Zum Beispiel würde ein Universum, in dem Physik zufällige reale Zahlen beinhaltet, im Gegensatz zu rechnerischen Realitäten, in diese Kategorie fallen. Das Universum ist ein Hypercomputer, und es ist möglich, physische Geräte zu bauen, um diese Eigenschaft zu nutzen und nicht-rekursive Funktionen zu berechnen. Es ist beispielsweise eine offene Frage, ob alle quantenmechanischen Ereignisse Turing-komputierbar sind, obwohl bekannt ist, dass strenge Modelle wie Quanten Turing-Maschinen den deterministischen Turing-Maschinen gleichwertig sind.( Sie sind nicht unbedingt effizient äquivalent; siehe oben.) John Lucas und Roger Penrose haben vorgeschlagen, dass der menschliche Geist das Ergebnis einer Art quantenmechanischen erweiterten, nicht-algorithmischen Berechnung sein könnte. Es gibt viele andere technische Möglichkeiten, die außerhalb oder zwischen diesen drei Kategorien fallen, aber diese dienen zur Veranschaulichung der Reichweite des Konzepts. Die philosophischen Aspekte der Dissertation in Bezug auf physikalische und biologische Computer werden auch im Lehrbuch von 1989 über die Rekursionstheorie diskutiert. Nicht leistungsfähige Funktionen Man kann formal Funktionen definieren, die nicht berechenbar sind. Ein bekanntes Beispiel einer solchen Funktion ist die Busy Beaver-Funktion. Diese Funktion nimmt einen Eingang n und gibt die größte Anzahl von Symbolen zurück, die eine Turing-Maschine mit n Zuständen vor dem Stoppen drucken kann, wenn sie ohne Eingabe ausgeführt wird. Das Finden einer oberen Grenze auf der befahrenen Biber-Funktion entspricht der Lösung des Stoppproblems, ein Problem, das bekanntermaßen von Turing-Maschinen unlösbar ist. Da die befahrene Biberfunktion nicht von Turing-Maschinen berechnet werden kann, erklärt die Church-Turing-Thesis, dass diese Funktion nicht durch irgendeine Methode effektiv berechnet werden kann. Mehrere rechnerische Modelle ermöglichen die Berechnung von (Church-Turing) nicht rechnerischen Funktionen. Diese sind als Hypercomputer bekannt. Mark Burgin argumentiert, dass hochrekursive Algorithmen wie induktive Turing-Maschinen die Kirche-Turing-Thesis verbieten. Sein Argument stützt sich auf eine Definition von Algorithmus breiter als der gewöhnliche, so dass nicht-komputierbare Funktionen, die von einigen induktiven Turing-Maschinen erhalten werden, als rechnerisch bezeichnet werden. Diese Interpretation der kirchlichen und kirchlichen Dissertation unterscheidet sich von der in der Rechenschaftstheorie allgemein angenommenen Interpretation, die oben erörtert wurde. Das Argument, dass super-rekursive Algorithmen tatsächlich Algorithmen im Sinne der Kirche sind – während der Dissertation hat keine breite Akzeptanz in der Rechenschaftsforschungsgemeinschaft gefunden. Siehe auch Abstrakte Maschine Kirche Dissertation in der konstruktiven Mathematik Kirche-Turing-Deutsch Prinzip, die besagt, dass jeder physikalische Prozess durch eine universelle Recheneinrichtung Computability-Logik Computability-Theorie Decidability Hypercomputation Modell der Berechnung Oracle (Computer Science)Super-recursive Algorithmus simuliert werden kann Die Vervollständigung von Fußnoten Referenzen Externe Links "The Church-Turing Thesis" Eintrag von B. Jack Copeland in der Stanford Encyclopedia of Philosophy."Computation in Physical Systems" Eintrag von Gualtiero Piccinini in der Stanford Encyclopedia of Philosophy - eine umfassende philosophische Behandlung relevanter Fragen. Kaznatcheev, Artem (11. September 2014)."Transzendentaler Idealismus und Posts Variante der kirchlichen Studienarbeit". Journal of Symbolic Logic.1 (3:) 103–105.Eine Sonderausgabe (Vol.28, Nr.4, 1987) des Notre Dame Journal of Formal Logic wurde der kirchlichen Thesis gewidmet.