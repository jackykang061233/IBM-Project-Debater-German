Binary Runtime Environment for Wireless (Brew MP, Brew oder BREW) ist eine von Qualcomm entwickelte Anwendungsentwicklungsplattform, die ursprünglich für die Code Division Multiple Access (CDMA) Mobiltelefone mit Drittanbieter-Anwendungen wie Mobile Games entwickelt wurde. Es wird in einigen Feature-Handys angeboten (meist mit Spezifikationen ähnlich denen von mittleren bis High-End-Handys), aber nicht in Smartphones. Er wurde 1999 als Plattform für drahtlose Anwendungen auf CDMA-basierten Mobiltelefonen entwickelt und im September 2001 debütiert. Als Software-Plattform, die kleine Programme zum Spielen, Senden von Nachrichten und Teilen von Fotos herunterladen und ausführen kann, ist der Hauptvorteil von Brew MP, dass die Anwendungsentwickler ihre Anwendungen einfach unter allen Brew MP-Geräten portieren können, indem sie einen standardisierten Satz von Anwendungsprogrammierungsschnittstellen bereitstellen. Software für Brew MP ermöglichte Handys können in C oder C+ mit dem frei downloadbaren Brew MP Software Development Kit (SDK) entwickelt werden. Die Brew-Laufzeitbibliothek ist Teil der drahtlosen Geräte-On-Chip-Firmware oder Betriebssystem, um Programmierern zu ermöglichen, Anwendungen zu entwickeln, ohne für die Systemschnittstelle zu codieren oder drahtlose Anwendungen zu verstehen. Brew wird als Pseudo-Betriebssystem, aber nicht als ein echtes mobiles Betriebssystem beschrieben. Brew ist keine virtuelle Maschine wie Java ME, sondern führt nativen Code. Software Für Software-Entwickler ist Brew MP eine komplette Reihe von Anwendungs-Programmierschnittstellen (API), die Software und Anwendungen in C, C,+ Java herstellen können und durch eine anwendungsspezifische integrierte Schaltung (ASIC) unterstützt wird. Es hat einen Speicher-Fußabdruck von ca. 15.900 K (15.9 MB,) Von Brew 1.x bis 2.x (vor 2004), es hat weniger Speicher-Fußabdruck (ca. 60kb). Brew verfügt auch über direkten Hardware-Zugang. Versionen vor dem Brew MP lief auf REX OS (Qualcomm eigene RTOS,) während Brew MP verwendet Brew RTOS (eine andere RTOS für fortgeschrittene Feature-Handys). Anstatt einen interpreterbasierten Code zu verwenden, Brew auch auf eigene mobile Hardware. Versionsgeschichte Brew 1.0/1.1 (2001–2003) 2001 debütiert, war es die erste Version von Brew. Ursprünglich für die Kyocera QCP-3035 (das war das erste Brew-fähige Telefon) und Sharp Z-800 gemacht. Es nutzte persönliche digitale Assistent-Level-Funktionen (in der Regel für einige Anwendungen und die Fähigkeit, Brew-Anwendungen auszuführen). Es fehlt jedoch an fortschrittlichen Multimedia-Funktionen und Unterstützung für Java ME, die in späteren Versionen verfügbar waren. Es war die einzige Version von Brew, monochrome Bildschirme zu unterstützen, als Unterstützung für monochrome Bildschirme wurden in Brew 2.0 entfernt. Dies ist die sehr Power-Füllung für Computersystem. Brew 1.1 war die erste Version von Brew, um Java ME-Anwendungen auszuführen. Es war in einigen Brew-fähigen Telefonen in 2002 und Anfang 2003. Brew 2.0/2.1 (2002–2004) Erschienen Mitte 2002, wurde es für die meisten der Brew-fähigen Telefone Ende 2002 bis Anfang 2004 installiert. Es umfasst Unterstützung für fortgeschrittene Multimedia-Wiedergaben (die Fähigkeit, Video- und Audiodateien zu spielen, sowie Unterstützung für 3GPP Multimedia-Formate), Konnektivität für EV-DO und Bluetooth-Unterstützung, sowie Bildschirmschoner und andere Verbesserungen. Es unterstützt auch MIDP 2.0 auf Brew 2.1 und es ist rückwärts kompatibel mit Brew 1.x Anwendungen. Brew 3.0/3.1 (2004–präsent) Es wurde 2004 veröffentlicht, es war die erste Version von Brew, die große Änderungen hat und es hat eine große Mehrheit der Funktionen für Mobiltelefone, wie WiFi-Konnektivität, OpenGL ES 1.0, Unterstützung für 3G, GPS, QWERTY-basierte Tastaturen, und Unterstützung für mobile Bildschirme, die höher als 176x220 sind. Es ist rückwärts kompatibel mit Brew 2.x Anwendungen, aber nicht mit Brew 1.x Anwendungen. Es ist auch die erste Version von Brew 3D-Grafiken zu unterstützen, obwohl es nur Software Rendering verwendet (die auch JSR 184 für Java ME-Spiele unterstützt). Hardware-Beschleunigung wird auch über OpenGL ES 1.0 (wenn ein 3D-Beschleunigungschip zur Verfügung steht) native unterstützt. Es wurde seit 2005 auf den meisten Feature-Handys in den Vereinigten Staaten und in anderen Ländern installiert und wird immer noch von einigen Fluggesellschaften unterstützt. Es wird auch für die Zeebo-Konsole in Mexiko und Brasilien verwendet. Brew 4.0 (2007–2011) Erschienen 2007 bis 2011, wurde es nur auf sehr wenigen Mobiltelefonen (wie LG enV Touch und LG Versa) integriert. Es hat nur einige Verbesserungen und es wurde später von Brew MP erfolgreich. Es verfügt über zusätzliche Funktionen, die auch in Brew MP, wie Beschleunigungsmesser-Unterstützung und andere Änderungen zur Verfügung stehen. Brew MP (2009–präsent) Im Jahr 2009 veröffentlicht, intern als Brew 5.0 bekannt, hat es neue verschiedene Funktionen (einschließlich SVG-Bilderunterstützung) und bestimmte Verbesserungen und es ist rückwärts kompatibel mit Brew 3.x und 4.x Anwendungen. Es ist auch die erste Version von Brew, um bestimmte APIs und alte Dateien deprecated zu machen. Es ist auch die erste Version von Brew, sich auf eigene RTOS zu verlassen, anstatt von Qualcomm eigenen REX OS. Brew Anwendungsentwicklung Zur Prüfung von Anwendungen während des Entwicklungsprozesses umfasst das SDK einen Brew-Emulator oder beginnt mit der Brew-Version 3.1.5 und oben, den Brew Simulator. Die Brew-Umgebung bietet eine Vielzahl von Anwendungssignaturen. Eine Signatur authentifiziert den Entwickler. Eine weitere Signatur verifiziert, dass eine Anwendung True Brew-Tests bestanden hat und durch Intertek vergeben wird. Die einzelnen Telekommunikationsbetreiber konfigurieren die Handys, um die Anwesenheit und Überprüfung dieser zweiten Signatur entweder durchzusetzen oder zu ignorieren. Brew-fähige Handys haben einen Testmodus, der Anwendungen erlaubt, die Überprüfung der Signatur zu umgehen. Qualcomm stellt Anwendungen zur Verfügung, die Tests an den Brew-fähigen drahtlosen Netzwerkbetreibern bestanden haben. Die Betreiber sind dann in der Lage, welche dieser Anwendungen für Endbenutzer auf ihrem Katalog zur Verfügung zu stellen. Die eigenen Unterschriften von Brew werden durch eine elektronische Seriennummer und eine MEID geschützt, was bedeutet, dass sie die unberechtigte Verteilung/Seitenladung von Brew-Anwendungen auf 3.-Teile anstatt Träger verhindert. Sobald die Anwendung OTA über einen Brew-basierten Träger heruntergeladen wird, erzeugt die .sig-Datei automatisch eine elektronische Seriennummer in ihr installiertes Handy. Der Brew-Emulator, genannt Brew Simulator, emuliert keine Handy-Hardware. Stattdessen wird die Brew-Anwendung auf nativen Code kompiliert und mit einer kompatiblen Brew Laufzeitbibliothek verknüpft. Dadurch können Anwendungen nicht auf Plattformfehler im Zusammenhang mit der Speicherausrichtung und verschiedenen Firmware-verwandten Glitches getestet werden, ohne dass ein Brew-Handyset im Testmodus arbeitet. Für Testzwecke können Brew-Anwendungen mit einem Universal Serial Bus (USB) oder seriellem Kabel an ein Brew-kompatibles Handset mit Brew AppLoader von Qualcomm übertragen werden. A Brew-Anwendung enthält mehrere Komponenten, die, falls nicht vorhanden und gültig, die Anwendung automatisch beim Neustart löschen lassen. Dazu gehören die kompilierte binäre Datei, eine Datei, die die Anwendung beschreibt, die Funktionen, die sie verwendet und die angeforderten Berechtigungen, eine Datei, die String und Bildressourcen enthält, falls erforderlich, und eine Datei, die die digitale Signatur der Anwendung enthält. Brew-Anwendungen können von einem Verbraucher-Handy entladen werden, um Handapparat Speicherplatz zu sparen. Dies wird als Disable/Restore bezeichnet und ist eine Voraussetzung für den wahren Brew Testprozess. Gespeicherte Dateien werden mit Disable/Restore intakt gehalten, und es ist möglich, die Anwendung neu zu laden, ohne dafür erneut zu bezahlen. In einer Situation deaktivieren werden alle .bar, .mod und .sig Dateien aus dem Handy gelöscht, während andere Dateien an ihrem ursprünglichen Platz bleiben. Während des Wiederherstellens werden die .bar, .mod und.sig Dateien aus dem mobilen Speicher des Trägers heruntergeladen und die zuvor deaktivierte Anwendung wird die volle Funktionalität haben. Der Disable/Restore-Prozess ist nur den Verbrauchern verfügbar, wenn der Speicher des Handys voll ist. Am 28. Mai 2008 gaben Qualcomm und Adobe eine Partnerschaft bekannt, um Adobe Flash Lite als unterstützte Benutzeroberfläche auf Brew zu integrieren. Seit März 2006 kostet das teuerste digitale Signaturpaket für Entwickler 400 US$ für 100 Bewerbungsunterlagen. Geschäftsmodell Implikationen/Verfügbarkeit Streng genommen, Zeit zum Markt kann länger mit Brew als mit Java ME aufgrund der strengen Zertifizierungsanforderungen von Brew. Dieser Zertifizierungsprozess kann von etablierten Software-Entwicklern als Vorteil wahrgenommen werden, da die Schwierigkeiten, die mit den Test- und Entwicklungskosten verbunden sind, eine hohe Kosten für den Einstieg in Entwickler mit niedrigen Budgets und wenig Zeit verursachen, was zu einer geringeren Marktverdünnung führt. Speziell Entwickler von Casual Games laufen weniger Gefahr, mit Freeware-Workalikes zu konkurrieren, die von Hobbyisten entwickelt und selbst veröffentlicht werden. Dies kommt jedoch als Kosten für den Endverbraucher, da es weniger Wettbewerb gibt, um die beste Lösung zum niedrigsten Preis für den Endverbraucher zu entwickeln. Nach der Erstellung einer Bewerbung dauert es zwei Wochen pro Iteration von True Brew-Tests (je nachdem, wann die Anwendung den Test ausfällt). Als nächstes beginnen Verhandlungen mit Trägern. Dann, (wenn erfolgreich) wird der Träger Zeit verbringen, die Anwendung mit eigenen Tests auf ihrem Netzwerk neu zu testen. Schließlich bedeutet das Ausrollen einer neuen Version, den Prozess wieder zu starten. Unterschiede zwischen Java ME und Brew Derzeit, die meisten Entwickler wählen, um sowohl Java ME und Brew zu unterstützen, oder nur Java ME. Java ME kann einen geringeren Preis für den Markt bieten, da die meisten Anbieter nicht zertifizierte Java ME-Anwendungen auf ihren Telefonen ausführen können. Java ME Telefone haben einen größeren Marktanteil als Brew aktivierte Handys. Java ME ist in Europa weit verbreitet, während Brew hauptsächlich in den USA und Japan verwendet wird. Auch in den USA Einer der ersten Vorteile von Brew war, dass Verizon machte es einfach, Anwendungen vom Telefon zu kaufen, während die meisten Java ME-Träger nicht. Allerdings bieten die meisten Anbieter von Java ME-Handys jetzt einfach zugängliche Einkaufsportale. Aufgrund seiner verschiedenen APIs setzt Java ME auf Javas virtuelle Maschine (interpreterbasierter Code), die technisch langsamer ist als BREW, die native C/C+ plus und direkten Hardwarezugriff (insbesondere für Spiele) verwendet. Java ME hat begrenzte Untermenge von APIs (beide für Anwendungen und Spiele). Jedoch sind APIs und Implementierungen von Drittanbietern (z.B. MascotCapsule by HI CORPORATION.(3D Rendering API) und DoJa/Star von NTT Docomo) verfügbar, aber nicht populär und erfolgreich außerhalb Japans (insbesondere Geräteannahme). BREW (gegenüber) setzt auf eigene APIs und direkten Hardwarezugriff. Performance für Java ME-Anwendungen und Spiele sind langsam als BREW. Für 3D-Spiele verwendet Java ME JSR 184 (M3G), die 3D-Spiele, die auf Java ME entwickelt werden, langsamer sind (was 10 Frames pro Sekunde auf einigen/most-Handys ergibt) und begrenzte Grafiken haben, während BREW entweder Software Rendering (wenn das BREW-Handys keinen 3D-Beschleunigungschip hat) oder OpenGL ES (was es von seiner Leistung ausnutzen kann). Einige/weibte Handy-Hersteller erlauben nicht, Java ME's virtuelle Maschine auf einigen ihrer Telefone zu integrieren. Es gibt nun kommerzielle Technologien, um die Portierung von Java ME nach Brew vollständig zu automatisieren. Dies reduziert die Einstiegssperre für die Herstellung von Brew-Anwendungen, indem die Notwendigkeit, zwei Versionen derselben Anwendung in Java und C/C.+ zu entwickeln Gerätenutzung und Trägerverfügbarkeit Brew OS wird von einigen Handy-Herstellern und Mobilfunknetzen verwendet, aber am häufigsten weiß der Endbenutzer das nicht, da Handys, die Brew laufen am häufigsten fehlt, irgendwelche Brew OS Branding und Brew läuft im Hintergrund mit den benutzerdefinierten Skins des Handy-Herstellers oder Betreibers on-top. Brew OS wird von Sprint Nextel, metroPCS, U.S Cellular, Verizon, Syringa Wireless, Cricket Wireless und AT&T (im HTC Freestyle) in den USA, KDDI in Japan, KT und SK Telecom in Südkorea, China Telecom in China, MOVILNET in Lateinamerika, Sistema Shyam (jetzt MTS) in Indien und von dem 3 Netzwerk produziert. Da BREW nur Mobilfunknetzen angeboten wird, die in CDMA betrieben werden, haben andere Länder (mit Ausnahme von Teilen Europas, Großbritannien und Australien über das 3 Netzwerk, Indien, Japan und China) keine BREW, weil sie keine CDMA-Netzwerke haben. Hersteller wie Huawei, INQ Mobile, Amoi, LG, Samsung Mobile, ZTE und HTC verwenden unter anderem Brew OS in einigen ihrer Mobiltelefone und es ist in 3 UK-Handys wie das 3 Skype-Telefon, INQ1, ZTE Z431, LG T385 und Huawei u7510 (3 Touch). Tectoy Zeebo ist die einzige Spielkonsole, um Brew zu verwenden. Motorolas eigene T720 sowie die RAZR V3m verwenden auch Brew OS. Siehe auch Smartphone Platform (computing)Mobile Application Development – Wie Brew gegen die Alternativen auf mobilen Plattformen stapelt. Java ME - Brews Konkurrent. Referenzen Externe Links Offizielle Website ausführliche Diskussion von BREW und anderen mobilen Plattformen aus europäischer Marktperspektive Adobe Flash Lite für BREW Datasheet (.pdf)cxBrewUnit - BREW Unit Test Framework Harness for C/C+ Unit Test.