SPARQL (pronounced funle , a recursive acronym for SPARQL Protocol and RDF Query Language) ist eine RDF-Abfragesprache, d.h. eine semantische Abfragesprache für Datenbanken, die Daten abrufen und manipulieren kann, die im Resource Description Framework (RDF)-Format gespeichert sind. Es wurde von der RDF Data Access Working Group (DAWG) des World Wide Web Consortiums standardisiert und wird als eine der Schlüsseltechnologien des semantischen Webs anerkannt. Am 15. Januar 2008, SPARQL 1.0 wurde von W3C als offizielle Empfehlung anerkannt und SPARQL 1.1 im März 2013. SPARQL ermöglicht eine Abfrage aus dreifachen Mustern, Konjunktionen, Disjunktionen und optionalen Mustern. Implementierungen für mehrere Programmiersprachen existieren. Es gibt Werkzeuge, die es erlauben, eine SPARQL-Abfrage für einen SPARQL-Endpunkt, beispielsweise ViziQuer, zu verbinden und halbautomatisch zu konstruieren. Darüber hinaus gibt es Tools, um SPARQL-Abfragen auf andere Abfragesprachen zu übersetzen, beispielsweise auf SQL und XQuery. Vorteile SPARQL ermöglicht es Benutzern, Abfragen gegen sogenannte Schlüsseldaten oder insbesondere Daten zu schreiben, die der RDF-Spezifikation des W3C folgen. So ist die gesamte Datenbank eine Reihe von Subjekt-Prädikat-Objekt-Triple. Dies ist analog zu den Verwendungen einiger NoSQL-Datenbanken des Begriffs Dokument-Key-Wert, wie MongoDB. In SQL relationalen Datenbankbegriffen können RDF-Daten auch als eine Tabelle mit drei Spalten betrachtet werden – die Betreffspalte, die Prädikatspalte und die Objektspalte. Das Subjekt in RDF ist analog zu einer Einheit in einer SQL-Datenbank, wo die Datenelemente (oder Felder) für ein bestimmtes Geschäftsobjekt in mehreren Spalten platziert werden, manchmal über mehrere Tabellen verteilt und durch einen eindeutigen Schlüssel identifiziert. In RDF werden diese Felder stattdessen als separate Prädikat-/Objektzeilen dargestellt, die denselben Gegenstand teilen, oft denselben eindeutigen Schlüssel, wobei das Prädikat analog dem Spaltennamen und dem Objekt die tatsächlichen Daten ist. Anders als relationale Datenbanken ist die Objektspalte heterogen: Der per-Zell-Datentyp wird üblicherweise durch den Prädikatwert impliziert (oder in der Ontologie angegeben). Auch im Gegensatz zu SQL kann RDF mehrere Einträge pro Prädikat haben; zum Beispiel könnte man mehrere Kindereinträge für eine einzelne Person haben und Sammlungen solcher Objekte wie Kinder zurückgeben." So bietet SPARQL eine ganze Reihe von analytischen Abfrageoperationen wie JOIN, SORT, AGGREGATE für Daten, deren Schema intrinsisch Teil der Daten ist, anstatt eine separate Schemadefinition zu erfordern. Allerdings werden Schemainformationen (die Onlogie) oft extern bereitgestellt, um das Zusammenfügen verschiedener Datensätze eindeutig zu ermöglichen. Darüber hinaus bietet SPARQL spezielle Graphen-Traversal-Syntax für Daten, die als Graph betrachtet werden können. Das nachfolgende Beispiel zeigt eine einfache Abfrage, die die Ontologiedefinition foaf ("Freund eines Freundes") nutzt. Konkret gibt die folgende Abfrage Namen und E-Mails jeder Person im Datensatz zurück: Diese Abfrage schließt alle Dreifache mit einem passenden Thema zusammen, wobei der Typ predicate, a, eine Person (foaf:Person,) ist und die Person einen oder mehrere Namen (foaf:name) und Postfächer (foaf:mbox) hat. Der Autor dieser Anfrage entschied sich, das Thema mit dem variablen Namen ?person zur lesbaren Klarheit zu verweisen. Da das erste Element des Triples immer Gegenstand ist, könnte der Autor ebenso einfach jeden variablen Namen wie ?subj oder ?x" verwenden. Wie auch immer der Name gewählt wird, muss es auf jeder Zeile der Abfrage gleich sein, um zu unterschreiben, dass die Abfrage-Engine Triples mit dem gleichen Thema zu verbinden. Das Ergebnis des Joins ist eine Reihe von Zeilen – ?person, ?name, ?email. Diese Abfrage gibt den ?name und ?email zurück, weil ? Person ist oft eine komplexe URI statt eine human-freundliche Saite. Beachten Sie das. Person kann mehrere Postfächer haben, so dass im zurückgegebenen Satz, eine ?name Zeile kann mehrmals erscheinen, einmal für jede Mailbox. Diese Abfrage kann an mehrere SPARQL-Endpunkte (Dienste, die SPARQL-Abfragen akzeptieren und Ergebnisse zurückgeben), berechnet und Ergebnisse gesammelt werden, ein Verfahren bekannt als föderierte Abfrage. Ob föderal oder lokal, zusätzliche Dreifach-Definitionen in der Anfrage könnten es erlauben, sich an verschiedene Thementypen wie Automobile, einfache Abfragen zu ermöglichen, zum Beispiel eine Liste von Namen und E-Mails für Menschen, die Autos mit einer hohen Kraftstoffeffizienz fahren. Querformulare Bei Abfragen, die Daten aus der Datenbank lesen, gibt die SPARQL-Sprache vier verschiedene Abfragevariationen für verschiedene Zwecke an. SELECT-Abfrage Zur Gewinnung von Rohwerten aus einem SPARQL-Endpunkt werden die Ergebnisse in einem Tabellenformat zurückgegeben. CONSTRUCT-Abfrage Verwendet, um Informationen aus dem SPARQL Endpoint zu extrahieren und die Ergebnisse in einen gültigen RDF zu verwandeln. ASK-Abfrage Verwendet, um ein einfaches True/False-Ergebnis für eine Abfrage auf einem SPARQL-Endpunkt bereitzustellen. DESCRIBE-Abfrage Verwendet, um ein RDF-Diagramm aus dem SPARQL-Endpunkt zu extrahieren, dessen Inhalt dem Endpunkt überlassen bleibt, um zu entscheiden, basierend auf dem, was der Betreuer als nützliche Informationen erachtet. Jede dieser Abfrageformulare nimmt einen WHERE-Block ein, um die Abfrage einzuschränken, obwohl im Falle der DESCRIBE-Abfrage die WHERE optional ist. SPARQL 1.1 gibt eine Sprache zur Aktualisierung der Datenbank mit mehreren neuen Abfrageformularen an. Beispiel: fragen Beispiel, welche Modelle die Frage "Was sind alle Landeshauptstädte in Afrika?": Variablen werden durch ein ? oder $ Präfix angezeigt. Bindings für ?capital und die? Land wird zurückgegeben. Wenn ein Dreifach mit einem Semikolon endet, wird das Thema von diesem Dreifach implizit das folgende Paar zu einem ganzen Dreifachen vervollständigen. So ist z. B. ex:isCapitalOf?y kurz für ?x ex:isKapital Von ?y. Der SPARQL-Abfrageprozessor sucht nach dreifachen Sätzen, die diesen vier Dreifachmustern entsprechen und die Variablen in der Abfrage an die entsprechenden Teile jedes Dreifachen binden. Wichtig ist hier die "Eigenschaftsorientierung" (Klassenspiele können ausschließlich durch Klassen-Attribute oder Eigenschaften durchgeführt werden – siehe Duck-Typing) Um Fragen zu präzisieren, erlaubt SPARQL die Definition von Präfixen und Basis-URIs in ähnlicher Weise wie Turtle. In dieser Abfrage steht das Präfix ex für „http://example.com/exampleOntology#“ Erweiterungen GeoSPARQL definiert Filterfunktionen für geografische Informationssysteme (GIS) Abfragen mit gut verstandenen OGC Standards (GML, WKT, etc.). SPARUL ist eine weitere Erweiterung zu SPARQL. Es ermöglicht es dem RDF-Store, mit dieser deklarativen Abfragesprache aktualisiert zu werden, indem INSERT und DELETE-Methoden hinzugefügt werden. Durchführung Open Source, Referenz SPARQL Implementierungen RDF4J, früher Sesam von Eclipse Foundation Jena (Rahmen) von Apache Software Foundation OpenLink Virtuoso Siehe Liste der SPARQL-Implementierungen für eine umfassendere Deckung, einschließlich Tripletstore, APIs und andere Speicher, die den SPARQL-Standard implementiert haben. Siehe auchSPARQL Query Results XML Format SPARQL Syntax Expressions Wikidata Wikidata Query Service Tutorial Referenzen Externe Links W3CData Activity Blog W3C SPARQL 1.1Working Group - geschlossen - Mailinglisten und Archive, war RDF Data Access Working Group SPARQL 1.1 Empfehlung SPARQL 1.0 Query language (legacy) SPARQL1.0 Protocol (legacy) SPARQL 1.0 Query XML Results Format (legacy) SPARQL2XQuery Mappings zwischen OWL-RDF/S & XML Schemas und XML Schema to OWL Transformation. SPARQL Syntaxausdrücke in der ARQ-Abfrage-Engine SPARQL Syntaxausdrücke Übersetzungen der DAWG-Testsuite Wikidata DBpedia