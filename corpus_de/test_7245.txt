In der Informatik- und Betriebsforschung ist der Ameisenkolonie-Optimierungsalgorithmus (ACO) eine probabilistische Technik zur Lösung von Rechenproblemen, die reduziert werden können, um gute Wege durch Graphen zu finden. Künstliche Ameisen stehen für vielfältige Methoden, die durch das Verhalten echter Ameisen inspiriert sind. Die pheromone-basierte Kommunikation von biologischen Ameisen ist oft das vorherrschende Paradigma. Kombinationen von künstlichen Ameisen und lokalen Suchalgorithmen haben sich zu einem Verfahren der Wahl für zahlreiche Optimierungsaufgaben mit einer Art von Graphen, z.B. Fahrzeug-Routing und Internet-Routing. Als Beispiel ist ant Kolonie Optimierung eine Klasse von Optimierungsalgorithmen, die auf den Aktionen einer Ameisenkolonie modelliert werden. Künstliche Ameisen (z.B. Simulationsmittel) lokalisieren optimale Lösungen, indem sie durch einen Parameterraum bewegt werden, der alle möglichen Lösungen darstellt. Reale Ameisen legen Pheromone fest, die sich auf Ressourcen lenken, während sie ihre Umwelt erkunden. Die simulierten Ameisen zeichnen ihre Positionen und die Qualität ihrer Lösungen ähnlich auf, so dass in späteren Simulationen mehr Ameisen bessere Lösungen finden. Eine Variante dieses Ansatzes ist der Bienenalgorithmus, der analoger zu den Futtermustern der Honigbiene, einem anderen sozialen Insekt ist. Dieser Algorithmus ist Mitglied der ant Kolonie Algorithmen Familie, in swarm Intelligence Methoden, und es stellt einige metaheuristische Optimierungen. Ursprünglich von Marco Dorigo 1992 in seiner Doktorarbeit vorgeschlagen, zielte der erste Algorithmus auf die Suche nach einem optimalen Weg in einem Diagramm, basierend auf dem Verhalten von Ameisen, die einen Pfad zwischen ihrer Kolonie und einer Quelle von Nahrung suchen. Die ursprüngliche Idee hat sich seither diversifiziert, um eine breitere Klasse von numerischen Problemen zu lösen, und dadurch sind mehrere Probleme aufgetreten, die sich auf verschiedene Aspekte des Verhaltens von Ameisen beziehen. Aus einer breiteren Perspektive führt ACO eine modellbasierte Suche durch und teilt einige Ähnlichkeiten mit der Schätzung von Verteilungsalgorithmen. Überblick In der natürlichen Welt wandern Ameisen einiger Arten (anfänglich) zufällig, und wenn man Nahrung findet, kehrt man in ihre Kolonie zurück, während man Pheromone-Strecken niederlegt. Wenn andere Ameisen einen solchen Weg finden, sind sie wahrscheinlich nicht zufällig unterwegs zu halten, sondern den Weg zu folgen, ihn zurückzukehren und zu verstärken, wenn sie schließlich Nahrung finden (siehe Ant-Kommunikation). Im Laufe der Zeit beginnt jedoch der Pheromone-Trail zu verdampfen, wodurch seine attraktive Stärke reduziert wird. Je mehr Zeit es braucht, um eine Ame, um den Weg und wieder zurück zu reisen, desto mehr Zeit müssen die Pheromonen verdampfen. Ein kurzer Weg wird im Vergleich häufiger überholt und damit die Pheromone-Dichte auf kürzeren Wegen höher als längere. Auch die Pheromone-Verdampfung hat den Vorteil, die Konvergenz zu einer lokal optimalen Lösung zu vermeiden. Wenn überhaupt keine Verdunstung gegeben wäre, würden die von den ersten Ameisen gewählten Wege für die folgenden übermäßig attraktiv sein. In diesem Fall wäre die Exploration des Lösungsraums eingeschränkt. Der Einfluss der Pheromone-Verdampfung in realen Ameisensystemen ist unklar, aber es ist sehr wichtig in künstlichen Systemen. Das Gesamtergebnis ist, dass, wenn eine Ameise einen guten (d.h. kurzen) Weg von der Kolonie zu einer Nahrungsquelle findet, andere Ameisen wahrscheinlicher auf diesem Weg folgen, und positives Feedback führt schließlich zu vielen Ameisen nach einem einzigen Weg. Die Idee des Ameisenkoloniealgorithmus besteht darin, dieses Verhalten mit "simulierten Ameisen" zu imitieren, die das Problem darstellen. Umgebungsnetzwerke intelligenter Objekte Neue Konzepte werden benötigt, da die „Intelligenz“ nicht mehr zentralisiert ist, sondern in allen Minuskelobjekten gefunden werden kann. Anthropozentrische Konzepte sind bekannt, um die Produktion von IT-Systemen, in denen Datenverarbeitung, Steuerungen und Rechenkräfte zentralisiert sind, zu ermöglichen. Diese zentralisierten Einheiten haben ihre Leistung kontinuierlich erhöht und können mit dem menschlichen Gehirn verglichen werden. Das Modell des Gehirns ist die ultimative Vision von Computern geworden. Umgebungsnetzwerke intelligenter Objekte und früher oder später eine neue Generation von Informationssystemen, die noch diffuser sind und auf der Nanotechnologie basieren, werden dieses Konzept zutiefst verändern. Kleine Geräte, die mit Insekten verglichen werden können, verfügen nicht allein über eine hohe Intelligenz. In der Tat kann ihre Intelligenz als ziemlich begrenzt eingestuft werden. So ist es beispielsweise nicht möglich, einen Hochleistungsrechner mit der Leistung zu integrieren, um jede Art von mathematischen Problem in einen Biochip zu lösen, der in den menschlichen Körper implantiert wird oder in einen intelligenten Tag integriert ist, der zur Verfolgung von Handelsartikeln ausgelegt ist. Sobald diese Objekte jedoch miteinander verbunden sind, verfügen sie über eine Form von Intelligenz, die mit einer Kolonie von Ameisen oder Bienen verglichen werden kann. Bei bestimmten Problemen kann diese Art von Intelligenz der Argumentation eines zentralisierten Systems ähnlich dem Gehirn überlegen sein. Die Natur bietet mehrere Beispiele dafür, wie Minuskule-Organismen, wenn sie alle der gleichen Grundregel folgen, eine Form kollektiver Intelligenz auf makroskopischer Ebene schaffen können. Kolonien sozialer Insekten veranschaulichen dieses Modell, das sich stark von den menschlichen Gesellschaften unterscheidet. Dieses Modell basiert auf der Zusammenarbeit unabhängiger Einheiten mit einfachem und unvorhersehbarem Verhalten. Sie bewegen sich durch ihre Umgebung, um bestimmte Aufgaben auszuführen und besitzen nur eine sehr begrenzte Menge an Informationen. Eine Kolonie von Ameisen stellt beispielsweise zahlreiche Qualitäten dar, die auch auf ein Netzwerk von Umgebungsobjekten angewendet werden können. Ameisenkolonien haben eine sehr hohe Fähigkeit, sich an Veränderungen in der Umwelt anzupassen sowie eine enorme Stärke bei der Bewältigung von Situationen, in denen ein Individuum eine bestimmte Aufgabe nicht erfüllt. Diese Flexibilität wäre auch für mobile Netzwerke von Objekten, die sich ständig weiterentwickeln, sehr nützlich. Pakete von Informationen, die sich von einem Computer zu einem digitalen Objekt bewegen, verhalten sich in der gleichen Weise wie Ameisen. Sie bewegen sich durch das Netzwerk und gehen von einem Knoten zum nächsten mit dem Ziel, möglichst schnell an ihrem Endziel zu gelangen. Künstliches Pheromone-System Pheromone-basierte Kommunikation ist eine der effektivsten Möglichkeiten der Kommunikation, die in der Natur häufig beobachtet wird. Pheromone wird von sozialen Insekten wie Bienen, Ameisen und Termiten verwendet; sowohl für interagente als auch für Agenten-Kriegskommunikation. Durch seine Machbarkeit wurden künstliche Pheromone in Multi-Roboter- und Swarm-Robotersystemen übernommen. Pheromone-basierte Kommunikation wurde auf verschiedene Weise implementiert, wie chemische oder physikalische (RFID-Tags, Licht, Klang) Wege. Diese Implementierungen waren jedoch nicht in der Lage, alle Aspekte von Pheromonen, wie in der Natur gesehen, zu replizieren. Mit projiziertem Licht wurde in einem 2007 IEEE-Papier von Garnier, Simon, et al.as ein experimentelles Setup vorgestellt, um pheromone-basierte Kommunikation mit mikroautonomen Robotern zu studieren. Eine weitere Studie präsentierte ein System, in dem Pheromone über einen horizontalen LCD-Bildschirm, auf dem die Roboter bewegt wurden, implementiert wurden, mit den Robotern mit nach unten gerichteten Lichtsensoren, um die Muster darunter zu registrieren. Algorithm und Formeln In den Ameisenkolonie-Optimierungsalgorithmen ist ein künstliches Ameisen ein einfaches Rechenmittel, das nach guten Lösungen zu einem gegebenen Optimierungsproblem sucht. Um einen Ameisenkoloniealgorithmus anzuwenden, muss das Optimierungsproblem in das Problem umgerechnet werden, den kürzesten Weg auf einem gewichteten Diagramm zu finden. Im ersten Schritt jeder Iteration konstruiert jeder Ameisen stochastisch eine Lösung, d.h. die Reihenfolge, in der die Kanten im Diagramm verfolgt werden sollen. Im zweiten Schritt werden die durch die verschiedenen Ameisen gefundenen Pfade verglichen. Der letzte Schritt besteht darin, die Pheromone-Spiegel auf jeder Kante zu aktualisieren. Prozedur ACO_MetaHeuristic wird zwar nicht beendet erzeugenSolutions() daemonActions() pheromoneUpdate() wiederholen Endprozedur Edge Selektion Jede Ame muss eine Lösung konstruieren, um sich durch das Diagramm zu bewegen. Um die nächste Kante in ihrer Tour auszuwählen, wird eine Ameise die Länge jeder Kante aus ihrer aktuellen Position sowie die entsprechende Pheromone Ebene berücksichtigen. In jedem Schritt des Algorithmus bewegt sich jede Ameise von einem Zustand x {\displaystyle x} zum Zustand y {\displaystyle y}, entsprechend einer vollständigeren Zwischenlösung. Somit berechnet jede ant k {\displaystyle k} einen Satz A k ( x ) {\displaystyle A_{k}(x) möglicher Erweiterungen in ihren aktuellen Zustand in jeder Iteration und bewegt sich zu einem dieser Wahrscheinlichkeit. Bei ant k {\displaystyle k} hängt die Wahrscheinlichkeit p x y k {\displaystyle p_{xy}^{k des Bewegens vom Zustand x {\displaystyle x} zum Zustand y {\displaystyle y} von der Kombination von zwei Werten ab, die Attraktivität η x y {\displaystyle \eta {_xy} des Bewegens, wie durch eine gewisse heuristische Anzeige der Bewegung berechnet Die Trail-Ebene stellt eine posteriori-Indikation für die Vergänglichkeit dieser Bewegung dar. Im allgemeinen bewegt sich der k {\displaystyle k} th ant vom Zustand x {\displaystyle x} zum Zustand y {\displaystyle y} mit der Wahrscheinlichkeit p x y k = ( τ x y α ) ( η x y β ) Σ z ε a l o w e d x ( τ x z α α ) ( η x z β ) ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ wobei τ x y {\displaystyle \tau {_xy} die Menge an Pheromone für den Übergang vom Zustand x {\displaystyle x} zu y {\displaystyle y} hinterlegt ist, 0 ≤ α \displaystyle \alpha } ist ein Parameter zur Steuerung des Einflusses von τ x y {\displaystyle \tau {_xy}, η x y {\displaystyle \eta {_xy} ist die Desirability des Zustandsübergangs x y\displaystyle xy} (ein Prioriwissen, typischerweise 1 / d x ystyle\displaystyle 1/d_{xy} Pheromone-Update-Strecken werden in der Regel aktualisiert, wenn alle Ameisen ihre Lösung abgeschlossen haben, die Höhe der Trails entsprechend Bewegungen zu erhöhen oder zu verringern, die Teil von guten bzw. schlechten Lösungen waren. Ein Beispiel für eine globale Pheromone-Update-Regel ist τ x y ← ( 1 − ρ ) τ x y + Σ m τ x y k {\displaystyle \tau {_xy}\leftarrow (1-\rho \)tau {_xy}+\sum Delta \tau _xy}{k, wobei τ x y {\displaystyle \tau {_xy} die Menge an Pheromone für einen Zustandsübergang x y {\displaystyle xy} hinterlegt ist, ρ {\displaystyle \rho } der pheromone Verdampfungskoeffizient ist, m {\displaystyle m} die Anzahl der Ameisen und Δ τ x y k {\display L k wenn ant k die Kurve x y in ihrer Tour verwendet 0 andernfalls {\displaystyle \Delta \tau xy}^{k}={\begin{cases}Q/L_{k}&{mbox{if ant }k{\mbox verwendet die Kurve }xy{\mbox in ihrer Tour}\\0&{style\mbox{Anderweise} Gemeinsame Erweiterungen Hier sind einige der beliebtesten Variationen von ACO Algorithmen. Ant-System (AS) Das Ant-System ist der erste ACO-Algorithmus. Dieser Algorithmus entspricht dem oben dargestellten. Es wurde von Dorigo entwickelt. Ant-Kolonie-System (ACS) Im ant-Kolonie-Systemalgorithmus wurde das ursprüngliche Ameisen-System in drei Aspekten modifiziert: (i) die Kantenauswahl wird zur Ausbeutung vorgespannt (d.h. die Wahrscheinlichkeit der Auswahl der kürzesten Kanten mit einer großen Menge Pheromone); (ii) während des Aufbaus einer Lösung, Ameisen ändern die Pheromone-Ebene der Kanten, die sie durch die Anwendung einer lokalen Pheromino-Update-Reaktualisierungsregel. Elitist Ameisensystem In diesem Algorithmus legt die weltweit beste Lösung Pheromone auf seinem Weg nach jeder Iteration (auch wenn dieser Trail nicht überprüft wurde), zusammen mit allen anderen Ameisen. Die elitist Strategie hat als Ziel die Suche nach allen Ameisen zu leiten, um eine Lösung zu bauen, um Links der aktuellen besten Route enthalten. Max-min-Ant-System (MMAS)Dieser Algorithmus steuert die maximalen und minimalen Pheromone Beträge auf jedem Trail. Nur die weltweit beste Tour oder die Iteration beste Tour dürfen Pheromone zu seinem Trail hinzufügen. Um eine Stagnation des Suchalgorithmus zu vermeiden, ist der Bereich möglicher Pheromone-Mengen auf jedem Trail auf ein Intervall beschränkt [τmax,τmin]. Alle Kanten werden auf τmax initialisiert, um eine höhere Exploration von Lösungen zu zwingen. Die Trails werden in der Nähe der Stagnation wieder zu τmax gebracht. Rank-basiertes Ameisensystem (ASrank) Alle Lösungen werden nach ihrer Länge sortiert. Nur eine feste Anzahl der besten Ameisen in dieser Iteration dürfen ihre Versuche aktualisieren. Die Menge an abgeschiedenem Pheromone wird für jede Lösung gewichtet, so dass Lösungen mit kürzeren Pfaden mehr Pheromone ablagern als die Lösungen mit längeren Pfaden. Kontinuierliche orthogonale Ameisenkolonie (COAC)Der Pheromone-Ablagerungsmechanismus von COAC ist es, Ameisen zu ermöglichen, gemeinsam und effektiv nach Lösungen zu suchen. Durch die Verwendung eines orthogonalen Design-Verfahrens können Ameisen in der machbaren Domäne ihre ausgewählten Regionen schnell und effizient erkunden, mit einer verbesserten globalen Suchfähigkeit und Genauigkeit. Das orthogonale Designverfahren und das adaptive Radiusanpassungsverfahren können auch auf andere Optimierungsalgorithmen erweitert werden, um größere Vorteile bei der Lösung praktischer Probleme zu bieten. Rekursive Ameisenkolonie Optimierung Es ist eine wiederkehrende Form des Ameisensystems, das die gesamte Suchdomäne in mehrere Subdomains teilt und das Ziel auf diesen Subdomains löst. Die Ergebnisse aller Subdomains werden verglichen und die besten wenigen davon werden für die nächste Stufe gefördert. Die den ausgewählten Ergebnissen entsprechenden Subdomains werden weiter unterteilt und der Vorgang solange wiederholt, bis eine Ausgabe gewünschter Präzision erreicht wird. Dieses Verfahren wurde an schwerliegenden geophysikalischen Inversionsproblemen getestet und funktioniert gut. Konvergence Für einige Versionen des Algorithmus kann nachgewiesen werden, dass es konvergent ist (d.h. es ist in der Lage, das globale Optimum in endlicher Zeit zu finden). Der erste Nachweis der Konvergenz für einen Ameisenkoloniealgorithmus wurde im Jahr 2000, den graphischen Ant-Systemalgorithmus und später für die ACS- und MMAS-Algorithmen gemacht.Wie die meisten Metaheuristiken ist es sehr schwierig, die theoretische Konvergenzgeschwindigkeit abzuschätzen. Eine Leistungsanalyse eines kontinuierlichen Ameisenkoloniealgorithmus bezüglich seiner verschiedenen Parameter (Gegenauswahlstrategie, Distanzmaß Metrik und Pheromone-Verdampfungsrate) zeigte, dass seine Leistung und Konvergenzrate für die gewählten Parameterwerte und insbesondere für den Wert der Pheromone-Verdampfungsrate empfindlich sind. Im Jahr 2004 zeigten Zlochin und seine Kollegen, dass COAC-Typ Algorithmen assimilierte Methoden des stochastischen Gradientenabstiegs, auf der Kreuzentropie und Schätzung des Verteilungsalgorithmus sein könnten. Sie schlugen diese Metaheuristiken als "Forschungsmodell" vor. Anwendungen Ant-Kolonie-Optimierungsalgorithmen wurden auf viele kombinatorische Optimierungsprobleme angewendet, von quadratischer Zuordnung zu Proteinfalt- oder Routing-Fahrzeugen und viele abgeleitete Methoden wurden an dynamische Probleme in realen Größen, stochastische Probleme, Multitargets und parallele Implementierungen angepasst. Es wurde auch verwendet, um nahezu optimale Lösungen für das Reisevertriebsproblem zu produzieren. Sie haben einen Vorteil gegenüber simulierten Glüh- und Genalgorithmenansätzen ähnlicher Probleme, wenn sich der Graph dynamisch ändern kann; der Ameisenkoloniealgorithmus kann kontinuierlich laufen und sich an Veränderungen in Echtzeit anpassen. Dies ist von Interesse an Netzwerk-Routing- und Stadtverkehrssystemen. Der erste ACO-Algorithmus wurde das Ameisensystem genannt und es war darauf ausgerichtet, das Wander-Verkäufer-Problem zu lösen, in dem das Ziel ist, die kürzeste Rundreise zu finden, um eine Reihe von Städten zu verbinden. Der allgemeine Algorithmus ist relativ einfach und basiert auf einer Reihe von Ameisen, die jeweils eine der möglichen Rundfahrten entlang der Städte machen. In jeder Phase wählt die Ame aus, von einer Stadt in eine andere zu wechseln, nach einigen Regeln: Es muss jede Stadt genau einmal besuchen; eine entfernte Stadt hat weniger Chancen, gewählt zu werden (die Sichtbarkeit); Je intensiver der Pheromone-Trail auf einem Rand zwischen zwei Städten, desto größer die Wahrscheinlichkeit, dass dieser Rand gewählt werden; Nachdem seine Reise abgeschlossen, die Amebe legt mehr Pheromone auf allen Kanten, die es durchquert, wenn die Reise kurz ist; Nach jeder Iteration verdampfen Spuren von Pheromonen. Scheduling-Problem Sequential Order Problem (SOP) Job-shop Schieduling Problem (JSP) Open-shop Schieduling Problem (OSP)Permutation Flow Shop Problem (PFSP)Single Maschine Total tardiness Problem (SMTTP)Single Maschine Gesamtgewichtete tardiness Problem (SMTWTP) Mehrdepot-Fahrzeug-Routing-Problem (MDVRP) Zeit Fahrzeug-Routing-Problem (PVRP) Split Lieferfahrzeug-Routing-Problem (SDVRP)Stochastic Fahrzeug-Routing-Problem (SVRP) Fahrzeug-Routing-Problem mit Pick-up und Lieferung (VRPPD)Vehiclerouting Problem mit Zeitfenstern (VRPTW) Zeitabhängiges Fahrzeug-Routing-Problem mit Zeitfenstern (TDVRPTW) Fahrzeug-Routing-Problem mit Zeitfenstern und mehreren Servicearbeitern (VRPTWMS) Assignment problem Quadratic Zuordnung Problem (QAP)Generalized Zuordnung Problem (GAP) Frequenzzuordnung Problem (FAP) Redundancy Zuordnung Problem (RAP) Problem festlegen Abdeckung Problem (SCP) Partition Problem (SPP)Gewährtes Diagramm Baum Partition Problem (WCGTPP)Arc-gewichtete l-Cardinality Baum Problem (AWlCTP) Multiple knapsack Problem (MKP) Maximales unabhängiges Set Problem (MIS) Geräte-Sizing Problem in der Nanoelektronik physikalisches Design Ant-Kolonie-Optimierung (ACO) basierende Optimierung von 45 nm CMOS-basierter Sensorverstärkerschaltung könnte in sehr minimaler Zeit zu optimalen Lösungen konvergieren. Ant Kolonie Optimierung (ACO) basierte reversible Schaltung Synthese könnte die Effizienz deutlich verbessern. Antennenoptimierung und Synthese Um die Form der Antennen zu optimieren, können Ameisenkolonialgorithmen verwendet werden. Als Antennen können beispielsweise RFID-Tags auf Basis von Ameisenkoloniealgorithmen (ACO,) Loopback und Unloopback-Vibratoren 10 x 10 Bildverarbeitung betrachtet werden. Der ACO-Algorithmus wird in der Bildverarbeitung zur Bildranderkennung und Kantenverknüpfung verwendet. Kantenerkennung: Der Graph ist hier das 2-D-Bild und die Ameisen kreuzen aus einem Pixel, das Pheromone abgelegt. Die Bewegung von Ameisen von einem Pixel zum anderen wird durch die lokale Variation der Intensitätswerte des Bildes gerichtet. Durch diese Bewegung wird die höchste Dichte des Pheromons an den Rändern abgeschieden. Folgende Schritte sind in der Kantenerkennung mit ACO:Step1 Initialisierung eingebunden: Zufälliger Ort K {\displaystyle K} ants on the image I M 1 M 2 {\displaystyle I_{M_{1}M_{2 where K = ( M 1 χ M 2) 1 2 {\displaystyle K=(M_{1}*M_{2})^{\tfrac 1}{2 .Pheromone Matrix τ (i, j ) {\displaystyle \tau {(_i,j}) werden mit einem Zufallswert initialisiert. Die große Herausforderung im Initialisierungsprozeß ist die Bestimmung der heuristischen Matrix. Es gibt verschiedene Methoden, um die heuristische Matrix zu bestimmen. Für das nachfolgende Beispiel wurde die heuristische Matrix anhand der lokalen Statistiken berechnet: die lokalen Statistiken an der Pixelposition (i,j) η (i, j) = 1 Z χ V c χ I (i, j ) {\displaystyle \eta (i,j) (i,j) Wo I {\displaystyle I} das Bild der Größe M 1 χ M 2 {\displaystyle M_{1}*M_{2 Z = Σ i = 1 : M 1 Σ j = 1 : M 2 V c (I i, j ) {\displaystyle Z=\sum I = 1 : (4) 0, andernfalls {\displaystyle f(x)={\begin{cases}\pi x\sin({\frac {\pi x}{2\lambda \&},)text{für 0 ≤ x ≤}\lambda \text; (4)}\\\\0,&{\text{else}\end{casese} Der Parameter λ {\displaystyle \lambda } in jeder der oben genannten Funktionen passt die jeweiligen Formen der Funktionen an. Schritt 2 Konstruktionsprozess: Die Bewegung der Ameisen basiert auf 4-verknüpften Pixeln oder 8-verknüpften Pixeln. Die Wahrscheinlichkeit, mit der sich die Ameise bewegt, wird durch die Wahrscheinlichkeitsgleichung P x, y {\displaystyle P_{x,y} Schritt 3 und Schritt 5 Update-Prozess gegeben: Die Pheromone-Matrix wird zweimal aktualisiert. in Schritt 3 wird die Spur des Ameisens (gegeben durch τ ( x , y ) {\displaystyle \tau {(_x,y})) aktualisiert, wo wie in Schritt 5 die Verdampfungsrate des Trails aktualisiert wird, die durch die folgende Gleichung gegeben wird. τ n e w ← ( 1 − ψ ) τ o l d + ψ τ 0 {\displaystyle \tau {_new}\leftarrow (1-\psi \)tau {_old}+\psi \tau {_0} , wobei ψ {\displaystyle \psi } der pheromone decay Koeffizient 0 < τ < 1 {\displaystyle 0\tau <1} Schritt 7 Entscheidungsprozess: Sobald die K-Ants einen festen Abstand L für die N- Iteration bewegt haben, entscheidet, ob es sich um eine Kante handelt oder nicht, ob es sich um die Schwelle T auf der Pheromone-Matrix G handelt.Die Schwelle für das nachfolgende Beispiel wird anhand der Otsu-Methode berechnet. Bildrand mit ACO erkannt: Die nachfolgenden Bilder werden mit verschiedenen Funktionen erzeugt, die durch die Gleichung (1) bis (4.) gegeben sind. Kantenverknüpfung: ACO hat sich auch bei Kantenverknüpfungsalgorithmen bewährt. Andere Anwendungen Konkursvorhersage Klassifizierung Verbindungsorientierte Netzwerk-Routing Verbindungslose Netzwerk-Routing Data Mining Diskontierte Cashflows in Projektplanung Verteilte Informationen Retrieval Energie- und Stromnetz-Design Grid Workflow-Scheduling-Problem Inhibitory Peptid-Design für Protein-Protein-Interaktionen Intelligentes Testsystem Power electronic circuit Design Protein Klappsystem Identifikationsschwierigkeit Definition Mit einem ACO-Algorithmus, der kürzeste Weg in einem Graph, der kürzesten, zwischen zwei Punkten A und B, zwischen zwei Punkten A und B, ist, zwischen zwei Punkten A. Es ist nicht einfach, eine genaue Definition zu geben, was Algorithmus ist oder ist keine Ameisenkolonie, weil die Definition je nach den Autoren und Anwendungen variieren kann. Weitgehend betrachtet werden Ameisenkoloniealgorithmen als bevölkerte Metaheuristiken mit jeder Lösung, die durch eine im Suchraum bewegte Ameise repräsentiert wird. Ameisen markieren die besten Lösungen und berücksichtigen frühere Markierungen, um ihre Suche zu optimieren. Sie können als probabilistische Multi-Agenent-Algorithmen mit einer Wahrscheinlichkeitsverteilung gesehen werden, um den Übergang zwischen jeder Iteration zu machen. In ihren Versionen für kombinatorische Probleme verwenden sie einen iterativen Aufbau von Lösungen. Nach einigen Autoren ist die Sache, die ACO-Algorithmen von anderen Verwandten unterscheidet (wie Algorithmen zur Schätzung der Verteilung oder Partikelschwarm-Optimierung) genau ihr konstruktiver Aspekt. Bei kombinatorischen Problemen ist es möglich, dass die beste Lösung letztendlich gefunden wird, obwohl keine Ameise wirksam sein würde. So ist es im Beispiel des Travelling Salesman-Problems nicht notwendig, dass ein Ameisen tatsächlich den kürzesten Weg fährt: der kürzeste Weg kann aus den stärksten Segmenten der besten Lösungen gebaut werden. Diese Definition kann jedoch bei Problemen in realen Variablen problematisch sein, bei denen keine Struktur von Nachbarn existiert. Das kollektive Verhalten von sozialen Insekten bleibt eine Inspirationsquelle für Forscher. Die Vielzahl von Algorithmen (zur Optimierung oder nicht) auf der Suche nach Selbstorganisation in biologischen Systemen hat zum Konzept der "Kriegsintelligenz" geführt, die ein ganz allgemeiner Rahmen ist, in dem ant Koloniealgorithmen passen. Stigmergy Algorithmen In der Praxis gibt es eine Vielzahl von Algorithmen, die behaupten, "Antikolonien" zu sein, ohne immer den allgemeinen Rahmen der Optimierung durch canonische Ameisenkolonien zu teilen. In der Praxis gilt die Verwendung eines Informationsaustauschs zwischen Ameisen über die Umgebung (ein Prinzip namens Stigmergy) als ausreichend, damit ein Algorithmus zur Klasse der Ameisenkoloniealgorithmen gehört. Dieses Prinzip hat einige Autoren dazu geführt, den Begriff Wert zu schaffen, um Methoden und Verhalten auf der Suche nach Nahrung, Sortierung Larven, Arbeitsteilung und kooperativen Transport zu organisieren. Genetische Algorithmen (GA) halten einen Pool von Lösungen statt nur einer. Der Prozess der Suche nach überlegenen Lösungen imitiert den der Evolution, wobei Lösungen kombiniert oder mutiert werden, um den Pool von Lösungen zu verändern, wobei Lösungen von minderwertiger Qualität verworfen werden. Eine Schätzung des Verteilungsalgorithmus (EDA) ist ein evolutionärer Algorithmus, der traditionelle Reproduktionsoperatoren durch modellgeführte Operatoren ersetzt. Solche Modelle werden aus der Bevölkerung durch Einsatz von maschinellen Lerntechniken erlernt und als probabilistische grafische Modelle dargestellt, aus denen neue Lösungen aus geführtem Crossover abgetastet oder erzeugt werden können. Simulierte Glühung (SA) ist eine verwandte globale Optimierungstechnik, die den Suchraum durch Erzeugung benachbarter Lösungen der aktuellen Lösung durchläuft. Ein überlegener Nachbar wird immer akzeptiert. Ein minderwertiger Nachbar wird probabilistisch aufgrund der Qualitätsdifferenz und eines Temperaturparameters angenommen. Der Temperaturparameter wird geändert, da der Algorithmus zur Veränderung der Art der Suche fortfährt. Reaktive Suchoptimierung konzentriert sich auf die Kombination von maschinellem Lernen mit Optimierung, indem eine interne Rückkopplungsschleife zur Selbstabstimmung der freien Parameter eines Algorithmus auf die Merkmale des Problems, des Beispiels und der lokalen Situation um die aktuelle Lösung hinzugefügt wird. Die Tabu-Suche (TS) ist ähnlich der simulierten Glühung, indem beide den Lösungsraum durch Testen von Mutationen einer einzelnen Lösung durchqueren. Während die simulierte Glühung nur eine mutierte Lösung erzeugt, erzeugt tabu-Suche viele mutierte Lösungen und bewegt sich mit der geringsten Fitness der generierten Lösungen. Um das Radfahren zu verhindern und eine größere Bewegung durch den Lösungsraum zu fördern, wird eine tabu-Liste von Teil- oder Komplettlösungen beibehalten. Es ist verboten, zu einer Lösung zu bewegen, die Elemente der tabu-Liste enthält, die aktualisiert wird, wenn die Lösung den Lösungsraum durchläuft. Künstliches Immunsystem (AIS) Algorithmen werden auf Wirbeln Immunsysteme modelliert. Partikel-Schwarm-Optimierung (PSO,) eine swarm Intelligence-Methode Intelligente Wassertropfen (IWD,) ein swarm-basierter Optimierungsalgorithmus basierend auf natürlichen Wassertropfen fließen in Flüsse Gravitational Suchalgorithmus (GSA,) ein swarm Intelligence-Methode Ant-Kolonie-Clustering-Methode (ACCM), eine Methode, die Verwendung von Clustering-Ansatz, die Erweiterung der ACO. Stochastic Diffusion Search (SDS,) eine agentenbasierte probabilistische globale Such- und Optimierungstechnik am besten geeignet für Probleme, bei denen die Objektivfunktion in mehrere unabhängige Teilfunktionen zerlegt werden kann Die Erfinder sind Frans Moyson und Bernard Manderick. Zu den Pionieren des Feldes gehören Marco Dorigo, Luca Maria Gambardella. Chronologie der Ameisenkolonie Optimierung Algorithmen. 1959, Pierre-Paul Grassé erfand die Theorie der Stigmergie, um das Verhalten des Nestbaus in Termiten zu erklären; 1983, Deneubourg und seine Kollegen untersuchten das kollektive Verhalten von Ameisen; 1988, und Moyson Manderick einen Artikel über Selbstorganisation unter Ameisen; 1989, die Arbeit von Gos, Aron, Deneubourg und Pasteels über das kollektive Verhalten der argentinischen Ameisen, Ein technischer Bericht, der von V. Maniezzo und A. Colorniloch fünf Jahre später veröffentlicht wurde; 1994, Appleby und Steward von British Telecommunications Plc veröffentlichte die erste Anwendung auf Telekommunikationsnetze 1995, Gambardella und Dorigo vorgeschlagen ant-q, die vorläufige Version von ant Kolonie-System als erstes Ant-System; 1996, Gambardella und Dorigo 2012, Prabhakar und Kollegen veröffentlichen Forschung über den Betrieb von einzelnen Ameisen, die in Tandem ohne Pheromonen kommunizieren, Spiegelung der Prinzipien der Computer-Netzwerk-Organisation. Das Kommunikationsmodell wurde mit dem Transmission Control Protocol.2016, erste Anwendung auf Peptidsequenzdesign.2017, erfolgreiche Integration der Multi-Kriterien-Entscheidungsmethode PROMETHEE in den ACO-Algorithmus (HUMANT-Algorithmus.) Referenzen Publikationen (ausgewählt) M. Dorigo, 1992.Optimization, Learning and Natural Algorithms, PhD-Thesis, Politecnico di Milano, Italy.M Dorigo, V. Maniezzo & A. Colorni, 1996."Ant System: Optimization by a Colony of Cooperating Agents", IEEE Transactions on Systems, Man, and Cybernetics–Part B, 26 (1): 29– IEEE Transactions on Evolutionary Computation, 1 (1): 53–66.M Dorigo, G. Di Caro & L. M. Gambardella, 1999."Ant Algorithms for Discrete Optimization".Künstliches Leben, 5 (2): 137–172.E Bonabeau, M. Dorigo et G. Theraulaz, 1999. Swarm Intelligence: Von natürlichen bis künstlichen Systemen, Oxford University Press. ISBN 0-19-513159-2 M. Dorigo & T. Stützle, 2004.Ant Colony Optimization, MIT Press. ISBN 0-262-04219-3 M. Dorigo, 2007."Ant Colony Optimization". Scholarpedia.C Blum, 2005 "Ant Kolonie Optimierung: Einführung und aktuelle Trends". Physik of Life Reviews, 2: 353-373 M. Dorigo, M. Birattari & T Stützle, 2006 Ant Colony Optimierung: Künstliche Ants als Computational Intelligence Technique. TR/IRIDIA/2006-023 Mohd Murtadha Mohamad,"Articulated Robots Motion Planning Using Foraging Ant Strategy",Journal of Information Technology - Special Issues in Künstliche Intelligenz, Vol.20, No. 4 pp.163–181, Dezember 2008, ISSN 0128-3790.N Monmarché, F. Guinand & P. Siarry (eds,) "Künstliche Ants, August 2010," Kazharov, V. Kureichik, 2010." Ant Kolonie Optimierung Algorithmen zur Lösung von Transportproblemen", Journal of Computer and Systems Sciences International, Vol.49.No 1.pp.30–43.C-M Pintea, 2014, Advances in Bio-inspired Computing for Combinatorial Optimization Problem, Springer ISBN 978-3-642-40178-7 K. Saleem, N. Fisal, Ahila Baharudin, A. Journal of Accounting. 2018 Mar;8(1.) Externe Links Scholarpedia Ant Colony Optimierung Seite ant Colony Optimierung Home Seite "Ant Colony Optimization" - Russische Wissenschaft und Forschung AntSim - Simulation von Ant Colony Algorithms MIDACO-Solver Allgemeine Zweckoptimierung Software basierend auf ant Kolonie Optimierung (Matlab, Excel, VBA, C/C,+ R, C, AG, Fortran und Pyth Amt-Algorithmus-Simulation (Java Applet)Java Ant Colony System Framework