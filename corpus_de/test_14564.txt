Ein Stream-Cipher ist eine symmetrische Schlüsselverschlüsselung, bei der Klartext-stellige mit einem pseudorandom cipher digit stream (keystream) kombiniert werden. In einem Stromkreis wird jede Klartextziffer zu einem Zeitpunkt mit der entsprechenden Ziffer des Schlüsselstroms verschlüsselt, um eine Ziffer des Chiffretextstroms zu geben. Da die Verschlüsselung jeder Ziffer vom aktuellen Zustand der Chiffre abhängig ist, wird sie auch als Zustandsschlüssel bezeichnet. In der Praxis ist eine Ziffer typischerweise ein bisschen und die Kombinationsoperation ist ein Exklusiv-oder (XOR). Der pseudorandom keystream wird typischerweise seriell aus einem zufälligen Saatgutwert mittels digitaler Schieberegister generiert. Der Saatwert dient als kryptographischer Schlüssel zur Entschlüsselung des Chiffretextstroms. Stream-Ciphers stellen einen anderen Ansatz zur symmetrischen Verschlüsselung aus Block-Ciphers dar. Block-Ciphers arbeiten auf großen Blöcken von Ziffern mit einer festen, unwandelbaren Transformation. Diese Unterscheidung ist nicht immer klar: In einigen Betriebsarten wird ein Block-Cipher Primitive so verwendet, dass es effektiv als Strom-Cipher wirkt. Stream-Ciphers führen typischerweise mit einer höheren Geschwindigkeit als Block-Ciphers und haben eine geringere Hardware-Komplexität. Stromverschlüsselungen können jedoch bei falscher Verwendung für schwere Sicherheitsprobleme anfällig sein (siehe Stream-Cipher-Angriffe;) insbesondere muss der gleiche Startzustand (seed) nie zweimal verwendet werden. Loose Inspiration aus der einmaligen Pad Stream-Chiffre können als Annäherung an die Wirkung einer bewährten unzerbrechlichen Chiffre, der einmaligen Pad (OTP) betrachtet werden. Ein einmaliges Pad verwendet einen Schlüsselstrom von völlig zufälligen Ziffern. Der Keystream wird zu einer Zeit mit den Klartextziffern kombiniert, um den Chiffretext zu bilden. Dieses System wurde 1949 von Claude E. Shannon als sicher erachtet. Der Schlüsselstrom muss jedoch mit mindestens der gleichen Länge wie der Klartext vollständig zufällig erzeugt werden und kann nicht mehr als einmal verwendet werden. Dies macht das System umständlich, um in vielen praktischen Anwendungen zu implementieren, und so wurde das Einmal-Pad nicht weit verbreitet, außer für die kritischsten Anwendungen. Für diese Anwendungen sind die Schlüsselgeneration, die Verteilung und das Management entscheidend. Ein Stream-Cipher nutzt einen viel kleineren und bequemeren Schlüssel wie 128 Bits. Auf Basis dieses Schlüssels erzeugt er einen pseudorandom keystream, der ähnlich wie das Einmal-Pad mit den Klartext-stelligen kombiniert werden kann. Dies kommt jedoch zu einem Preis. Der Keystream ist jetzt pseudorandom und so ist nicht wirklich zufällig. Der Sicherheitsnachweis im Zusammenhang mit dem einmaligen Pad hält nicht mehr. Es ist durchaus möglich, dass ein Stromschlüssel völlig unsicher ist. Arten Ein Strom-Cipher erzeugt aufeinanderfolgende Elemente des Schlüsselstroms basierend auf einem internen Zustand. Dieser Zustand wird in im Wesentlichen zweierlei Hinsicht aktualisiert: Wenn sich der Zustand unabhängig von den Klartext- oder Ciphertext-Nachrichten ändert, wird die Chiffre als Synchronstrom-Chiffre eingestuft. Im Gegensatz dazu aktualisieren selbstsynchronisierende Stream-Ciphers ihren Zustand basierend auf früheren Ciphertext-Zeilen. Synchrone Stromkreise In einem Synchronstrom-Cipher wird unabhängig von den Klartext- und Ciphertext-Nachrichten ein Strom von Pseudorandom-Zeilen erzeugt und dann mit dem Klartext (zu Verschlüsselung) oder dem Chiffretext (zu entschlüsseln) kombiniert. In der häufigsten Form werden binäre Ziffern verwendet (Bits,) und der Keystream wird mit dem Klartext unter Verwendung des Exklusiv- oder Betriebs (XOR) kombiniert. Dies wird als binäres Additivstrom-Cipher bezeichnet. In einem Synchronstrom-Cipher müssen Sender und Empfänger genau in Schritt sein, um eine Entschlüsselung erfolgreich zu sein. Werden während der Übertragung Ziffern hinzugefügt oder aus der Nachricht entfernt, geht die Synchronisation verloren. Zur Wiederherstellung der Synchronisierung können verschiedene Offsets systematisch versucht werden, die richtige Entschlüsselung zu erhalten. Ein weiterer Ansatz ist, den Chiffretext mit Markierungen an regelmäßigen Punkten in der Ausgabe zu markieren. Wenn jedoch eine Ziffer in der Übertragung beschädigt wird, anstatt hinzugefügt oder verloren, wird nur eine einzelne Zahl im Klartext betroffen und der Fehler nicht zu anderen Teilen der Nachricht propagiert. Diese Eigenschaft ist nützlich, wenn die Übertragungsfehlerrate hoch ist; sie macht es jedoch weniger wahrscheinlich, dass der Fehler ohne weitere Mechanismen erkannt würde. Darüber hinaus sind aufgrund dieser Eigenschaft Synchronstrom-Chiffre sehr anfällig für aktive Angriffe: Wenn ein Angreifer eine Ziffer im Chiffretext ändern kann, könnten sie vorhersehbare Änderungen an dem entsprechenden Klartextbit vornehmen können; z.B. das Umklappen eines Bits im Chiffretext bewirkt, dass das gleiche Bit im Klartext umkippt wird. Selbstsynchronisierende Stromkreise Ein weiterer Ansatz verwendet mehrere der vorherigen N-Ziffertextziffern, um den Keystream zu berechnen. Solche Systeme sind als selbstsynchronisierende Stromkreise, asynchrone Stromkreise oder Ciphertextautokey (CTAK) bekannt. Die Idee der Selbstsynchronisation wurde 1946 patentiert und hat den Vorteil, dass der Empfänger automatisch mit dem Keystream-Generator nach dem Empfang von N-Chiffretext-Zeilen synchronisiert wird, wodurch es einfacher wird, sich zu erholen, wenn die Ziffern fallen oder dem Nachrichtenstrom hinzugefügt werden. Einstellige Fehler sind in ihrer Wirkung begrenzt, die nur bis zu N Klartextziffern betreffen. Ein Beispiel für eine selbstsynchronisierende Stromverschlüsselung ist eine Blockverschlüsselung im Cipher Feedback (CFB) Modus. Basierend auf linearen Rückkoppel-Shift-Registern Binäre Stromkreise werden oft mit linearen Rückkoppel-Shift-Registern (LFSRs) aufgebaut, da sie leicht in Hardware implementiert werden können und rechnerisch leicht analysiert werden können. Die Verwendung von LFSR allein reicht jedoch nicht aus, um eine gute Sicherheit zu gewährleisten. Es wurden verschiedene Maßnahmen zur Erhöhung der Sicherheit von LFSR vorgeschlagen. Nichtlineare Kombinationsfunktionen Da LFSRs inhärent linear sind, ist eine Technik zur Entfernung der Linearität die Zuführung der Ausgänge mehrerer paralleler LFSR in eine nichtlineare Boolesche Funktion zu einem Kombinationsgenerator. Verschiedene Eigenschaften einer solchen Kombinationsfunktion sind entscheidend, um die Sicherheit des resultierenden Systems zu gewährleisten, beispielsweise um Korrelationsangriffe zu vermeiden. Taktgeneratoren Normalerweise werden die LFSR regelmäßig gestuft. Ein Ansatz zur Einführung der Nichtlinearität besteht darin, dass die LFSR unregelmäßig getaktet wird, gesteuert durch die Ausgabe eines zweiten LFSR. Solche Generatoren umfassen den Stop-and-Go-Generator, den Wechselschrittgenerator und den Schrumpfgenerator. Ein Wechselschrittgenerator umfasst drei LFSRs, die wir LFSR0, LFSR1 und LFSR2 für Komfort nennen werden. Der Ausgang eines der Register entscheidet, welche der anderen beiden zu verwenden sind; beispielsweise wenn LFSR2 eine 0 ausgibt, LFSR0 getaktet wird und wenn es stattdessen eine 1, LFSR1 getaktet wird. Der Ausgang ist der exklusive ODER des letzten Bits, das von LFSR0 und LFSR1 produziert wird. Der Anfangszustand der drei LFSR ist der Schlüssel. Der Stop-and-go-Generator (Beth und Piper, 1984) besteht aus zwei LFSRs. Ein LFSR wird getaktet, wenn der Ausgang einer Sekunde ein 1 ist, andernfalls wiederholt er seinen vorherigen Ausgang. Dieser Ausgang wird dann (in einigen Versionen) mit dem Ausgang eines dritten LFSR mit einem regelmäßigen Takt getaktet. Der Schrumpfgenerator nimmt einen anderen Ansatz ein. Es werden zwei LFSR verwendet, die beide regelmäßig getaktet sind. Wenn der Ausgang des ersten LFSR 1 ist, wird der Ausgang des zweiten LFSR zum Ausgang des Generators. Wenn die erste LFSR jedoch 0 ausgibt, wird der Ausgang der zweiten verworfen und kein Bit vom Generator ausgegeben. Dieser Mechanismus leidet an Timing-Angriffen auf den zweiten Generator, da die Geschwindigkeit des Ausgangs in einer vom Zustand des zweiten Generators abhängigen Weise variabel ist. Dies kann durch Pufferung der Ausgabe verringert werden. Filtergenerator Ein weiterer Ansatz zur Verbesserung der Sicherheit eines LFSR besteht darin, den gesamten Zustand eines einzelnen LFSR in eine nichtlineare Filterfunktion zu übertragen. Anstelle eines Linearantriebsgerätes kann eine nichtlineare Updatefunktion verwendet werden. Zum Beispiel haben Klimov und Shamir dreieckige Funktionen (T-Funktionen) mit einem einzigen Zyklus auf n-Bit-Worte vorgeschlagen. Sicherheit Für einen Stromschlüssel, der sicher sein soll, muss sein Schlüsselstrom eine große Periode haben, und es muss unmöglich sein, den Schlüssel oder den inneren Zustand der Chiffre vom Schlüsselstrom wiederherzustellen. Cryptographen verlangen auch, dass der Keystream frei von sogar subtilen Voreinflüssen ist, die Angreifer einen Strom von zufälligem Rauschen unterscheiden lassen und nachweisbare Zusammenhänge zwischen Schlüsselströmen, die mit verwandten Schlüsseln oder verwandten kryptografischen Nicht-ces korrespondieren. Das sollte für alle Schlüssel (es sollte keine schwachen Schlüssel sein), auch wenn der Angreifer kann, oder wählen Sie einen Klartext oder einen Chiffretext. Wie bei anderen Anschlägen in der Kryptographie können Stream-Cipher-Angriffe zertifiziert werden, so dass sie nicht unbedingt praktische Möglichkeiten sind, um die Chiffre zu brechen, sondern zeigen, dass die Chiffre andere Schwächen haben könnte. Sicher mit einem sicheren Synchronstrom-Cipher erfordert, dass man nie wieder den gleichen Keystream zweimal. Das bedeutet in der Regel, dass jedem Aufruf der Chiffre ein anderer Nicht- oder Schlüssel zugeführt werden muss. Anwendungsdesigner müssen auch erkennen, dass die meisten Stream-Ciphers keine Authentizität bieten, sondern Privatsphäre: verschlüsselte Nachrichten können noch im Transit geändert worden. Kurzfristen für Stromkreise waren praktisch bedenklich. So können beispielsweise 64-Bit-Block-Ciphers wie DES zur Erzeugung eines Keystreams im Ausgangs-Feedback (OFB)-Modus verwendet werden. Bei nicht vollständiger Rückmeldung hat der resultierende Strom im Durchschnitt etwa 232 Blöcke; bei vielen Anwendungen ist der Zeitraum viel zu niedrig. Wird beispielsweise eine Verschlüsselung mit einer Rate von 8 Megabyte pro Sekunde durchgeführt, so wiederholt sich nach etwa einer halben Stunde ein Strom von 232 Blöcken. Einige Anwendungen, die die Stream-Cipher RC4 verwenden, sind aufgrund von Schwächen in der RC4-Schlüssel-Setup-Routine angreifbar; neue Anwendungen sollten entweder RC4 vermeiden oder sicherstellen, dass alle Schlüssel einzigartig und ideal unbezogen sind (wie sie durch eine gut besuchte CSPRNG oder eine kryptografische Hash-Funktion erzeugt werden) und dass die ersten Bytes des Keystreams verworfen werden. Die Elemente der Stromverschraubungen sind oft viel einfacher zu verstehen als Blockverschraubungen und sind daher weniger wahrscheinlich, jede zufällige oder schädliche Schwächen zu verbergen. Die Verwendung von Stream-Chiffern wird oft für ihre Geschwindigkeit und Einfachheit der Implementierung in der Hardware verwendet, und in Anwendungen, in denen der Klartext in Mengen von unwissender Länge wie eine sichere drahtlose Verbindung kommt. Wenn bei dieser Art der Anwendung eine Block-Cipher (nicht in einem Stream-Cipher-Modus) verwendet werden sollte, müsste der Designer entweder Übertragungseffizienz oder Implementierungskomplexität wählen, da Block-Ciphers nicht direkt an Blöcken arbeiten, die kürzer sind als ihre Blockgröße. Wenn beispielsweise ein 128-Bit-Block-Cipher separate 32-Bit-Brechs von Klartext empfangen wurde, wären drei Viertel der übertragenen Daten paddings. Block-Ciphers müssen im Ciphertext-Stecker- oder Restblock-Terminierung Modus verwendet werden, um Padding zu vermeiden, während Stream-Ciphers dieses Problem beseitigen, indem es auf der kleinsten Einheit, die übertragen werden kann (in der Regel Bytes). Ein weiterer Vorteil der Stromverschlüsselung in der militärischen Kryptographie besteht darin, dass der Schlüsselstrom in einer separaten Box erzeugt werden kann, die strengen Sicherheitsmaßnahmen unterliegt und anderen Geräten wie einem Funkgerät zugeführt wird, die die XOR-Operation als Teil ihrer Funktion ausführen. Diese kann dann in weniger strengen Umgebungen ausgebildet und verwendet werden. ChaCha wird die am weitesten verbreitete Stream-Cipher in der Software; andere sind: RC4, A5/1, A5/2, Chameleon, FISH, Helix, ISAAC, MUGI, Panama, Phelix, Pike, Salsa20, SEAL, SOBER, SOBER-128 und WAKE. Vergleich Trivia United States National Security Agency Dokumente verwenden manchmal den Begriff Mähdrescher-Typ Algorithmen, die auf Algorithmen, die eine Funktion verwenden, um einen Pseudorandom-Nummerngenerator (PRNG) mit einem Klartext-Stream zu kombinieren. Siehe auch eSTREAM Linear-Feedback Schieberegister (LFSR)Nonlinear-feedback Schieberegister (NLFSR) Hinweise Referenzen Matt J. B. Robshaw, Stream Ciphers Technical Report TR-701, Version 2.0, RSA Laboratories, 1995 (PDF). Beth, Thomas; Piper, Fred (1985). Der Stop and Go Generator (PDF.) EUROCRYPT '84.S.88–92.doi:10.1007/3-540-39757-4_9.Christof Paar, Jan Pelzl, "Stream Ciphers", Kapitel 2 von "Understanding Cryptography, A Textbook for Students and Practitioners".(Firmenwebsite enthält Online-Kryptographie-Kurs, der Stream-Ciphers und LFSR,) Springer, 2009. Externe Links Analyse von Leichten Stromkreisen (Thesis von S. Fischer.)