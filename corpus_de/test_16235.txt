Web Kit ist ein Browser, der von Apple entwickelt wurde und in erster Linie in seinem Browser Safari und allen Browsern von iOS verwendet wird. WebKit wird auch von dem iPhone Browser, den Konsolen ab dem PS3, den Tizen-Mobilfunksystemen und einem Browser verwendet, der mit dem Amazon-E-Book-Reader enthalten ist. WebKits C+ Anwendungsplanungsschnittstelle (API) bietet eine Reihe von Klassen, um Webinhalte in Fenstern anzuzeigen und Browserfunktionen wie folgende Links umzusetzen, wenn sie vom Nutzer klicken, eine rückständige Liste verwalten und eine Geschichte der vor kurzem besuchten Seiten verwalten. WebKits Nickel- und JavaScript-Motor begann mit der KHTML und KJS-Bibliotheken aus KDE und wurde seitdem von KDE-Beiträgen, Apple, Google, Nokia, Bitstream, iPhone, Sony, Igalia und anderen entwickelt. WebKit unterstützt macOS, Windows, Linux und verschiedene andere IT-ähnliche Betriebssysteme. April 2013 kündigte Google an, dass es Webkit, ein Bestandteil des Webkits, für künftige Versionen von Google Chrome und dem Opera-Web-Browser unter dem Namen Blink, benötigte. WebKit ist unter der BSD 2-Clause-Lizenz erhältlich, mit Ausnahme der Komponenten WebCore und JavaScriptCore, die im Rahmen der kleineren General Public-Lizenz zur Verfügung stehen. WebKit ist ab März 2013 eine Marke von Apple, die mit dem US-Patent- und Markenamt eingetragen ist. Herkunft Der Code, der WebKit wird, begann 1998 als KDE-Automat (KHTML) und KDE JavaScript (KJS) Motor. Das WebKit-Projekt wurde im Juni 2001 in Apple von Don Melton als Gabeldorsch und KJS gestartet. Melton erläuterte in einer E-Mail an KDE Entwickler, dass KHTML und KJS die Entwicklung einfacher als andere verfügbare Technologien ermöglichen, weil sie klein sind (Regelung über 140.000 Code-Linien), sauber konzipiert und Normenkonform sind. KHTML und KJS wurden mit Hilfe einer Adapterbibliothek in Betrieb genommen und in Webcore und JavaScript Core.JavaScript umbenannt. Kern wurde im Juni 2002 in einer E-Mail an eine KDE-Mail-Liste angekündigt, neben der ersten Veröffentlichung der Änderungen von Apple. Laut Apple wurden einige Änderungen an OS X-spezifischen Merkmalen (z.B. Ziel-C, KWQ, OS X-Anrufe) vorgenommen, die in KDEs KHTML fehlen, die verschiedene Entwicklungstaktiken gefordert haben. Split-Entwicklung Der Austausch von Code zwischen Webcore und KHTML wurde immer schwieriger, da die Codebasis voneinander abweicht, weil beide Projekte unterschiedliche Ansätze in der Kodierung und Codesharing hatten. KHTML-Entwickler erklärten, dass sie die Änderungen von Apple nicht akzeptieren und die Beziehung zwischen den beiden Gruppen als "bitter-Versagen" bezeichneten. Apple hat seine Änderungen in großen Pfändern mit sehr vielen Änderungen mit unzureichender Dokumentation vorgelegt, oft mit zukünftigen Ergänzungen. Diese Pflaster waren daher für die KDE-Entwickler schwierig, wieder in KHTML zu integrieren. Apple hatte auch gefordert, dass Entwickler nicht wahllos Vereinbarungen unterzeichnen, bevor sie auf den Apple-Quellencode schauen und selbst dann nicht in der Lage waren, die Apple-Problemdatenbank zu nutzen. KDE-Entwickler Kurt Pfeifle (pipitapitas) stellte während der öffentlichen Scheidung einen Artikel vor, der KHTML Entwickler behauptete, viele (aber nicht alle) Safari-Verbesserungen von Webcore bis KHTML zu unterstützen, und sie würdigten immer die Verbesserungen von Apple und noch. Apple hat auch mit KHTML Entwicklern Kontakt aufgenommen, um zu erörtern, wie die gegenseitige Beziehung und die Möglichkeiten der künftigen Zusammenarbeit verbessert werden können. Konkret konnte das KDE-Projekt einige dieser Änderungen in die Lage versetzen, die KHTML-Rückgang zu verbessern und die Eigenschaften zu erhöhen, einschließlich der Einhaltung des Säure2-Frühprobentests. Apple hat nach der Geschichte des Auftritts in der Zeitung Änderungen des Quelle-Codes von WebKit fürk in einem öffentlich-rechtlichen Revisionsspeicher veröffentlicht. Das WebKit-Team hatte auch viele Apple-spezifische Veränderungen im ursprünglichen WebKit-Code-Basis umkehren und die plattformspezifischen abstrakten Schichten umgesetzt, um den Kernkörpercode auf andere Plattformen deutlich einfacher zu machen. Ars Technica berichtete im Juli 2007, dass das KDE-Team von KHTML auf WebKit verschieben würde. KDE Development Platform Version 4.5.0 wurde im August 2010 mit Unterstützung sowohl für WebKit als auch für KHTML freigegeben und die Entwicklung von KHTML fortgesetzt. Open-Source am 7. Juni 2005 kündigte der Safari-Hersteller Dave Hyatt an, dass Apple Open-Source-Webkit (vormals nur Webcore und JavaScriptcore Open-Source) war und den Zugang zu WebKits Revisions-Kontrollbaum und Emittenten öffnete. Mitte Dezember 2005 wurde die Unterstützung für skalierbare Vector Grafik (SVG) in den Standardbau zusammengefasst. WebKits JavaScriptcore und Webcore-Komponenten stehen im Rahmen der kleineren General Public-Lizenz zur Verfügung, während der Rest des WebKit unter der Lizenz BSD 2Clause verfügbar ist. Anfang 2007 begann das Entwicklungsteam mit der Umsetzung der Verlängerungen der Kascading-Formate (CSS), einschließlich Animation, Übergänge und 2D- und 3D-Umwandlungen; solche Verlängerungen wurden im Jahr 2009 als Arbeitsentwürfe zum World Wide Web Consortium (W3C) veröffentlicht. Im November 2007 kündigte das Projekt an, dass es für die Medienmerkmale des Entwurfs für eine Spezifikation des Entwurfs „Google5“ eine zusätzliche Unterstützung gab, die ein eingebettetes Video in WebKit auf einheimischer Basis ermöglicht. Juni 2008 kündigte das WebKit-Projekt an, dass es sich um eine Umwrackung von JavaScriptcore als SquirrelFish handelt, einem Bytecode Interpretationer. Das Projekt entwickelte sich in SquirrelFish Extreme (abbreviated SFX), das am 18. September 2008 angekündigt wurde, mit dem JavaScript in den heimischen Maschinencode zusammenbringt, um die Notwendigkeit eines Bytecode Dolmetschers zu beseitigen und damit die Ausführung von JavaScript zu beschleunigen. Anfangs war die einzige unterstützte Prozessorarchitektur für SFX die x86, aber Ende Januar 2009 wurde SFX für OS X auf x86-64 ermöglicht, da es alle Tests auf dieser Plattform gibt. WebKit2 On April 2010 wurde ein Projekt namens WebKit2 angekündigt, um WebKit neu zu gestalten. Ihr Ziel war es, die Komponenten, die die Webkörper sauber von ihrer umgebenden Schnittstelle oder Anwendungshülle liefern, zu entschlüsseln und eine Situation zu schaffen, in der "webinhalte (Javadex, Nickel, Gestaltung usw.) in einem separaten Prozess von der Anwendung UI leben. Diese abstrakte Maßnahme soll eine einfachere Nutzung von WebKit2 als WebKit ermöglichen. WebKit2 hatte "ein nicht kompatibler API-Änderung vom ursprünglichen WebKit, der seinen Namen veränderte. Die WebKit2-Ziele wurden für Linux, MacOS, Windows, GTK und MeeGo-Harmattan festgelegt. Safari für OS X wurde mit Version 5.1 in die neue API umgewandelt. Hopfen für iOS nach WebKit2 seit iOS 8. WebKit API wurde in WebKitLegacy API umbenannt. WebKit2 API wurde gerade in die einfache WebKit API umgewandelt. Webkit wird als Motoren für die Verwertung innerhalb von Safari verwendet und wurde früher von Googles Chrome Webbrowser auf Windows, Offline und Android (vor Version 4.4 KitKat) genutzt. Chrome nutzte nur Webcore und umfasste seinen eigenen Browser namens V8 und ein Multiprozess-System. Google für iOS wird weiterhin WebKit verwenden, weil Apple verpflichtet, Web-Browser auf dieser Plattform durchzuführen. Andere Anwendungen auf macOS und iOS nutzen WebKit, wie Apples E-Mail-Kunden Mail, App Store und die Version des Entourage-Personal-Informationsmanagers von Microsoft 2008, von denen beide WebKit nutzen, um Inhalte von Google zu machen. installierte Basis-Neu-Web-Browser wurden im WebKit wie der S60-Browser auf Symbian-Mobiltelefonen, Android-Browser (verg. Midori, Chrome-Browser, Android-Web-Browser vor Version 4.4 KitKat und der Browser, der in der Version 4.10. KDEs Rekonq Web-Browser und Plasmazahns verwenden es auch als heimischer Web-Design-Motor. WebKit wurde als Motor für die Endlagerung in OmniWeb, iCab und Web (vormals benannt Epiphany) und Sleipnir angenommen und ersetzt ihre Originalkörpermotoren. GNOMEs Web unterstützt seit einiger Zeit sowohl Gecko als auch WebKit, aber das Team entschied, dass Geckos Freisetzungszyklus und künftige Entwicklungspläne es zu schwerfällig machen, ihn weiter zu unterstützen. WebOS nutzt WebKit als Grundlage seiner Bewerbungszeit. Die neueste Interface-Aktualisierung für den Dampf von Ventilen bietet WebKit an, um seine Schnittstelle und ihren eingebauten Browser zu gestalten. WebKit wird verwendet, um das Programm für die integrierte Runtime-Anwendungsplattform von Adobe zu gestalten. In Adobe Kreativ Suite CS5 wird WebKit verwendet, um einige Teile der Benutzeroberfläche zu machen. In der ersten Hälfte des Jahres 2010 schätzte ein Analyst die kumulative Zahl der mobilen Handsets mit einem WebKit-basierten Browser auf 350 Millionen. Mitte April 2015 betrug der Marktanteil von WebKit 50,3 % Ports Nokia kündigte in der Woche nach der Ankündigung des Open-Source-Programms an, dass es an das Symbian-Betriebssystem geflohen habe und einen Browser entwickelt habe, der auf WebKit für Mobiltelefone mit S60 basiert. Named Web Browser für S60, wurde auf Nokia, Samsung, LG und anderen Symbian S60 Mobiltelefonen verwendet. Apple hat auch auf dem iPhone, dem iPhone, dem iPhone, dem iPhone Touch und dem iPad auf dem Web-Browser und der E-Mail-Software des Gerätes auf Windows übertragen. Die Android-Mobilfunkplattform nutzt WebKit (und später seine Blink fork) als Grundlage ihres Webbrowsers und der Palm Pre, kündigte Januar 2009 eine Schnittstelle an, die auf WebKit basiert. Amazon iPhone 3 enthält einen experimentellen WebKit-basierten Browser. Apple kündigte im Juni 2007 an, dass WebKit im Rahmen von Safari an Microsoft Windows gehafent wurde. Safari für Windows wurde zwar von dem Unternehmen stillgelegt, doch die Häfen von Webkit an Microsofts Betriebssystem werden weiterhin aktiv gepflegt. Der Windows-Hafen nutzt Apples proprietäre Bibliotheken zur Funktion und wird für Unterhaltungselektronik und iTunes für Windows verwendet, während der WinCairo-Port ein vollständig offener und roter Hafen ist. WebKit wurde auch an mehrere Werkzeugkits weitergeleitet, die mehrere Plattformen unterstützen, wie das GTK-Toolkit für Linux, unter dem Namen WebKitGTK, das von GNOME Web, Adobe Integrated Runtime, Enlightenment Foundation Bibliotheken (EFL) und dem Clutter Toolkit. Qt Software umfasste einen Web-Kit-Port in der Qt 4.4- Freisetzung als Modul namens QtWebKit (seit dem Qt Web-Engine, der Blink anstelle nutzt). The Iris Browser on Qt verwendet auch Webkit. Hafen der Enlightenment Foundation Bibliotheken (EFL) – EWeb Kit – wurde (von Samsung und ProFusion) entwickelt, die sich auf die eingebetteten und mobilen Systeme konzentrieren, um als eigenständiger Browser, Notebooks-gadgets, reichhaltiger Textvortrager und Komponisten zu verwenden. Der Cl-Hafen wird von Collabora entwickelt und von Robert Bosch GmbH gefördert. Es gab auch ein Projekt, das mit WebKit (unterstützt von Pleyo) namens Origyn Web Browser, das einen Meta-Port zu einer abstrakten Plattform bietet, um den Hafen auf eingebettete oder leichte Systeme schneller und einfacher zu gestalten. Dieser Hafen wird für eingebettete Geräte wie Set-Top-Boxen, PMP und es wurde in das DigitalOS, AROS und MorphOS aufgenommen. MorphOS Version 1.7 ist die erste Version von Origyn Web-Browser (OWB) zur Unterstützung von Computeretiketten für Computer. Web Platform for Embedded Web Platform for Embedded (WPE) ist ein WebKit-Port, der für eingebettete Anwendungen konzipiert ist; es verbessert die Architektur, indem die funktionalen Grundkörperblöcke in eine allgemeine Routinebibliothek (libwpe), Plattformstützends und Motor selbst aufgeteilt werden. Der GTK-Hafen kann, wenn auch selbsttragend, gebaut werden, um diese Basisbibliotheken anstelle ihrer internen Plattform-Unterstützung zu nutzen. Derzeit wird der WPE-Port von Igalia gehalten. Google kündigte am 3. April 2013 an, dass es einen für die Webcore-Komponente von Webkit produzieren würde, der als Blink bezeichnet wird. Chromes Entwickler beschlossen auf den Gabeldorsch, mehr Freiheit bei der Umsetzung von Webcore-Funktionen im Browser zu gewähren, ohne Konflikte vorgelagert zu verursachen, und ihre Codebasis zu vereinfachen, indem der Code für Webcore-Komponenten, die von Chrome nicht genutzt werden, aufgehoben wird. In Bezug auf die früher im Jahr angekündigte Ankündigung von Opera Software, dass sie mit Hilfe des Chromium-Codes auf WebKit umschalten würde, wurde bestätigt, dass der Opera-Web-Browser auch auf Blink wechseln würde. Nach der Ankündigung begannen WebKit-Entwickler mit Gesprächen über die Entfernung von Chrome-spezifischem Code vom Motor zur Rationalisierung seiner Codebasis. WebKit verfügt nicht mehr über einen bestimmten Chrome-Code (z.B. Bausystem,V8Javadex Motor-Schüler, Plattformcode usw.). Komponenten Webcore Webcore ist eine durch das WebKit-Projekt entwickelte Bibliothek, die das Webkit-Projekt entwickelt hat, und das Dokument Object Modell (DOM) für die Graphik und die Vector-Architektur (SVG). Ihr vollständiger Quellecode ist im Rahmen der kleineren Generalstaatslizenz (LGPL) lizenziert. Das WebKit-Rahmenwerk stellt Webcore und JavaScriptCore fest, bietet eine Ziel-C-Anwendungsschnittstelle an die C++-basierte Web-Chip-Maschine und die Browser-C-Chip-., die es ermöglichen, leicht durch Anwendungen auf der Grundlage der Kakao- API zu Referenz zu setzen; spätere Versionen umfassen auch eine plattformübergreifende C+-Plattform-Erkennung und verschiedene Häfen. WebKit führt die Säure2 und Säure3-Tests mit Pixel-Lage und keine zeitlichen oder reibungslosen Fragen auf Referenz-Hardware. Kambodscha Kern Kambodscha Kern ist ein Rahmen, der für die Umsetzung von WebKit eine Browser-Triebwerksmaschine liefert und diese Art von Drehbuchierung in anderen Kontexten im Rahmen von macOS.JavaScript Kern wird ursprünglich aus der KDE-Triebwerksbibliothek (KJS) (die Teil des KDE-Projekts ist) und der PCRE-Regelungsbibliothek abgeleitet. KJS und PCRE, JavaScript Kern wurde mit vielen neuen Merkmalen verbessert und die Leistung erheblich verbessert. Juni 2008 kündigte das WebKit-Projekt an, dass es sich um eine Umwrackung von JavaScriptcore als SquirrelFish handelt, einem Bytecode Interpretationer. Das Projekt entwickelte sich in SquirrelFish Extreme (abbreviated SFX, vermarktet als Nitro), kündigte am 18. September 2008 eine weitere Beschleunigung der Ausführung von JavaScript an. Am 13. Mai 2014 wurde eine Optimierung von FTL (JIT) bekanntgegeben. Sie nutzt LLVM, um optimierte Maschinencodes zu erstellen." FTL steht für Vierte-Tier-LLVM und inoffiziell für schnelleres Licht, das alle auf seine Geschwindigkeit drängen. Februar 2016 wird der Rückstand von FTL JIT durch "Bare Knochen Backend" (oder B3 für kurze) ersetzt. Siehe auch Vergleich der Browser-Liste von WebKit-basierten Browser-Referenzen Externe Links offizielle Webseite für WebKitGTK SunSpider 1.0 JavaScript Benchmark