In der Computerprogrammierung ist ein Software-Rahmen eine abstrakte Entwicklung, bei der Software zur Bereitstellung generischer Funktionalitäten selektiv durch den zusätzlichen anwenderspezifischen Code geändert werden kann, so dass eine anwendungsspezifische Software zur Verfügung steht. Es bietet einen Standard-Ansatz für den Bau und den Einsatz von Anwendungen und ist ein universelles, wiederverwendbares Softwareumfeld, das im Rahmen einer größeren Softwareplattform besondere Funktionalität bietet, um die Entwicklung von Softwareanwendungen, Produkten und Lösungen zu erleichtern. Software-Rahmen können Unterstützungsprogramme, Zusammenstellungen, Code-Bibliotheken, Toolsets und Anwendungsschnittstellen (APIs) umfassen, die alle verschiedenen Komponenten zusammenbringen, um die Entwicklung eines Projekts oder eines Systems zu ermöglichen. Rahmenbedingungen haben wichtige Unterscheidungsmerkmale, die sie von normalen Bibliotheken getrennt haben: Konversion der Kontrolle: In einem Rahmen, anders als in Bibliotheken oder in Standardanwendungen, wird der Kontrollfluss des Gesamtprogramms vom Anrufer nicht bestimmt, sondern durch den Rahmen. In der Regel wird dies mit der Mustermethode erreicht. Standardverhalten: In einer abstrakten Klasse, die durch den Rahmen bereitgestellt wird, kann dies mit den unterschiedlichsten Methoden der Mustermethode in Verbindung gebracht werden. Extensibility: Ein Nutzer kann den Rahmen – in der Regel durch selektive übergeordnete – erweitern, oder die Programmer können spezielle Benutzercodes hinzufügen, um spezifische Funktionalitäten bereitzustellen. In der Regel wird dies durch eine Hakenmethode in einer Unterklasse erreicht, die eine Mustermethode in der Superklasse überschreitet. nichtmodifiable Rahmencode: Im Allgemeinen soll der Rahmencode nicht geändert werden, während er anwenderimplementierte Erweiterungen akzeptiert. Mit anderen Worten können die Nutzer den Rahmen verlängern, können aber ihren Code nicht ändern. Rationale Die Designer von Software-Rahmens zielen darauf ab, die Entwicklung von Software zu erleichtern, indem sie den Designern und Programmierern die Möglichkeit geben, ihre Zeit für die Erfüllung von Softwareanforderungen zu verwenden, anstatt sich mit den Standardangaben auf niedrigem Niveau zu befassen, die ein Arbeitssystem bieten und damit die gesamte Entwicklungszeit verringern. Ein Team, das beispielsweise einen Web-Rahmen zur Entwicklung einer Bank-Website nutzt, kann sich auf den Schreibcode konzentrieren, vor allem auf das Bankwesen und nicht auf die Mechanismen der Anfragebearbeitung und des staatlichen Managements. Rahmen hinzufügen oft die Größe der Programme, ein Phänomen, das "Code bloat". Je nach Bedarf müssen sowohl konkurrierende als auch ergänzende Rahmenbedingungen manchmal in einem Produkt enden. Infolge der Komplexität ihrer APIs kann die vorgesehene Verringerung der Gesamtentwicklungszeit nicht erreicht werden, weil zusätzliche Zeit für die Nutzung des Rahmens erforderlich ist; diese Kritik ist eindeutig gültig, wenn ein spezieller oder neuer Rahmen zunächst von Entwicklungspersonal angetroffen wird. Wenn ein solcher Rahmen nicht in späteren Job-Aufgaben verwendet wird, kann die Zeit, die in das Lernen investiert wird, mehr kosten als der zweckmäßige Code, der dem Personal des Projekts vertraut ist; viele Programmer halten Kopien nützlicher Kesselbleche für gemeinsame Bedürfnisse. Künftig können jedoch künftige Projekte schneller und einfacher abgeschlossen werden; das Konzept eines Rahmens besteht darin, eine einheitliche Lösung zu schaffen und mit der Vertrautheit die Code-Produktion logisch zu erhöhen. Es gibt keine solchen Angaben über die Größe des Codes, der schließlich mit dem Outputprodukt zusammengelegt wird, sowie seine relative Effizienz und Präzision. Nutzung jeder Bibliothekslösung zieht zwangsläufig zusätzliche und ungenutzte zusätzliche Vermögenswerte an, es sei denn, die Software ist ein Pool-Ziel-Linker, der ein straffes (kleines, vollständig kontrolliertes und spezifiziertes) exekutierbares Modul darstellt. Das Problem wird fortgesetzt, aber ein Jahrzehnt-plus der Industrieerfahrung hat gezeigt, dass die wirksamsten Rahmenbedingungen diejenigen sind, die sich aus der Wiederbelebung des gemeinsamen Unternehmenscodes entwickeln, anstatt einen von Dritten für allgemeine Zwecke entwickelten generischen, einheitlichen Rahmen zu verwenden. Ein Beispiel dafür wäre, wie die Benutzeroberfläche in einem solchen Antragspaket als Büroraum immer größer werden könnte, dass sie gemeinsame Sicht haben, sich fühlen und Datenteilungsmerkmale und Methoden verwenden, da die einmaligen, gebündelten Anwendungen in eine große Zahl vereinheitlicht werden, die straffer und kleiner ist; die neuere/evolvierte Reihe kann ein Produkt sein, das integrale Gebrauchsbibliotheken und Benutzerschnittstellen teilt. Dieser Trend in der Kontroverse bringt eine wichtige Frage zu Rahmenbedingungen. Schaffung eines Rahmens, der elegant, gegenüber einem, der nur ein Problem lösen kann, ist immer noch eher ein Handwerk als eine Wissenschaft." Software-Diagnose bedeutet Klarheit, Präzision und wenig Abfall (extra oder extraneous Funktionalität, von denen viele Benutzer bestimmt sind). In diesen Rahmenbedingungen, die zum Beispiel einen Code erzeugen, würde die Eleganz die Schaffung von Codes beinhalten, die sauber und verständlich für einen vernünftigen, sachkundigen Programmanbieter (und die daher leicht modulierbar ist) sind, gegenüber einem, der nur einen korrekten Code generiert. Laut dem Thema „Konstruktion“ haben relativ wenige Software-Rahmens den Test der Zeit gemacht: Die besten Rahmenbedingungen konnten sich ungerechtfertigt entwickeln, da die zugrunde liegende Technologie, auf die sie gebaut wurden, entwickelt wurde. Selbst wenn es sich weiterentwickelt hat, werden viele solche Pakete die Altfähigkeiten behalten, die die Endsoftware gestreckt haben, da ansonsten Ersatzmethoden parallel zu den neuen Methoden beibehalten wurden. Beispiele Software-Rahmen enthalten in der Regel einen erheblichen Verwaltungs- und Gebrauchscode, um Sportleranwendungen zu helfen, aber in der Regel auf bestimmte Problembereiche wie Künstler, Musikzusammensetzung und mechanische CAD-Finanzmodellierung Anwendungen Earth System zur Modellierung von Anwendungen Entscheidung zur Unterstützung von Systemen Media Wiedergabe und Genehmigung des Web Framework Middleware Cactus Framework - High Performance Scientific Computing. Anwendungsrahmen - Allgemeine GUI-Anwendungen. Rahmen für Unternehmensarchitektur Oracle Anwendung Entwicklung Framework Laravel ( PHP Framework ) Architektur Laut Pree bestehen die Software-Rahmens aus gefrorenen Spots und Hotspots. gefrorene Spots definieren die Gesamtarchitektur eines Softwaresystems, d. h. seine grundlegenden Komponenten und die Beziehungen zwischen ihnen. Diese bleiben unverändert (gefroren) bei jeder sofortigen Umsetzung des Antragsrahmens. Hot Spots stellen diese Teile dar, in denen die Programmteilnehmer, die den Rahmen verwenden, ihren eigenen Code hinzufügen, um die Funktionalität in ihrem eigenen Projekt hinzuzufügen. In einem objektorientierten Umfeld besteht ein Rahmen aus abstrakten und konkreten Klassen. Liquidation eines solchen Rahmens besteht aus der Ausgleich und Unterklasse der bestehenden Klassen. Die erforderliche Funktionalität kann mithilfe der Mustermethode angewandt werden, in der die gefrorenen Spots als uneinheitliche Methoden bekannt sind und die Hotspots als Variante oder Hakenmethoden bekannt sind. Die uneinheitlichen Methoden in der Superklasse bieten Standardverhalten, während die Hakenmethoden in jeder Unterklasse individuelles Verhalten darstellen. Entwicklung eines konkreten Software-Systems mit einem Software-Rahmen nutzen Entwickler die Hotspots entsprechend den spezifischen Bedürfnissen und Anforderungen des Systems. Software-Rahmen stützen sich auf das Hollywood-Prinzip: "Ich rufe uns, wir rufen Sie auf". Dies bedeutet, dass die von Nutzern definierten Klassen (z.B. neue Unterklassen) Nachrichten aus den vorab festgelegten Rahmenklassen erhalten. Entwickler verwenden dies in der Regel durch die Einführung von Superklasse abstrakten Methoden. Siehe auch Klasse (Computer Science)Design (Computer Science)Don's nicht wiederholen Sie sich selbst Implikit invocation Software Motor Referenzen = Robert E. Bob Shore-Gos ist ein Autor und Autor. Goss wurde 1976 in einer zerbrechlichen römischen katholischen Familie eingebracht und als Vaterschaft bezeichnet. 1978 verließ er die Jesuiten, um eine Th.D in der vergleichenden Religion von der Harvard University zu erhalten. Goss unterrichtete in der Abteilung Religionsstudien der Webster University (1994-2002) und diente als Vorsitzender der Abteilung. Seine Verweigerung von Tenure durch die Universität war umstritten mit Vorwürfen von Goss, dass dies auf ihre unausgewogenen Ansichten zur Sexualität zurückzuführen war. Webster Pride, die Studentenorganisation für gay, Lesben, Bisexuelle und Transgenderrechte, hat keine offizielle Haltung eingenommen. Webster Prides Präsident wurde in der Studentenpresse als nicht gegen die Entscheidung zitiert, weil sie nicht der Ansicht ist, dass die Entscheidung nichts mit Homophobie tun muss. Er war in gay Organisationen wie ACT UP, Queer Nation und der Roman der römischen katholischen Gruppe DignityUSA tätig. Goss hat als Ko-Vorsitzender der Themen von Gay Men in der Religionsgruppe der American Academy of Religion diente. Er bedient den Nationalen Beirat des Zentrums für Lesben- und Gay-Studien in Religion und dem Ministerium der pazifischen Religion. Im Jahr 2009 war er verheiratet. Arbeiten Seine veröffentlichten Werke umfassen: Jesus ACTED UP: A Gay and Lesben 1993, San Francisco, CA:HarperCollins Nehmen Sie das Wort zurück: Eine Queer-Lese der Bibel 2000 (mit West, Mona), Cleveland, OH: Wallström Presse Queering Christ: Über Jesus ACTED UP 2002, Cleveland, OH:Pilgrim Presse-Güter der katholischen Geißel und Kleus-Sexon: Aufbrechen des Schweigens von Sodom 2005 (mit Boisvert, Donald), New York, NY:Haworth Press The Queer-Burie Kommentarary 2006 (ko-edited with Bohache, Thomas Gastyn, Deryn, London) Christentum: Suche nach einem Ort in der Tabelle für LGBTQI- Christen 2013 (Mit Bohache, Thomas; Cheng, Patrick S; West, Mona), Santa Barbara, CA: ABC-CLIOShore-Gos ist derzeit ein Adjunct-Professor an der Claremont School of Theology. Links Bio von Rev Dr Goss auf der Webseite von MCC im Valley - die Kirche, die er frühererbt