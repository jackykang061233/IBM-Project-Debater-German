Bei der Kryptographie ist eine Schlüsselableitungsfunktion (KDF) eine kryptographische Hashfunktion, die einen oder mehrere geheime Schlüssel aus einem geheimen Wert wie einem Hauptschlüssel, einem Passwort oder einer Passphrase mit einer Pseudorandom-Funktion ableitet. KDFs können verwendet werden, um Schlüssel in längere Schlüssel zu dehnen oder Schlüssel eines gewünschten Formats zu erhalten, z.B. ein Gruppenelement, das das Ergebnis eines Diffie-Hellman-Schlüsselaustauschs ist, in einen symmetrischen Schlüssel für den Einsatz mit AES umzuwandeln. Keyed kryptographische Hash-Funktionen sind beliebte Beispiele für Pseudorandom-Funktionen, die für die Schlüsselableitung verwendet werden. Schlüsselableitung Die ursprüngliche Verwendung für eine KDF ist die Schlüsselableitung, die Generierung von Schlüsseln aus geheimen Passwörtern oder Passphrasen. Variationen zu diesem Thema umfassen: In Verbindung mit nicht geheimen Parametern, um einen oder mehrere Schlüssel aus einem gemeinsamen geheimen Wert abzuleiten (die manchmal auch als "Schlüsseldiversifizierung" bezeichnet wird). Eine solche Verwendung kann verhindern, dass ein Angreifer, der einen abgeleiteten Schlüssel erhält, nützliche Informationen über den eingegebenen geheimen Wert oder einen der anderen abgeleiteten Schlüssel erlernt. Ein KDF kann auch verwendet werden, um sicherzustellen, dass abgeleitete Schlüssel andere wünschenswerte Eigenschaften haben, wie die Vermeidung von "schwachen Schlüsseln" in einigen bestimmten Verschlüsselungssystemen. Als Komponenten von Multiparty-Schlüsselvereinbarungsprotokollen. Beispiele für solche Schlüsselableitungsfunktionen sind KDF1, definiert in IEEE Std 1363-2000 und ähnliche Funktionen in ANSI X9.42. Um Schlüssel aus geheimen Passwörtern oder Passphrasen abzuleiten (ein passwortbasiertes KDF). Um Schlüssel unterschiedlicher Länge von den bereitgestellten abzuleiten: Ein Beispiel von KDFs dafür ist HKDF. Schlüsselverbreiterung und Schlüsselverfestigung. Key Stretching und Schlüsselverstärkung Die Schlüsselableitungsfunktionen werden auch in Anwendungen verwendet, um Schlüssel aus geheimen Passwörtern oder Passphrasen abzuleiten, die typischerweise nicht die gewünschten Eigenschaften haben, die direkt als kryptographische Schlüssel verwendet werden. In solchen Anwendungen wird allgemein empfohlen, dass die Schlüsselableitungsfunktion bewusst langsam ausgeführt wird, um brute-force-Angriff oder Wörterbuch-Angriff auf das Passwort oder Passphrase-Eingabewert zu frustrieren. Diese Verwendung kann als DK = KDF(Schlüssel, Salz, Iterationen) ausgedrückt werden, wobei DK der abgeleitete Schlüssel ist, KDF die Schlüsselableitungsfunktion ist, Schlüssel der ursprüngliche Schlüssel oder das Passwort ist, Salz eine zufällige Zahl, die als kryptographisches Salz wirkt, und Iterationen bezieht sich auf die Anzahl der Iterationen einer Subfunktion. Der abgeleitete Schlüssel wird anstelle des ursprünglichen Schlüssels oder Passworts als Schlüssel zum System verwendet. Die Werte des Salzes und die Anzahl der Iterationen (wenn es nicht fixiert ist) werden mit dem Hashed-Passwort gespeichert oder als Klartext (unverschlüsselt) mit einer verschlüsselten Nachricht gesendet. Die Schwierigkeit eines brutalen Kraftangriffs wird mit der Anzahl der Iterationen erhöht. Eine praktische Begrenzung der Iterationszahl ist die Unwille der Benutzer, eine spürbare Verzögerung beim Einloggen in einen Computer zu tolerieren oder eine entschlüsselte Nachricht zu sehen. Die Verwendung von Salz verhindert, dass die Angreifer ein Wörterbuch abgeleiteter Schlüssel precomputieren. Ein alternativer Ansatz, genannt Schlüsselverfestigung, erweitert den Schlüssel mit einem zufälligen Salz, aber dann (im Gegensatz zu Schlüsselverstreckung) sicher löscht das Salz. Dies zwingt sowohl den Angreifer als auch die legitimen Nutzer, eine brutale Kraftsuche nach dem Salzwert durchzuführen. Obwohl das Papier, das die Schlüsselverstreckung auf diese frühere Technik bezieht und bewusst einen anderen Namen gewählt hat, wird der Begriff "Schlüsselverstärkung" jetzt oft (wahrscheinlich falsch) verwendet, um sich auf die Schlüsselverstreckung zu beziehen. Passwort Hashing Trotz ihrer ursprünglichen Verwendung für die Schlüsselableitung sind KDFs möglicherweise besser bekannt für ihre Verwendung in Passwort Hashing (Passwortverifikation durch Hash-Vergleich), wie von der passwd-Datei oder Schatten-Passwort-Datei verwendet. Passwort Hash-Funktionen sollten relativ teuer sein, um bei Brute-Kraft-Angriffen zu berechnen, und die Schlüsselstreckung von KDFs passieren, um diese Eigenschaft zu bieten. Die nicht geheimen Parameter werden dabei als Salz bezeichnet. Im Jahr 2013 wurde ein Password Hashing-Wettbewerb angekündigt, einen neuen Standardalgorithmus für Passwort Hashing zu wählen. Am 20. Juli 2015 endete der Wettbewerb und Argon2 wurde als Endsieger bekannt gegeben. Vier weitere Algorithmen erhielten besondere Anerkennung: Catena, Lyra2, Makwa und jacrypt. Geschichte Die erste bewusst langsame (Schlüsseldehnung) passwortbasierte Schlüsselableitungsfunktion wurde als Krypt (oder crypt(3) nach seiner Mann-Seite) bezeichnet und wurde 1978 von Robert Morris erfunden. Es würde eine Konstante (Null) mit den ersten 8 Zeichen des Passworts des Benutzers als Schlüssel verschlüsseln, indem 25 Iterationen eines modifizierten DES-Verschlüsselungsalgorithmus durchgeführt werden (in dem eine aus der Echtzeit-Computeruhr gelesene 12-Bit-Nummer verwendet wird, um die Berechnungen zu stören.)Die resultierende 64-Bit-Nummer wird als 11 bedruckbare Zeichen kodiert und dann in der Unix-Passwortdatei gespeichert. Während es zu der Zeit ein großer Fortschritt war, erhöht die Prozessorgeschwindigkeiten, da die PDP-11-Ära brute-force Angriffe gegen Krypta möglich gemacht haben, und Fortschritte in der Lagerung haben das 12-Bit-Salz unzureichend gemacht. Das Design der Krypt-Funktion begrenzt auch das Benutzerkennwort auf 8 Zeichen, die den Schlüsselraum begrenzt und starke Passphrasen unmöglich macht. Obwohl ein hoher Durchsatz eine wünschenswerte Eigenschaft in den allgemeinen Hash-Funktionen ist, ist das Gegenteil bei den Passwort-Sicherheitsanwendungen, bei denen die Verteidigung gegen Brute-force-Cracking ein primäres Anliegen ist. Der zunehmende Einsatz massiv-paralleler Hardware wie GPUs, FPGAs und sogar ASICs für die Brute-force-Cracking hat die Auswahl geeigneter Algorithmen noch kritischer gemacht, weil der gute Algorithmus nicht nur eine bestimmte Menge an Rechenkosten nicht nur auf CPUs durchsetzen sollte, sondern auch den Kosten-/Leistungsvorteilen moderner massiv-paralleler Plattformen für solche Aufgaben widerstehen sollte. Verschiedene Algorithmen wurden speziell für diesen Zweck entwickelt, darunter Bcrypt, Scrypt und, vor kurzem, Lyra2 und Argon2 (die letztere ist der Gewinner des Password Hashing Wettbewerbs). Der groß angelegte Ashley Madison Datenbruch, bei dem rund 36 Millionen Passwörter von Angreifern gestohlen wurden, verdeutlichte die Bedeutung der Algorithmusauswahl bei der Sicherung von Passwörtern. Obwohl Bcrypt verwendet wurde, um die Hashes zu schützen (die Herstellung von großformatigen Brute-force-Cracking teuer und zeitraubend), enthielt ein wesentlicher Teil der Konten in den kompromittierten Daten auch ein Passwort Hash basierend auf dem schnellen allgemeinen MD5-Algorithmus, was es ermöglichte, dass über 11 Millionen der Passwörter in einer Angelegenheit von Wochen geknackt werden. Im Juni 2017 veröffentlichte das US National Institute of Standards and Technology (NIST) eine neue Überarbeitung ihrer digitalen Authentifizierungsrichtlinien, NIST SP 800-63B-3, in der besagt wird: "Verifiers SHALL speichern Erinnerungsgeheimnisse [d.h. Passwörter] in einer Form, die gegen Offline-Angriffe beständig ist. Erinnerungsgeheimnisse SHALL werden mit einer geeigneten Einweg-Schlüsselableitungsfunktion gesalzen und gehackt. Schlüsselableitungsfunktionen nehmen ein Passwort, ein Salz und einen Kostenfaktor als Eingaben erzeugen dann ein Passwort Hash. Ihr Ziel ist es, jedes Passwort-Erraten-Test durch einen Angreifer, der eine Passwort Hash-Datei erhalten hat teuer und daher die Kosten eines Erratenden Angriffs hoch oder verbietend." Moderne passwortbasierte Schlüsselableitungsfunktionen, wie PBKDF2 (in RFC 2898 angegeben), basieren auf einem erkannten kryptographischen Hash, wie SHA-2, verwenden mehr Salz (mindestens 64 Bit und gewählt zufällig) und einer hohen Iterationszahl. NIST empfiehlt eine Mindest Iterationszahl von 10.000. "Für besonders kritische Tasten oder für sehr leistungsfähige Systeme oder Systeme, bei denen die nutzerübernehmende Leistung nicht kritisch ist, kann eine Iterationszahl von 10.000.000 angemessen sein." Referenzen Weiter lesen Percival, Colin (Mai 2009)." Stärkere Schlüsselableitung über sequentielle Memory-Hard-Funktionen" (PDF). BSDCan'09 Präsentation. Erschienen am 19. Mai 2009. Schlüsselableitungsfunktionen Bei einem Nebenprodukt oder Nebenprodukt handelt es sich um ein Sekundärprodukt, das sich aus einem Herstellungsverfahren, einem Herstellungsverfahren oder einer chemischen Reaktion ableitet; es handelt sich nicht um das Primärprodukt oder die Dienstleistung. Ein Nebenprodukt kann nützlich und vermarktbar sein, oder es kann als Abfall betrachtet werden: z.B. Kleie, die ein Nebenprodukt der Weizenmahlung zu raffiniertem Mehl ist, wird manchmal zur Entsorgung kompostiert oder verbrannt, aber in anderen Fällen kann es als nahrhafter Bestandteil in menschlicher Nahrung oder Tierfutter verwendet werden. Benzin war einmal ein Nebenprodukt der Ölraffination, die später als Motorkraftstoff eine wünschenswerte Ware wurde. Der in Plastikeinkaufstaschen verwendete Kunststoff begann auch als Nebenprodukt der Ölraffination. In der WirtschaftIm Rahmen der Produktion ist ein Nebenprodukt der "Ausgang aus einem gemeinsamen Produktionsprozess, der im Vergleich zu den Hauptprodukten geringfügig in der Menge und/oder Netto-Realisierungswert (NRV) ist". Da sie keinen Einfluss auf die gemeldeten Finanzergebnisse haben, erhalten Nebenprodukte keine gemeinsamen Kosten. Auch Nebenprodukte werden durch Konvention nicht erfindet, aber der NRV von Nebenprodukten wird typischerweise als "sonstiges Einkommen" oder als Senkung der gemeinsamen Produktionskosten bei der Herstellung des Nebenprodukts anerkannt. Die Internationale Energieagentur (IEA) definiert Nebenprodukte im Rahmen der Lebenszyklusbeurteilung, indem vier verschiedene Produkttypen definiert werden: "Hauptprodukte, Nebenerzeugnisse (die ähnliche Einkünfte zum Hauptprodukt beinhalten), Nebenprodukte (die zu geringeren Einkünften führen) und Abfallprodukte (die wenig oder keine Einkünfte liefern)." In der Chemie Während einige Chemiker Nebenprodukt und Nebenprodukt als Synonyme im obigen Sinne eines generischen Sekundärproduktes behandeln, finden andere es nützlich, zwischen den beiden zu unterscheiden. Bei der Unterscheidung der beiden Begriffe bezieht sich das Nebenprodukt auf ein Produkt, das nicht erwünscht ist, aber zwangsläufig aus molekularen Fragmenten von Ausgangsstoffen und/oder Reagenzien resultiert, die nicht in das gewünschte Produkt eingebunden sind, infolge der Massenerhaltung; im Gegensatz dazu wird das Nebenprodukt auf ein Produkt bezogen, das aus einem Wettbewerbsprozess gebildet wird, der prinzipiell durch eine Optimierung von Reaktionsbedingungen unterdrückt werden könnte. Siehe auch Hauptprodukt Nebenprodukt Synergie Kreislaufwirtschaft == Referenzen ==