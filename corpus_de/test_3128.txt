Ein Patch ist eine Reihe von Änderungen an einem Computerprogramm oder dessen unterstützenden Daten, die entwickelt wurden, um es zu aktualisieren, zu beheben oder zu verbessern. Dies beinhaltet die Fixierung von Sicherheitslücken und anderen Fehlern, wobei solche Patches in der Regel Bugfixes oder Bugfixes genannt werden. Patches werden oft geschrieben, um die Funktionalität, Usability oder Performance eines Programms zu verbessern. Patches können entweder unter programmierter Steuerung oder durch einen menschlichen Programmierer mit einem Bearbeitungstool oder einem Debugger installiert werden. Sie können auf Programmdateien auf einem Speichergerät oder im Computerspeicher angewendet werden. Patches können dauerhaft (bis wieder gepatelt) oder vorübergehend sein. Patching ermöglicht die Modifikation von kompilierten und maschinellen Sprachobjektprogrammen, wenn der Quellcode nicht verfügbar ist. Dies erfordert ein gründliches Verständnis der inneren Arbeiten des Objektcodes durch die Person, die das Patch erstellt, was ohne eine enge Studie des Quellcodes schwierig ist. Jemand, der mit dem Programm nicht vertraut ist, kann einen Patch mit einem Patch-Dienstprogramm installieren, das von einer anderen Person erstellt wird, die das Admin ist. Auch wenn der Quellcode zur Verfügung steht, ermöglicht das Patchen die Installation von kleinen Änderungen am Objektprogramm, ohne dass es erneut kompiliert oder wieder aufgebaut werden muss. Für kleinere Änderungen an Software ist es oft einfacher und kostengünstiger, Patches an Benutzer zu verteilen, anstatt ein neu erstelltes oder neu zusammengesetztes Programm neu zu verteilen. Obwohl Probleme behoben werden sollen, können schlecht gestaltete Patches manchmal neue Probleme einführen (siehe Softwareregressionen). In einigen speziellen Fällen können Updates die Funktionalität wissentlich brechen oder ein Gerät deaktivieren, beispielsweise durch Entfernen von Komponenten, für die der Update-Anbieter nicht mehr lizenziert ist. Patch-Management ist Teil des Lifecycle-Managements, und ist der Prozess der Verwendung einer Strategie und des Plans, auf welche Patches zu einem bestimmten Zeitpunkt angewendet werden sollten. Typen Binary Patches Patches für proprietäre Software werden typischerweise als ausführbare Dateien anstelle von Quellcode verteilt. Wenn diese Dateien ausgeführt werden, laden Sie ein Programm in den Speicher, der die Installation des Patch-Codes in das Zielprogramm(en) auf der Festplatte verwaltet. Patches für andere Software werden typischerweise als Datendateien mit dem Patch-Code verteilt. Diese werden von einem Patchprogramm gelesen, das die Installation durchführt. Dieses Dienstprogramm modifiziert die ausführbare Datei des Zielprogramms – den Maschinencode des Programms – typischerweise durch Überschreiben seiner Bytes mit Bytes, die den neuen Patchcode repräsentieren. Wenn der neue Code in den Raum (Anzahl der Bytes) des alten Codes passt, kann er durch Überschreiben direkt über den alten Code gesetzt werden. Das nennt man einen Inline-Patch. Wenn der neue Code größer als der alte Code ist, wird das Patch-Dienstprogramm Lastdatensätze anhängen, die den neuen Code in die Objektdatei des Zielprogramms enthalten. Wenn das gepatchte Programm ausgeführt wird, wird die Ausführung auf den neuen Code mit Zweiganweisungen (Pumpen oder Anrufe) geleitet, die über den Platz im alten Code gepatelt werden, wo der neue Code benötigt wird. Auf frühen 8-Bit-Mikrocomputern, beispielsweise dem Radio Shack TRS-80, umfasst das Betriebssystem ein PATCH/CMD-Dienstprogramm, das Patchdaten aus einer Textdatei annimmt und die Fixes an die ausführbaren Binärdatei(en) des Zielprogramms anwendet. Der Patch-Code muss Platz(en) im Speicher haben, um zu Laufzeit ausgeführt werden. Inline-Patches sind keine Schwierigkeiten, aber wenn zusätzliche Speicherplatz benötigt wird, muss der Programmierer improvisieren. Natürlich, wenn der Patch-Programmierer derjenige ist, der zuerst den Code erstellt, um gepatelt zu werden, ist dies einfacher. Savvy Programmierer planen für diesen Bedarf im Voraus, indem sie Speicher für eine spätere Erweiterung, verlassen ungenutzt bei der Herstellung ihrer endgültigen Iteration. Andere Programmierer, die nicht an der ursprünglichen Umsetzung beteiligt sind, um Änderungen zu einem späteren Zeitpunkt zu integrieren, müssen für zusätzliche Bytes suchen oder Platz machen. Der glücklichste mögliche Umstand hierfür ist, wenn die zu patchierende Routine ein ausgeprägtes Modul ist. In diesem Fall muss der Patch-Programmierer lediglich die Zeiger oder Längenanzeigen einstellen, die an andere Systemkomponenten den Raum des Moduls signalisieren; er ist dann frei, diesen Speicherraum mit seinem erweiterten Patch-Code zu bevölkern. Wenn die zu patchende Routine nicht als separates Speichermodul vorhanden ist, muss der Programmierer Wege finden, die Routine zu schrumpfen, um genügend Platz für den erweiterten Patchcode zu schaffen. Typische Taktiken umfassen das Verkürzen des Codes durch das Finden effizienterer Befehlssequenzen (oder durch Neugestaltung mit effizienteren Algorithmen), das Verdichten von Nachrichtenfolgen und anderen Datenbereichen, das Äußeren von Programmfunktionen zur Massenspeicherung (z.B. Festplattenüberlagerungen) oder das Entfernen von Programmmerkmalen, die weniger wichtig sind als die Änderungen, die mit dem Patch installiert werden sollen. Kleine In-Memory-Maschinencode-Patches können manuell mit dem System-Debug-Dienstprogramm, wie CP/M's DDT oder MS-DOS DEBUG Debugger angewendet werden. Programmierer, die in der interpretierten BASIC arbeiten, nutzten oft den POKE-Befehl, um die Funktionalität einer Systemdienstroutine oder des Dolmetschers selbst zu verändern. Quellcode-Patches Patches können auch in Form von Quellcode-Änderungen zirkulieren. In diesem Fall bestehen die Patches in der Regel aus textuellen Unterschieden zwischen zwei Quellcode-Dateien, genannt Diffs". Diese Arten von Patches kommen häufig aus Open-Source-Software-Projekten. In diesen Fällen erwarten Entwickler, dass Benutzer die neuen oder geänderten Dateien selbst kompilieren. Große Patches Da das Wort Patch die Konnotation eines kleinen Fixs trägt, können große Fixes verschiedene Nomenklatur verwenden. Bulky-Patches oder -Patches, die ein Programm erheblich ändern, können als "Dienstpakete" oder als "Software-Updates" zirkulieren. Microsoft Windows NT und seine Nachfolger (einschließlich Windows 2000, Windows XP, Windows Vista und Windows 7) verwenden die Terminologie "Servicepack". Historisch nutzte IBM die Begriffe FixPaks und "Corrective Service Diskette", um sich auf diese Updates zu beziehen. Historisch verteilten Software-Lieferanten Patches auf Papierband oder auf gestanzten Karten und erwarteten, dass der Empfänger den angezeigten Teil des Original-Bands (oder Deck) ausschneidet und das Ersatz-Segment (nach dem Namen) einstreicht. Spätere Patch-Verteilungen verwendet Magnetband. Nach der Erfindung von abnehmbaren Festplattenlaufwerken kamen dann Patches über eine Festplatte oder später CD-ROM per Post aus dem Softwareentwickler. Mit weit verbreitetem Internet-Zugang, das Herunterladen von Patches aus der Website des Entwicklers oder durch automatisierte Software-Updates wurden oft für die Endbenutzer zur Verfügung. Ausgehend von Apples Mac OS 9 und Microsofts Windows ME haben PC-Betriebssysteme die Möglichkeit erhalten, automatische Software-Updates über das Internet zu erhalten. Computerprogramme können häufig Patches koordinieren, um ein Zielprogramm zu aktualisieren. Automatisierung vereinfacht die Aufgabe des Endbenutzers – sie müssen nur ein Update-Programm ausführen, woraufhin dieses Programm sicherstellt, dass die Aktualisierung des Ziels vollständig und korrekt erfolgt. Service-Packs für Microsoft Windows NT und seine Nachfolger und für viele kommerzielle Software-Produkte übernehmen solche automatisierten Strategien. Einige Programme können sich über das Internet mit sehr wenig oder keine Intervention auf der Seite der Benutzer aktualisieren. Die Wartung der Serversoftware und der Betriebssysteme erfolgt auf diese Weise oft. In Situationen, in denen Systemadministratoren eine Reihe von Computern steuern, hilft diese Art der Automatisierung, Konsistenz zu erhalten. Die Anwendung von Sicherheitspatches erfolgt auf diese Weise häufig. Anwendung Die Größe der Patches kann von einigen Bytes bis zu Hunderten von Megabytes variieren; so bedeuten deutlichere Änderungen eine größere Größe, obwohl dies auch davon abhängt, ob das Patch ganze Dateien oder nur den geänderten Anteil(en) von Dateien enthält. Insbesondere können Patches ziemlich groß werden, wenn die Änderungen nicht-Programm-Daten hinzufügen oder ersetzen, wie Grafiken und Sounddateien. Solche Situationen treten häufig beim Patchen von Computerspielen auf. Im Vergleich zur ursprünglichen Installation von Software dauert Patches in der Regel nicht lange, um anzuwenden. Bei Betriebssystemen und Computerserversoftware haben Patches die besonders wichtige Rolle, Sicherheitslöcher zu fixieren. Einige kritische Patches beinhalten Probleme mit Fahrern. Patches können eine vorherige Anwendung von anderen Patches erfordern, oder können vor- oder gleichzeitige Aktualisierungen mehrerer unabhängiger Softwarekomponenten erfordern. Um Updates zu erleichtern, bieten Betriebssysteme oft automatische oder halbautomatische Aktualisierungseinrichtungen an. Vollautomatische Updates haben es nicht geschafft, eine weit verbreitete Popularität in Corporate Computing-Umgebungen zu gewinnen, zum Teil aufgrund der oben genannten Glitches, aber auch, weil Administratoren befürchten, dass Software-Unternehmen können unbegrenzte Kontrolle über ihre Computer gewinnen. Paketmanagementsysteme können verschiedene Grade der Patchautomatisierung anbieten. Die Nutzung von komplett automatischen Updates ist im Verbrauchermarkt weit verbreiteter geworden, da Microsoft Windows die Unterstützung für sie hinzugefügt hat und Service Pack 2 von Windows XP (verfügbar im Jahr 2004) sie standardmäßig aktiviert hat. Kühne Benutzer, insbesondere Systemadministratoren, neigen dazu, Patches anzuwenden, bis sie die Stabilität der Fixes überprüfen können. Microsoft (W)SUS unterstützt dies. Bei großen Patches oder bei signifikanten Änderungen beschränken die Verteiler häufig die Verfügbarkeit von Patches auf qualifizierte Entwickler als Beta-Test. Das Anwenden von Patches an Firmware stellt besondere Herausforderungen dar, da es oft die Bereitstellung von völlig neuen Firmware-Bildern beinhaltet, anstatt nur die Unterschiede von der vorherigen Version anzuwenden. Das Patch besteht in der Regel aus einem Firmware-Bild in Form binärer Daten, zusammen mit einem lieferantenbereiten Spezialprogramm, das die vorherige Version durch die neue Version ersetzt; ein Motherboard BIOS-Update ist ein Beispiel eines gemeinsamen Firmware-Patches. Unerwartete Fehler oder Unterbrechungen während des Updates, wie beispielsweise ein Stromausfall, können das Motherboard unbrauchbar machen. Es ist möglich, dass Motherboard-Hersteller Sicherheitsvorkehrungen an Ort und Stelle setzen, um ernsthafte Schäden zu verhindern; zum Beispiel könnte das Update-Verfahren eine Sicherung der Firmware machen und halten, um zu verwenden, falls es feststellt, dass die Primärkopie beschädigt ist (in der Regel durch die Verwendung einer Prüfsumme, wie einem CRC). Videospiele Videospiele erhalten Patches, um Kompatibilitätsprobleme nach ihrer ersten Veröffentlichung zu beheben, genau wie jede andere Software, aber sie können auch angewendet werden, um Spielregeln oder Algorithmen zu ändern. Diese Patches können durch die Entdeckung von Exploits in der Multiplayer-Spiel-Erfahrung ausgelöst werden, die verwendet werden können, um unfaire Vorteile gegenüber anderen Spielern zu gewinnen. Zusätzliche Funktionen und Gameplay-Tweaks können oft hinzugefügt werden. Diese Arten von Patches sind häufig in First-Person-Shootern mit Multiplayer-Fähigkeit, und in MMORPGs, die in der Regel sehr komplex mit großen Mengen von Inhalten sind, fast immer stark auf Patches nach der ersten Veröffentlichung, wo Patches manchmal neue Inhalte und Fähigkeiten für Spieler zur Verfügung. Da die Balance und Fairness für alle Spieler eines MMORPG innerhalb kurzer Zeit durch einen Exploit stark beschädigt werden kann, werden Server eines MMORPG manchmal kurzfristig abgenommen, um einen kritischen Patch mit einem Fix anzuwenden. Unternehmen veröffentlichen manchmal Spiele wissen, dass sie Bugs haben. Computer Gaming World's Scorpia im Jahr 1994 verurteilt "Unternehmen - zu viele zu erwähnen -, die shoddy Produkt wissen, dass sie mit Patches und Upgrades erhalten können, und die "Pay-Tester ihrer Kunden" machen. In der Software-Entwicklung Patches werden manchmal verpflichtend, Probleme mit Bibliotheken oder mit Teilen Quellcode für Programme in häufigem Gebrauch oder in der Wartung zu beheben. Dies geschieht häufig bei sehr großen Softwareprojekten, aber selten in der kleinen Entwicklung. In Open-Source-Projekten erhalten die Autoren häufig Patches oder viele Menschen veröffentlichen Patches, die bestimmte Probleme beheben oder bestimmte Funktionalitäten hinzufügen, wie Unterstützung für lokale Sprachen außerhalb des Projekts Locale. In einem Beispiel aus der frühen Entwicklung des Linux-Kernels (nicht für die Veröffentlichung seines vollständigen Quellcodes), Linus Torvalds, der ursprüngliche Autor, erhielt Hunderttausende von Patches von vielen Programmierern, um sich gegen seine ursprüngliche Version zu bewerben. Für wiederkehrende Patches gibt es Tools wie Coccinelle, um generische Patches zu unterstützen und sie gleichzeitig an mehreren Standorten (typischerweise Hunderte von Standorten im Fall des Linux-Kernels) anzubringen. Der Apache HTTP Server entwickelte sich ursprünglich als eine Reihe von Patches, die Brian Behlendorf zur Verbesserung von NCSA HTTPd kollaborierte, daher ein Name, der impliziert, dass es sich um eine Sammlung von Patches "(ein Patchy-Server") handelt. Die FAQ auf der offiziellen Website des Projekts besagt, dass der Name Apache aus Respekt für den Indianerstamm von Apache gewählt wurde. Die Erklärung "ein Patchy-Server" wurde jedoch zunächst auf der Website des Projekts gegeben. Varianten Hotfix Ein Hotfix- oder Quick Fix Engineering-Update (QFE-Update) ist ein einziges, kumulatives Paket, das Informationen (oft in Form einer oder mehrerer Dateien) enthält, die verwendet werden, um ein Problem in einem Software-Produkt (d.h. einem Software-Bug) zu beheben. Typischerweise werden Hotfixes an eine bestimmte Kundensituation gestellt. Microsoft nutzte diesen Begriff einmal, hat aber für neue Terminologie gestoppt: General Distribution Release (GDR) und Limited Distribution Release (LDR). Blizzard Entertainment definiert jedoch ein Hotfix als "eine Änderung, die auf das Spiel als kritisch genug gemacht wurde, dass es nicht abgehalten werden kann, bis ein regelmäßiger Inhalt Patch". Eine Punkt-Release ist eine kleinere Veröffentlichung eines Software-Projekts, vor allem, um Fehler zu beheben oder kleine Aufräumarbeiten zu tun, anstatt signifikante Funktionen hinzuzufügen. Oft gibt es zu viele Bugs, die in einem einzigen großen oder kleinen Release behoben werden, wodurch eine Notwendigkeit für eine Punktfreigabe. Programm temporäre fix Programm temporäre fix oder Produkt temporäre fix (PTF), je nach Datum, ist die Standard IBM-Terminologie für eine einzelne Bugfix, oder Gruppe von Fixes, verteilt in einem Formular bereit für Kunden installieren. Ein PTF wurde manchmal als „ZAP“ bezeichnet. Kunden erklären manchmal das Akronym in einer zungenin-cheekischen Weise als permanente temporäre Fixierung oder mehr praktisch wahrscheinlich diese Fixierung, weil sie die Möglichkeit haben, die PTF zu einem dauerhaften Teil des Betriebssystems zu machen, wenn der Patch das Problem repariert. Sicherheitspatchs Ein Sicherheits-Patch ist eine Änderung, die auf einen Vermögenswert angewendet wird, um die durch eine Schwachstelle beschriebene Schwäche zu korrigieren. Diese Korrekturaktion wird eine erfolgreiche Ausbeutung verhindern und die Fähigkeit einer Bedrohung zur Ausbeutung einer bestimmten Schwachstelle in einem Vermögenswert beseitigen bzw. verringern. Patch-Management ist Teil des Sicherheitsmanagements – der zyklischen Praxis, Schwachstellen zu identifizieren, zu klassifizieren, aufzulösen und zu mildern. Sicherheitspatches sind die primäre Methode, Sicherheitslücken in der Software zu beheben. Derzeit veröffentlicht Microsoft seine Sicherheits-Patches einmal im Monat, und andere Betriebssysteme und Software-Projekte haben Sicherheitsteams gewidmet, um die zuverlässigsten Software-Patches zu veröffentlichen, sobald eine Schwachstelle Ankündigung als möglich. Sicherheitspatches sind eng mit der verantwortungsvollen Offenlegung verbunden. Diese Sicherheitspatches sind kritisch, um sicherzustellen, dass der Geschäftsprozess nicht beeinträchtigt wird. Im Jahr 2017 wurden Unternehmen von einer Ransomware namens WannaCry getroffen, die Dateien in bestimmten Versionen von Microsoft Windows verschlüsselt und fordert ein Lösegeld über BitCoin. Als Reaktion darauf veröffentlichte Microsoft einen Patch, der die Ransomware vom Laufen stoppt. Service Pack A Service Pack oder SP oder ein Feature Pack (FP) umfasst eine Sammlung von Updates, Fixes oder Erweiterungen zu einem Softwareprogramm, das in Form eines einzigen installierbaren Pakets geliefert wird. Unternehmen veröffentlichen oft ein Service-Paket, wenn die Anzahl der einzelnen Patches zu einem bestimmten Programm erreicht eine bestimmte (arbitrary) Grenze, oder die Software-Release hat gezeigt, mit einer begrenzten Anzahl von verbleibenden Problemen auf Basis von Benutzer-Feedback und Bug-Tracking wie Bugzilla stabilisiert werden. In großen Software-Anwendungen wie Büro-Suiten, Betriebssystemen, Datenbank-Software oder Netzwerk-Management ist es nicht ungewöhnlich, ein Service-Paket innerhalb des ersten Jahres oder zwei der Veröffentlichung eines Produkts ausgestellt haben. Die Installation eines Service-Packs ist einfacher und weniger fehleranfällig als die Installation von vielen einzelnen Patches, noch mehr, wenn mehrere Computer über ein Netzwerk aktualisiert werden, wo Service-Packs häufig sind. Unoffizielle Patches Ein inoffizielles Patch ist ein nichtkommerzielles Patch für eine kommerzielle Software, die von einem Dritten anstelle des ursprünglichen Entwicklers erstellt wurde. Ähnlich wie bei einem gewöhnlichen Patch, lindert es Fehler oder Mängel. Beispiele sind Sicherheitsbehebungen von Sicherheitsexperten, wenn ein offizieller Patch der Softwarehersteller selbst zu lange dauert. Weitere Beispiele sind inoffizielle Patches, die von der Spielgemeinschaft eines Videospiels erstellt wurden, das ununterstützte Aufgabeware wurde. Monkey-Patches Monkey-Patch bedeutet, ein Programm lokal zu erweitern oder zu modifizieren (beeinflusst nur die laufende Instanz des Programms). Hot Patching Hot Patching, auch als Live Patching oder dynamische Software-Update bekannt, ist die Anwendung von Patches ohne Abschaltung und Neustart des Systems oder des betreffenden Programms. Dies behandelt Probleme im Zusammenhang mit der Unverfügbarkeit der vom System oder dem Programm bereitgestellten Dienste. Methode kann verwendet werden, um Linux-Kernel zu aktualisieren, ohne das System zu stoppen. Ein Patch, der auf diese Weise angewendet werden kann, wird als Hot-Patch oder als Live-Patch bezeichnet. Dies wird zu einer gemeinsamen Praxis im mobilen App-Raum. Unternehmen wie Rollout. io verwenden Methode Sweizzling, um heiße Patches an das iOS-Ökosystem zu liefern. Eine weitere Methode für die Hot-Patching iOS Apps ist JSPatch. Cloud-Anbieter verwenden häufig Hot Patching, um Ausfallzeiten für Kunden bei der Aktualisierung der zugrunde liegenden Infrastruktur zu vermeiden. Slipstreaming Beim Computing ist das Slipstreaming der Akt der Integration von Patches (einschließlich Servicepacks) in die Installationsdateien ihrer ursprünglichen App, so dass das Ergebnis eine direkte Installation der aktualisierten App ermöglicht. Die Art des Rutschens bedeutet, dass es einen anfänglichen Aufwand an Zeit und Arbeit beinhaltet, aber auf lange Sicht viel Zeit (und, durch Verlängerung, Geld) sparen kann. Dies ist besonders für Administratoren von Bedeutung, die mit der Verwaltung einer großen Anzahl von Computern beauftragt sind, wobei typische Praxis für die Installation eines Betriebssystems auf jedem Computer sein würde, die Originalmedien zu verwenden und dann jeden Computer nach Beendigung der Installation zu aktualisieren. Dies würde viel mehr Zeit brauchen, als mit einer aktuelleren (slipstreamed) Quelle zu beginnen und die wenigen Updates zu laden und zu installieren, die nicht in der verschlüsselten Quelle enthalten sind. Auf diese Weise können jedoch nicht alle Patches aufgebracht werden, und ein Nachteil besteht darin, dass, wenn festgestellt wird, dass ein bestimmter Patch für spätere Probleme verantwortlich ist, dieser Patch nicht entfernt werden kann, ohne eine ursprüngliche, rutschfeste Installationsquelle zu verwenden. Software-Update-Systeme Software-Update-Systeme ermöglichen die Verwaltung von Updates durch Benutzer und Software-Entwickler. In der 2017 Petya cyberpandemic, die Finanzsoftware MeDoc" Update-System wird gesagt, um Kompromisse gemacht worden, um Malware über seine Updates zu verbreiten. Auf der Tor Blog Cybersicherheit Experte Mike Perry sagt, dass deterministische, verteilte Builds wahrscheinlich der einzige Weg, um gegen Malware zu verteidigen, die die Software-Entwicklung angreift und Prozesse zu bauen, um Millionen von Maschinen in einem einzigen, offiziell unterzeichneten, momentanen Update zu infizieren. Update-Manager erlauben auch, Sicherheitsaktualisierungen schnell und breit anzuwenden. Update Manager von Linux wie Synaptic ermöglichen es Benutzern, alle auf ihrem Computer installierten Software zu aktualisieren. Anwendungen wie Synaptic verwenden kryptographische Prüfsummen, um Quell-/lokale Dateien zu überprüfen, bevor sie angewendet werden, um die Treue gegen Malware zu gewährleisten. Siehe auch Software Release Life Cycle Software Wartung Backporting Dribbleware Patch (Unix)Porting Vulnerability Datenbank Delta Codierung SMP/E Automatische Bugfixierung White Hat (Computer Security) Referenzen Externe Links Der Jargon Datei-Version 4.4.7 Eintrag für Patch Eine ausführliche Master-Dissertation mit Sicherheits-Patches Offizielles Linux-Kernel-Patch-Format 0-Day-Patch - Exposed Vendors (In)security Performance Archived 2014-01-31 at the Wayback Machine – eine metrische Vergleich Patch-Performance von Microsoft und Apple