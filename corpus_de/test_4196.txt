Neuroevolution oder Neuroevolution ist eine Form künstlicher Intelligenz, die evolutionäre Algorithmen zur Erzeugung künstlicher neuronaler Netzwerke (ANN,) Parameter, Topologie und Regeln verwendet. Es wird am häufigsten im künstlichen Leben angewendet, allgemeine Spiel spielen und evolutionäre Robotik. Der Hauptvorteil ist, dass die Neuroevolution breiter angewendet werden kann als beaufsichtigte Lernalgorithmen, die ein Syllabus von korrekten Input-Output-Paare erfordern. Die Neuroevolution erfordert dagegen nur ein Maß für die Leistung eines Netzwerks bei einer Aufgabe. Beispielsweise kann das Ergebnis eines Spiels (d.h. ob ein Spieler gewonnen oder verloren hat) leicht gemessen werden, ohne markierte Beispiele für gewünschte Strategien bereitzustellen. Neuroevolution wird häufig als Teil des Verstärkungslernparadigmas verwendet, und es kann mit herkömmlichen Tiefenlerntechniken, die Gradientenabstieg auf einem neuronalen Netzwerk mit einer festen Topologie verwenden, kontrastiert werden. Features Viele Neuroevolution Algorithmen wurden definiert. Eine gemeinsame Unterscheidung ist zwischen Algorithmen, die nur die Stärke der Verbindungsgewichte für eine feste Netzwerktopologie entwickeln (manchmal herkömmliche Neuroevolution genannt), im Gegensatz zu denen, die sowohl die Topologie des Netzes als auch seine Gewichte entwickeln (genannt TWEANNs, für Topologie und Weight Evolving Artificial Neural Network Algorithmen). Es kann getrennt zwischen Methoden unterschieden werden, die die Struktur von ANNs parallel zu seinen Parametern entwickeln (diejenigen, die Standard-Entwicklungsalgorithmen anwenden) und denen, die sie separat entwickeln (durch memetische Algorithmen). Vergleich mit Gradientenabstieg Die meisten neuronalen Netzwerke verwenden Gradientenabstieg statt Neuroevolution. Um 2017 gaben Forscher von Uber jedoch an, dass einfache strukturelle Neuroevolutionsalgorithmen mit anspruchsvollen modernen branchenüblichen Gradienten-Descent Deep Learning Algorithmen wettbewerbsfähig waren, zum Teil weil die Neuroevolution weniger wahrscheinlich in lokalen Minima stecken geblieben war. In der Wissenschaft spekulierte der Journalist Matthew Hutson, dass ein Teil des Grunds Neuroevolution erfolgreich ist, wo es zuvor gescheitert war, aufgrund der erhöhten Rechenleistung in den 2010er Jahren zur Verfügung steht. Direkte und indirekte Kodierung Evolutionsalgorithmen arbeiten auf einer Population von Genotypen (auch als Genome bezeichnet). In der Neuroevolution wird ein Genotyp zu einem neuronalen Netzwerk-Phenotyp abgebildet, der auf irgendeiner Aufgabe ausgewertet wird, seine Fitness abzuleiten. In direkten Kodierungsschemata kartiert der Genotyp direkt zum Phänotyp. Das heißt, jedes Neuron und jede Verbindung im neuronalen Netzwerk wird direkt und explizit im Genotyp angegeben. Im Gegensatz dazu gibt der Genotyp bei indirekten Kodierungssystemen indirekt an, wie dieses Netzwerk erzeugt werden soll. Indirekte Kodierungen werden oft verwendet, um mehrere Ziele zu erreichen: Modularität und andere Regelmäßigkeiten; Kompression des Phänotyps zu einem kleineren Genotyp, Bereitstellung einer kleineren Suchfläche; Kartierung des Suchraums (Genom) zu der Problemdomäne. Die Taxonomie der embryogenen Systeme für die indirekte Kodierung Traditionell indirekte Kodierungen, die künstliche Embryogenie (auch als künstliche Entwicklung bezeichnet) verwenden, wurden nach einem grammatischen Ansatz im Vergleich zu einem Zellchemie-Ansatz kategorisiert. Die frühere Entwicklung von Regeln in Form von grammatischen Rewrite-Systemen. Letztere versucht zu demimieren, wie physikalische Strukturen in der Biologie durch Genexpression entstehen. Indirekte Kodiersysteme verwenden häufig Aspekte beider Ansätze. Stanley und Miikkulainen schlagen eine Taxonomie für embryogene Systeme vor, die ihre zugrunde liegenden Eigenschaften widerspiegeln sollen. Die Taxonomie identifiziert fünf kontinuierliche Dimensionen, entlang denen jedes embryogene System platziert werden kann: Zell (neuron) Schicksal: die letzten Eigenschaften und Rolle der Zelle im reifen Phenotyp. Diese Dimension zählt die Anzahl der Methoden zur Bestimmung des Schicksals einer Zelle. Targeting: das Verfahren, mit dem Verbindungen von Quellzellen zu Zielzellen geleitet werden. Dies reicht von spezifischem Targeting (Quelle und Ziel werden explizit identifiziert) bis zu relativen Targeting (z.B. basierend auf Standorten von Zellen zueinander). Heterochronie: das Timing und die Reihenfolge der Ereignisse während der Embryogenie. Zählt die Anzahl der Mechanismen, um das Timing der Ereignisse zu ändern. Kanalisation: wie tolerant das Genom ist zu Mutationen (Brittleness). Reichweiten von präzisen genotypischen Anweisungen bis zu einer hohen Toleranz der ungenauen Mutation. Komplexierung: die Fähigkeit des Systems (einschließlich evolutionärer Algorithmus und Genotyp zu Phänotyp-Mapping), um eine Komplexierung des Genoms (und damit Phänotyp) über die Zeit zu ermöglichen.Reichweiten von nur fest-size-Genome zu erlauben, hochvariable Länge Genome. Beispiele für Neuroevolutionsmethoden (diejenigen mit direkten Kodierungen sind notwendigerweise nicht-embryogen:) Siehe auch Automatisiertes maschinelles Lernen (AutoML)Evolutionäre Berechnung NeuroEvolution von Augmented Topologies (NEAT)Noogenesis HyperNEAT (A Generative Version von NEAT) Evolutionäre Akquisition von Neural Topologien (EANT/EANT2) Referenzen Externe Links "Evolution 101: Neuroevolution | BEACON".beacon-center.org.Retrieved 2018-01-14. "NNRG Areas - Neuroevolution".nn.cs.utexas.edu.University of Texas.Retrieved 2018-01-14.</ref> (hat herunterladbare Papiere auf NEAT und Anwendungen) "SharpNEAT Neuroevolution Framework".sharpneat.sourceforge.net.Retrieved 2018-01-14.mature Open Source Neuroevolution Project in C# implementiert. Net.ANNEvolve ist ein Open Source AI Research Project (Downloadable Source Code in C und Python mit Tutorial & Verschiedene Schriften und Illustrationen "Nils T Siebel - EANT2 - Evolutionary Verstärkung Learning of Neural Networks".www.siebel-research.de.Retrieved 2018-01-14.</ref> Webseite zum evolutionären Lernen mit EANT/EANT2] (Informationen und Artikel zu EANT/EANT2 mit Anwendungen zum Roboterlernen) NERD Toolkit. Das Neurodynamik- und Evolutionsrobotik-Entwicklungstoolkit. Eine kostenlose Open Source-Software-Sammlung für verschiedene Experimente über Neurocontrol und Neuroevolution. Enthält einen Script-Simulator, mehrere Neuro-Evolution-Algorithmen (z.B. ICONE), Cluster-Unterstützung, visuelle Netzwerk-Design und Analyse-Tools. "CorticalComputer (Gene)". GitHub.Retrieved 2018-01-14. Quellcode für das DXN Neuroevolutionäre System. "ES-HyperNEAT Benutzerseite.eplex.cs.ucf.edu.Retrieved 2018-01-14.