Kryptografische Variablen sind etablierte, hochrangige Kryptografalgorithmen, die häufig verwendet werden, um Kryptographieprotokolle für Computersicherheitssysteme zu erstellen. Diese Routinen umfassen, sind aber nicht beschränkt auf die Funktionen und Verschlüsselungsfunktionen einer einzigen Strecke. Rationale Mit der Schaffung kryptographischer Systeme verwenden die Designer Kryptographien als ihre wichtigsten Bausteine. kryptographische Variablen sind so konzipiert, dass sie eine sehr spezifische Aufgabe in einer genau definierten und sehr zuverlässigen Mode erfüllen. Da Kryptographien als Bausteine verwendet werden, müssen sie sehr zuverlässig sein, d.h. nach ihrer Spezifikation. Wenn beispielsweise eine Verschlüsselung Routineansprüche nur mit X Anzahl von Computeroperationen zerbrochen werden, und es wird mit deutlich weniger als X-Operationen zerbrochen, so dass Kryptographie-Lücke versagt hat. Kommt ein Kryptografum nicht zustande, wird fast jedes Protokoll, das es verwendet, gefährdet. Seit der Schaffung von Kryptografen ist es sehr schwierig, und es wird getestet, dass sie langfristig zuverlässig sind, es ist im Wesentlichen nie sinnvoll (norsafe), ein neues Kryptograf-Lynam zu entwerfen, um den Anforderungen eines neuen Kryptographiesystems gerecht zu werden. Gründe sind: Der Designer kann in den mathematischen und praktischen Erwägungen, die an Kryptografen beteiligt sind, nicht zuständig sein. Design eines neuen Kryptographie-Vaktors ist sehr zeitaufwändig und sehr fehlerprone, auch für Experten auf dem Gebiet. Da Algorithmen in diesem Bereich nicht nur gut entwickelt werden müssen, sondern auch gut von der Gemeinschaft des Programmierers getestet werden müssen, auch wenn eine Kryptografische Routine gut aus einem Design-Such betrachtet wird, könnte sie noch Fehler enthalten. Erfolglich mit einer solchen Prüfung gibt es ein gewisses Vertrauen (in Wirklichkeit das bisher einzige Vertrauen), dass der Algorithmus tatsächlich genug ist, um zu nutzen; Sicherheitsnachweise für Kryptographien sind in der Regel nicht verfügbar. Kryptografische Variablen sind in einigen Fällen ähnlich wie die Programmiersprachen. Ein Computerprogrammer stellt selten eine neue Programmierungssprache vor und schreibt ein neues Programm; stattdessen wird er eine der bereits etablierten Programmsprachen verwenden. Kryptographen sind eines der Bausteine jedes Kryptosystems, z.B. TLS, SSL, SSH usw. Krypto-System-Designer, die nicht in der Lage sind, ihre Sicherheit endgültig zu beweisen, müssen die von ihnen als sicher verwenden. Wahl der besten verfügbaren Daten in einem Protokoll bietet in der Regel die beste verfügbare Sicherheit. Strukturschwächen sind jedoch in jedem Kryptosystem möglich und es ist die Verantwortung der Designer/innen, um sie zu vermeiden. Koppelung kryptographischer Variablen Cryptographographien allein sind recht begrenzt. Sie können nicht als Kryptographiesystem angesehen werden. Zum Beispiel wird ein reiner Verschlüsselungsgorithmus weder einen Authentifizierungsmechanismus noch eine explizite Überprüfung der Integrität vorsehen. Nur wenn in Sicherheitsprotokollen kombiniert wird, kann mehr als ein Sicherheitserfordernis angegangen werden. z.B. die Übermittlung einer Botschaft, die nicht nur codiert, sondern auch vor Zinnkering geschützt ist (d. h. sie ist vertraulich und Integrität geschützt), eine Kodierung, wie DES, und ein Hash-routin wie SHA-1 können in Kombination verwendet werden. Kommt der Angriffsgegner den Verschlüsselungsschlüssel nicht bekannt, kann er die Botschaft nicht ändern, so dass der Anzeigewert(en) gültig wäre. Kombination von Kryptografen, um ein Sicherheitsprotokoll zu erstellen, ist selbst eine ganze Spezialisierung. Die meisten ausbeuterischen Fehler (d. h. Unstimmigkeiten in Kryptosystemen) sind darauf zurückzuführen, dass keine Fehler in den Variablen (je nachdem, dass sie mit Sorgfalt ausgewählt wurden), sondern auf die Art und Weise, wie sie verwendet werden, d. h. schlechtes Protokolldesign und Schlaggy oder nicht sorgfältig genug Umsetzung. Mathematische Analyse von Protokollen ist zum Zeitpunkt dieses Schreibens nicht ausgereift. Es gibt einige grundlegende Eigenschaften, die mit automatischen Methoden, wie z.B. BAN-logik, überprüft werden können. Es gibt sogar Methoden für die vollständige Überprüfung (z.B. die SPI-Calculus), aber sie sind äußerst schwerfällig und können nicht automatisiert werden. Protokolldesign ist eine Art, die ein tiefes Wissen und viel Praxis erfordert; selbst dann sind Fehler üblich. Ein anschauliches Beispiel, für ein echtes System, kann auf der OpenSSL-Notrufseite hier gesehen werden. Häufig verwendete Funktion der einzelnen Autobahnen, manchmal auch als eine einmalige Kompressionsfunktion bezeichnet – ein ermäßigter Hash-Wert für eine Botschaft (z.B. Symmetrische Schlüssel-Kyptographie – Mit dem gleichen Schlüssel, der zum Code verwendet wird (z.B. AES) Public-key Kryptographie – Ein Ciphertext, der mit einem anderen Schlüssel zum encode (z.B. RSA) entkoppelt ist Digitale Signaturen – bekräftigen den Autor eines Nachrichten-Mix-Netzwerkpools von vielen Nutzern, um zu anonymisieren, was aus dem Privatinformationserholung stammt – Informationen über Datenbanken ohne Server wissen, welchen Gegenstand er Verpflichtungs-Regelung beantragt hat –, um sich zu einem ausgewählten Wert zu verpflichten, während es auf andere Weise verborgen bleibt, mit der Möglichkeit, ihn später auf die epidemiologische Zahl zu legen. Siehe auch Kategorie: Kryptographen – eine Liste der Kryptographen Cryptograph-Anschlüsse Levente Buttyán, István Vajda : Kriptográfia és alkalmazásai (Suche und Anwendungen), Taitex 2004, ISBN 963-9548-13-8 Menezes, Alfred J Handbuch für angewandte Kryptographie, CRC Presse, ISBN 0-8493-8523-7, Oktober 1996, 816 Seiten.