Die grafische Benutzeroberfläche (GUI jee-you-eye oder ) ist eine Form der Benutzeroberfläche, die es Benutzern ermöglicht, mit elektronischen Geräten über grafische Icons und Audio-Indikator wie primäre Notation zu interagieren, anstatt textbasierte Benutzeroberflächen, eingegebene Befehlsetiketten oder Textnavigation. GUIs wurden in Reaktion auf die wahrgenommene steile Lernkurve von Kommandozeilenschnittstellen (CLIs) eingeführt, die Befehle auf einer Computertastatur eingeben müssen. Die Aktionen in einer GUI werden in der Regel durch direkte Manipulation der grafischen Elemente durchgeführt. Über Computer hinaus werden GUIs in vielen mobilen Geräten wie MP3-Playern, tragbaren Medienplayern, Gaming-Geräten, Smartphones und kleineren Haushalts-, Büro- und Industriesteuerungen verwendet. Der Begriff GUI ist tendenziell nicht auf andere unterdisplay-Auflösungstypen von Schnittstellen, wie Videospiele (wo Head-up-Display (HUD) bevorzugt ist), oder auch nicht mit Flachbildschirmen, wie volumetrische Displays, da der Begriff auf den Umfang von zweidimensionalen Bildschirmen beschränkt ist, die generische Informationen beschreiben können, in der Tradition der Informatikforschung am Xerox Palo Alto Research Center. Die Gestaltung der visuellen Zusammensetzung und des zeitlichen Verhaltens einer GUI ist ein wichtiger Bestandteil der Software-Anwendungs-Programmierung im Bereich der Mensch-Computer-Interaktion. Ziel ist es, die Effizienz und die einfache Nutzung für die zugrunde liegende logische Gestaltung eines gespeicherten Programms zu verbessern, eine Designdisziplin namens Usability. Methoden der nutzerzentrierten Gestaltung werden verwendet, um sicherzustellen, dass die im Design eingeführte visuelle Sprache den Aufgaben gut entspricht. Die sichtbaren grafischen Schnittstellenmerkmale einer Anwendung werden manchmal als Chrom oder GUI (ausgesprochene Gooey) bezeichnet. Typischerweise interagieren Benutzer mit Informationen, indem sie visuelle Widgets manipulieren, die Interaktionen für die Art von Daten, die sie halten, ermöglichen. Die Widgets einer gut gestalteten Schnittstelle werden ausgewählt, um die notwendigen Aktionen zu unterstützen, um die Ziele der Nutzer zu erreichen. Ein Modell-Ansicht-Controller ermöglicht flexible Strukturen, in denen die Schnittstelle unabhängig und indirekt mit Applikationsfunktionen verknüpft ist, so dass die GUI leicht angepasst werden kann. Dies ermöglicht es Benutzern, eine andere Haut auf Wunsch zu wählen oder zu entwerfen, und erleichtert die Arbeit des Designers, die Schnittstelle zu ändern, wie Benutzer Bedürfnisse entwickeln. Gute Benutzeroberfläche Design bezieht sich auf Benutzer mehr, und auf Systemarchitektur weniger. Große Widgets, wie Fenster, stellen in der Regel einen Rahmen oder Container für den Hauptpräsentationsinhalt wie eine Webseite, E-Mail-Nachricht oder Zeichnung zur Verfügung. Kleinere wirken in der Regel als Benutzer-Eingabe-Tool. Als anwendungsspezifische grafische Benutzeroberflächen kann eine GUI auf die Anforderungen eines Vertikalmarktes ausgelegt werden. Beispiele sind automatisierte Tellermaschinen (ATM,) Verkaufsstellen (POS) Touchscreens in Restaurants, Self-Service-Checkouts in einem Einzelhandelsgeschäft, Airline Self-Ticket und Check-in, Informations-Kioske in einem öffentlichen Raum, wie ein Bahnhof oder ein Museum, und Monitore oder Kontrollschirme in einer eingebetteten industriellen Anwendung, die ein Echtzeit-Betriebssystem (RTOS) verwenden. In den 1980er Jahren, Handys und Handheld-Spiel-Systeme auch verwendet Anwendung spezifische Touchscreen-GUIs. Neue Automobile nutzen GUIs in ihren Navigationssystemen und Multimedia-Centern oder Navigation Multimedia-Center-Kombinationen. Beispiele Beispiel graphische Desktop-Umgebungen Komponenten A GUI verwendet eine Kombination von Technologien und Geräten, um eine Plattform zu bieten, mit der Nutzer interagieren können, für die Aufgaben der Sammlung und Erstellung von Informationen. Eine Reihe von Elementen, die einer visuellen Sprache entsprechen, haben sich entwickelt, um in Computern gespeicherte Informationen darzustellen. Dies erleichtert es Menschen mit wenigen Computerkenntnissen, mit Computersoftware zu arbeiten und zu verwenden. Die häufigste Kombination solcher Elemente in GUIs ist die Fenster, Icons, Menüs, Pointer (WIMP) Paradigma, vor allem in persönlichen Computern. Der WIMP-Stil der Interaktion verwendet ein virtuelles Eingabegerät, um die Position der Schnittstelle eines Zeigers, meist eine Maus, darzustellen und Informationen in Fenstern organisiert und mit Symbolen dargestellt. Verfügbare Befehle werden zusammen in Menüs kompiliert und Aktionen werden durchgeführt, um Gesten mit dem Zeigergerät zu machen. Ein Fenstermanager erleichtert die Interaktionen zwischen Fenstern, Anwendungen und dem Fenstersystem. Das Fenstersystem behandelt Hardware-Geräte wie Zeigegeräte, Grafik-Hardware und Positionierung des Zeigers. In Personalcomputern werden alle diese Elemente durch eine Desktop-Metaphore modelliert, um eine Simulation zu erzeugen, die als Desktop-Umgebung bezeichnet wird, in der das Display einen Desktop darstellt, auf dem Dokumente und Ordner von Dokumenten platziert werden können. Fenstermanager und andere Software kombinieren, um die Desktop-Umgebung mit unterschiedlichem Realismus zu simulieren. Post-WIMP-Schnittstelle Kleinere App-Mobilgeräte wie persönliche digitale Assistenten (PDAs) und Smartphones verwenden typischerweise die WIMP-Elemente mit unterschiedlichen vereinheitlichten Metaphern, aufgrund von Einschränkungen im Raum und verfügbaren Eingabegeräten. Anwendungen, für die WIMP nicht gut geeignet ist, können neuere Interaktionstechniken verwenden, kollektiv post-WIMP-Benutzeroberflächen. Ab 2011 verwenden einige Touchscreen-basierte Betriebssysteme wie Apples iOS (iPhone) und Android die Klasse von GUIs namens post-WIMP. Diese Support-Stile der Interaktion mit mehr als einem Finger in Kontakt mit einem Display, die Handlungen wie z.B. Quetschen und Drehen ermöglicht, die von einem Zeiger und Maus unterstützt werden. Interaction Human Interface-Geräte, für die effiziente Interaktion mit einer GUI umfassen eine Computertastatur, insbesondere zusammen mit Tastaturkürzel, Zeigevorrichtungen für die Cursor (oder eher Zeiger) Steuerung: Maus, Zeige Stick, Touchpad, Trackball, Joystick, virtuelle Tastaturen und Head-up-Displays (translucent information devices on the eye level.) Es gibt auch Aktionen, die von Programmen durchgeführt werden, die die GUI beeinflussen. Beispielsweise gibt es Komponenten wie Inotify oder D-Bus, um die Kommunikation zwischen Computerprogrammen zu erleichtern. Geschichte Frühe Anstrengungen Ivan Sutherland entwickelte Sketchpad 1963, weit verbreitet als das erste grafische computergestützte Designprogramm. Es benutzte einen Leuchtstift, um Objekte in Ingenieurzeichnungen in Echtzeit mit koordinierten Grafiken zu erstellen und zu manipulieren. In den späten 1960er Jahren entwickelten Forscher am Stanford Research Institute unter der Leitung von Douglas Engelbart das On-Line System (NLS), das mit textbasierten Hyperlinks, die mit einem neuen Gerät manipuliert wurden, die Maus verwendet. (Eine 1968er Demonstration von NLS wurde als "Die Mutter aller Demos" bekannt.) In den 1970er Jahren wurden Engelbarts Ideen weiter verfeinert und auf Grafiken von Forschern von Xerox PARC und speziell Alan Kay erweitert, der über textbasierte Hyperlinks ging und eine GUI als Hauptschnittstelle für die Smalltalk Programmiersprache benutzte, die auf dem 1973 veröffentlichten Xerox Alto Computer lief. Die meisten modernen Universal-GUIs stammen aus diesem System. Die Xerox PARC Benutzeroberfläche bestand aus grafischen Elementen wie Fenstern, Menüs, Radiotasten und Kontrollkästchen. Das Konzept der Ikonen wurde später von David Canfield Smith vorgestellt, der unter der Führung von Kay eine Dissertation zum Thema geschrieben hatte. Die PARC-Benutzeroberfläche verwendet zusammen mit einer Tastatur ein Zeigegerät. Diese Aspekte können durch die Verwendung des alternativen Begriffs und Akronym für Fenster, Icons, Menüs, Zeigegerät (WIMP.) Dieser Aufwand gipfelte im Jahr 1973 Xerox Alto, dem ersten Computer mit einer GUI, obwohl das System nie kommerzielle Produktion erreicht. Der erste kommerziell erhältliche Computer mit GUI war 1979 PERQ-Workstation, hergestellt von Three Rivers Computer Corporation. Sein Design wurde von der Arbeit bei Xerox PARC stark beeinflusst. Im Jahr 1981 hat Xerox das Alto schließlich in Form eines neuen und erweiterten Systems – das Xerox 8010 Informationssystem – als Xerox Star bezeichnet. Diese frühen Systeme veranlassten viele andere GUI-Bemühungen, darunter Lisp-Maschinen von Symbolics und anderen Herstellern, die Apple Lisa (die das Konzept der Menüleiste und Fenstersteuerungen präsentierte) im Jahr 1983, der Apple Macintosh 128K im Jahr 1984, und die Atari ST mit Digital Research's GEM, und Commodore Amiga im Jahr 1985. Vise Auf wurde 1983 für die IBM PC kompatiblen Computer veröffentlicht, war aber aufgrund seiner hohen Hardware-Anforderungen nie beliebt. Dennoch war es ein entscheidender Einfluss auf die zeitgenössische Entwicklung von Microsoft Windows. Apple, Digital Research, IBM und Microsoft nutzten viele der Ideen von Xerox, um Produkte zu entwickeln, und IBM's Common User Access Spezifikationen bildeten die Basis der Benutzeroberflächen, die in Microsoft Windows, IBM OS/2 Präsentation Manager und dem Unix Motif Toolkit und Fenstermanager verwendet werden. Diese Ideen entwickelten sich, um die in aktuellen Versionen von Microsoft Windows gefundene Schnittstelle und in verschiedenen Desktop-Umgebungen für Unix-ähnliche Betriebssysteme wie macOS und Linux zu erstellen. So haben die meisten aktuellen GUIs weit verbreitete Idiome. Popularization GUIs waren in den frühen 1980er Jahren ein heißes Thema. Die Apple Lisa wurde 1983 veröffentlicht und es gab verschiedene Fenstersysteme für DOS-Betriebssysteme (einschließlich PC GEM und PC/GEOS). Individuelle Anwendungen für viele Plattformen präsentierten ihre eigenen GUI-Varianten. Trotz der Vorteile der GUIs befragten viele Bewerter den Wert des gesamten Konzepts, indem sie Hardwarelimits und Probleme bei der Suche nach kompatibler Software betonten. Im Jahr 1984 veröffentlichte Apple einen Fernsehspot, der den Apple Macintosh während der Telecast von Super Bowl XVIII von CBS eingeführt, mit Allusionen zu George Orwells bekanntem Roman Nineteen Achtzig-Four. Ziel der Werbung war es, die Menschen über Computer nachzudenken, die benutzerfreundliche Schnittstelle als Personalcomputer zu identifizieren, der von früheren geschäftsorientierten Systemen wegging und eine Signaturdarstellung von Apple-Produkten wurde. Windows 95, begleitet von einer umfangreichen Marketing-Kampagne, war ein großer Erfolg auf dem Markt zu starten und wurde in Kürze das beliebteste Desktop-Betriebssystem. Im Jahr 2007, mit dem iPhone und später im Jahr 2010 mit der Einführung des iPad, Apple populärte den post-WIMP-Stil der Interaktion für Multi-Touch-Bildschirme, und diese Geräte wurden als Meilensteine in der Entwicklung von mobilen Geräten betrachtet. Die GUIs, die den meisten Menschen seit Mitte 2010 bekannt sind, sind Microsoft Windows, macOS und die X-Fenster-System-Schnittstellen für Desktop- und Laptop-Computer, und Android, Apples iOS, Symbian, BlackBerry OS, Windows Phone / Windows 10 Mobile, Tizen, WebOS und Firefox OS für handheld (Smartphone) Geräte. Vergleich zu anderen Schnittstellen Kommandozeilenschnittstellen Da die in Kommandozeilenschnittstellen verfügbaren Befehle viele sein können, können komplexe Operationen mit einer kurzen Folge von Wörtern und Symbolen durchgeführt werden. Dies ermöglicht eine höhere Effizienz und Produktivität, wenn viele Befehle erlernt werden, aber das Erreichen dieser Ebene dauert einige Zeit, weil die Befehlswörter nicht leicht zu erkennen oder mnemonic. Auch kann die Verwendung der Befehlszeile langsam und fehleranfällig werden, wenn Benutzer lange Befehle eingeben müssen, die viele Parameter oder mehrere verschiedene Dateinamen auf einmal enthalten. Fenster, Icons, Menüs, Pointer (WIMP)-Schnittstellen präsentieren Benutzer mit vielen Widgets, die einige der verfügbaren Befehle des Systems darstellen und auslösen können. GUIs können ziemlich hart gemacht werden, wenn Dialoge tief in einem System begraben oder bei Neugestaltungen an verschiedene Stellen bewegt werden. Auch Icons und Dialogboxen sind in der Regel schwieriger für Benutzer zu Script. WIMPs verwenden umfangreiche Modi, da die Bedeutung aller Tasten und Klicks auf bestimmte Positionen auf dem Bildschirm die ganze Zeit neu definiert werden. Befehlszeilenschnittstellen verwenden Moden nur in begrenzten Formen, wie z.B. für aktuelle Verzeichnis- und Umgebungsvariablen. Die meisten modernen Betriebssysteme bieten sowohl eine GUI als auch ein gewisses Niveau eines CLI, obwohl die GUIs in der Regel mehr Aufmerksamkeit erhalten. Die GUI ist in der Regel WIMP-basiert, obwohl gelegentlich andere Metapheroberflächen, wie sie in Microsoft Bob, 3dwm oder File System Visualizer verwendet werden. GUI Wrapper Graphische Benutzeroberfläche (GUI) Wrapper finden einen Weg um die Befehlszeilenschnittstellenversionen (CLI) von (typischerweise) Linux und Unix-ähnlichen Softwareanwendungen und deren textbasierten Benutzeroberflächen oder eingegebenen Befehlsetiketten. Während befehlszeilen- oder textbasierte Anwendungen den Benutzern erlauben, ein Programm nicht interaktiv auszuführen, vermeiden GUI-Wrapper die steile Lernkurve der Kommandozeile, die Befehle auf der Tastatur eingeben muss. Durch das Starten eines GUI-Wrappers können Nutzer intuitiv mit, starten, stoppen und seine Arbeitsparameter ändern, beispielsweise durch grafische Symbole und visuelle Indikatoren einer Desktop-Umgebung. Anwendungen können auch beide Schnittstellen bereitstellen, und wenn sie die GUI in der Regel eine WIMP-Wrapper um die Kommandozeilenversion ist. Dies ist insbesondere bei Anwendungen für Unix-ähnliche Betriebssysteme üblich. Letzteres wurde zuerst implementiert, weil es den Entwicklern erlaubte, sich ausschließlich auf die Funktionalität ihres Produkts zu konzentrieren, ohne dabei auf Schnittstellendetails wie das Design von Icons und das Setzen von Tasten zu stören. So können die Nutzer auch das Programm in einem Shell-Skript ausführen. Dreidimensionale grafische Benutzeroberflächen (3D GUIs) Es wurden mehrere Versuche unternommen, eine multi-user dreidimensionale Umgebung oder 3D GUI zu schaffen, darunter Sun's Project Looking Glass, Metisse, die ähnlich wie Project Looking Glass, BumpTop war, wo Benutzer Dokumente und Fenster mit realistischer Bewegung und Physik manipulieren können, als wären sie physikalische Dokumente, und das Croquet Project, das sich auf die offenen Cobalt- und Open Croquet-Bemühungen bewegte. Die Zoom-Benutzeroberfläche (ZUI) ist eine verwandte Technologie, die die Vorteile der Darstellung von 3D-Umgebungen ohne ihre Usability Nachteile von Orientierungsproblemen und versteckten Objekten zu liefern verspricht. Es ist ein logischer Fortschritt auf der GUI, Mischen einer dreidimensionalen Bewegung mit zweidimensionalen oder 2,5D Vektorobjekten. Im Jahr 2006 führte Hillcrest Labs die erste Zoom-Benutzeroberfläche für das Fernsehen ein. Für typische Computerdisplays ist dreidimensional ein Fehlrechner - ihre Displays sind zweidimensional, beispielsweise Metisse, die sich als 2,5-dimensionales UI charakterisiert. Semantisch verwenden die meisten grafischen Benutzeroberflächen jedoch drei Dimensionen. Mit Höhe und Breite bieten sie eine dritte Dimension von Schicht- oder Stapelsiebelementen übereinander. Dies kann visuell durch eine illusionäre transparente Wirkung auf dem Bildschirm dargestellt werden, was den Vorteil bietet, dass Informationen in Hintergrundfenstern noch gelesen werden können, wenn nicht mit interagiert. Oder die Umgebung kann einfach die Hintergrundinformationen verbergen, möglicherweise die Unterscheidung durch Zeichnen eines Schatteneffektes darüber. Einige Umgebungen nutzen die Methoden der 3D-Grafik, um virtuelle dreidimensionale Benutzeroberflächenobjekte auf dem Bildschirm zu projizieren. Diese werden häufig in Science-Fiction-Filmen gezeigt (siehe unten für Beispiele). Mit zunehmender Verarbeitungsleistung von Computergrafikhardware wird dies weniger ein Hindernis für ein reibungsloses Nutzererlebnis. Dreidimensionale Grafiken werden derzeit meist in Computerspielen, Kunst und computergestütztem Design (CAD) verwendet. Eine dreidimensionale Rechenumgebung kann auch in anderen Anwendungen, wie Molekulargrafiken, Flugzeugdesign und Phase Equilibrium Berechnungen/Design von Einheitsbetrieben und chemischen Prozessen, nützlich sein. Technologien Die Verwendung von dreidimensionalen Grafiken ist in Mainstream-Betriebssystemen immer häufiger geworden, von der Schaffung attraktiver Schnittstellen, als Eye Candy bezeichnet, zu funktionalen Zwecken, die nur mit drei Dimensionen möglich sind. Zum Beispiel wird die Benutzervermittlung durch Drehen eines Würfels dargestellt, der Gesichter sind der Arbeitsraum jedes Benutzers, und die Fensterverwaltung werden über einen Rolodex-Stil Flipping-Mechanismus in Windows Vista (siehe Windows Flip 3D) dargestellt. In beiden Fällen verwandelt das Betriebssystem Fenster auf-die-fly und aktualisiert den Inhalt dieser Fenster weiterhin. Schnittstellen für das X Window System haben auch erweiterte dreidimensionale Benutzeroberflächen durch Fenstermanager wie Beryl, Compiz und KWin mithilfe der AIGLX- oder XGL-Architekturen implementiert, so dass die Verwendung von OpenGL die Interaktionen der Benutzer mit dem Desktop animieren kann. In der Science-Fiction erschienen dreidimensionale GUIs in Science-Fiction-Literatur und Filmen, bevor sie technisch machbar oder im gemeinsamen Gebrauch waren. Zum Beispiel: Der amerikanische Film Jurassic Park von 1993 verfügt über den dreidimensionalen Dateimanager File System Navigator von Silicon Graphics, einen realen Dateimanager für Unix Betriebssysteme. Der Film Minority Report hat Szenen von Polizisten mit spezialisierten 3D-Datensystemen. In der Prosafiktion wurden dreidimensionale Benutzeroberflächen als immersible Umgebungen wie William Gibsons Cyberspace oder Neal Stephensons Metaverse dargestellt. Viele futuristische Vorstellungen von Benutzeroberflächen verlassen sich stark auf objektorientierte Benutzeroberfläche (OOUI) und besonders objektorientierte grafische Benutzeroberfläche (OOGUI). Siehe auch Hinweise Referenzen Externe Links Evolution der grafischen Benutzeroberfläche in den letzten 50 Jahren von Raj Lal Die Männer, die wirklich die GUI von Clive Akass Graphical User Interface Gallery, Screenshots von verschiedenen GUIs Marcin Wichary's GUIdebook, Graphical User Interface Galerie: über 5500 Screenshots von GUI, Anwendung und Icon History Die Real History of the GUI von Mike Tuck In The Beginning Was The Command Line von Neal Stephenson 3D Graphical User Interfaces (PDF) Einschließlich einer Thermodinamic Review und einer grafischen Benutzeroberfläche (GUI) für Oberflächen/Tie-lines/Hessian Matrix Analyse - Universität Alicante (Reyes-Labarta et al. 2015-18)