Ein Sicherheitsprotokoll (Kryptographisches Protokoll oder Verschlüsselungsprotokoll) ist ein abstraktes oder konkretes Protokoll, das eine sicherheitsbezogene Funktion ausführt und kryptographische Methoden anwendet, oft als Sequenzen kryptographischer Primitiven. Ein Protokoll beschreibt, wie die Algorithmen verwendet werden sollen. Ein ausreichend detailliertes Protokoll enthält Details zu Datenstrukturen und -darstellungen, an welcher Stelle es zur Realisierung mehrerer, interoperabler Versionen eines Programms verwendet werden kann. Cryptographische Protokolle sind weit verbreitet für den sicheren Datentransport auf Anwendungsebene. Ein kryptographisches Protokoll enthält in der Regel zumindest einige dieser Aspekte: Schlüsselvereinbarung oder Einrichtung Entity-Authentifizierung Symmetrische Verschlüsselung und Nachrichten-Authentifizierung Materialbau Gesicherte Anwendungsebene Datentransport Nicht-Repudiation Methoden Secret Sharing Methoden Sichere Multi-Partycomputation Beispielsweise ist Transport Layer Security (TLS) ein kryptographisches Protokoll, das verwendet wird, um Web (HTTPS) Verbindungen zu sichern. Es verfügt über einen Entity-Authentifizierungsmechanismus, basierend auf dem X.509-System; eine Key-Setup-Phase, in der ein symmetrischer Verschlüsselungsschlüssel durch Verwendung von Public-key-Kryptographie gebildet wird; und eine Anwendungsebene Datentransport-Funktion. Diese drei Aspekte haben wichtige Zusammenhänge. Standard TLS hat keine Nicht-Repudiationsunterstützung. Es gibt auch andere Arten von kryptographischen Protokollen, und sogar der Begriff selbst hat verschiedene Messwerte; Kryptographische Anwendungsprotokolle verwenden oft eine oder mehrere zugrunde liegende Schlüsselvereinbarungsverfahren, die auch manchmal selbst als "Kryptographische Protokolle" bezeichnet werden. So verwendet TLS beispielsweise den sogenannten Diffie-Hellman-Schlüsselaustausch, der zwar nur ein Teil von TLS pro se ist, aber Diffie-Hellman kann als vollständiges kryptographisches Protokoll an sich für andere Anwendungen angesehen werden. Erweiterte kryptographische Protokolle Eine Vielzahl von kryptographischen Protokollen gehen über die traditionellen Ziele der Datengeheimnis, Integrität und Authentifizierung hinaus, um auch eine Vielzahl von anderen gewünschten Eigenschaften der computervermittelten Zusammenarbeit zu sichern. Blinde Signaturen können für digitale Bargeld- und digitale Anmeldeinformationen verwendet werden, um zu beweisen, dass eine Person ein Attribut oder Recht besitzt, ohne die Identität dieser Person oder die Identität von Parteien zu enthüllen, mit denen diese Person umgegangen ist. Eine sichere digitale Zeiterfassung kann verwendet werden, um zu beweisen, dass Daten (auch wenn vertraulich) zu einem bestimmten Zeitpunkt existierten. Eine sichere Mehrparteienrechnung kann dazu verwendet werden, Antworten (z.B. die Bestimmung des höchsten Gebots in einer Auktion) basierend auf vertraulichen Daten (z.B. private Gebote) zu berechnen, so dass die Teilnehmer bei Abschluss des Protokolls nur ihre eigene Eingabe und Antwort kennen. End-to-End-Auditable Voting-Systeme bieten Sets von wünschenswerten Datenschutz- und Auditability-Eigenschaften zur Durchführung von E-voting. Unvorhersehbare Signaturen beinhalten interaktive Protokolle, die es dem Unterzeichner ermöglichen, eine Fälschung zu beweisen und zu begrenzen, die die Signatur überprüfen kann. Deniable Verschlüsselung Augments Standardverschlüsselung, indem es für einen Angreifer unmöglich macht, die Existenz einer einfachen Textnachricht mathematisch zu beweisen. Digitale Mixes schaffen bahnbrechende Kommunikation. Formale Verifikation Cryptographische Protokolle können manchmal formal auf abstrakter Ebene überprüft werden. Wenn es getan wird, besteht die Notwendigkeit, die Umwelt zu formieren, in der das Protokoll arbeitet, um Bedrohungen zu identifizieren. Dies geschieht häufig durch das Dolev-Yao-Modell. Logiken, Konzepte und Kalkuli, die zur formalen Begründung von Sicherheitsprotokollen verwendet werden: Burrows–Abadi–Needham-Logik (BAN-Logik)Dolev–Yao-Modell π-calculus Protokoll-Zusammensetzungslogik (PCL) StrandraumForschungsprojekte und Werkzeuge zur formalen Überprüfung von Sicherheitsprotokollen: Automatisierte Validierung von Internet Security Protocols and Applications (AVISPA) und Folgeprojekt AVANTSSARConstraintLogic-based Attack Searcher (CL-AtSe) Open-Source Fixed-Point Model-Checker (OFMC)SAT-based Model-Checker (SATMC)CasperCryptoVerif Cryptographic Protocol Shapes Analyzer (CPSA)KnowledgeIn Security Protocols (KISS)Maude-NRL Protocol Analyzer(Maude-NPA)ProVerif Scyther Tamarin Prover Notion of Abstract Protocol Um ein Protokoll formal zu überprüfen, wird es oft mit Alice & Bob-Notation abstrahiert und modelliert. Ein einfaches Beispiel ist: A → B: { X } K A, B {\displaystyle A\rightarrow B:\{X\}_{K_{A,BDies besagt, dass Alice A {\displaystyle A} eine Nachricht für Bob B {\displaystyle B} beabsichtigt, bestehend aus einer Meldung X {\displaystyle X} verschlüsselt unter dem gemeinsamen Schlüssel K A, B {\displaystyle K_{A,B} . Beispiele Internet Key Exchange IPsec Kerberos Off-the-Record Messaging Point to Point Protocol Secure Shell (SSH) Signal Protocol Transport Layer Security ZP Siehe auch Secure Channel Security Protocols Open Repository Referenzen Lesen Ermoshina, Ksenia; Musiani, Francesca; Halpin, Harry (September 2016). "End-to-End Verschlüsselte Messaging Protokolle: Eine Übersicht" (PDF.) In Bagnoli, Franco; et al.(eds.). Internet Science.INSCI 2016.Florenz, Italien: Springer.pp.244–254.doi:10.1007/978-3-319-45982-0_22.ISBN 978-3-319-45982-0. Externe Links Sichere Protokolle öffnen Repository