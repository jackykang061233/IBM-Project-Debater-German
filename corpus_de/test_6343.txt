Das Domain Name System (DNS) ist ein hierarchisches und dezentrales Namenssystem für Computer, Dienste oder andere mit dem Internet oder einem privaten Netzwerk verbundene Ressourcen. Es verbindet verschiedene Informationen mit Domänennamen, die jedem der teilnehmenden Organisationen zugeordnet sind. Besonders hervorzuheben ist, dass es einfachere Domainnamen in die numerischen IP-Adressen übersetzt, die für die Ortung und Identifizierung von Computerdiensten und Geräten mit den zugrunde liegenden Netzwerkprotokollen erforderlich sind. Durch die Bereitstellung eines weltweiten, verteilten Verzeichnisdienstes ist das Domain Name System seit 1985 ein wesentlicher Bestandteil der Funktionalität des Internets. Das Domain Name System delegiert die Verantwortung, Domänennamen zuzuordnen und diese Namen auf Internet-Ressourcen zuzuordnen, indem es für jede Domäne maßgebliche Nameserver bezeichnet. Netzwerkadministratoren können Behörden über Unterdomänen ihres zugewiesenen Namensraums an andere Namenserver übertragen. Dieser Mechanismus bietet verteilten und fehlertoleranten Service und wurde entwickelt, um eine einzige große zentrale Datenbank zu vermeiden. Das Domain Name System gibt auch die technische Funktionalität des Datenbankdienstes an, der an seinem Kern liegt. Es definiert das DNS-Protokoll, eine detaillierte Spezifikation der im DNS verwendeten Datenstrukturen und Datenkommunikationsaustausche im Rahmen der Internet Protocol Suite. Das Internet unterhält zwei Hauptnamensbereiche, die Domänennamehierarchie und die Internet Protocol (IP) Adressräume. Das Domain Name System unterhält die Domain Name Hierarchie und bietet Übersetzungsdienste zwischen ihm und den Adressräumen. Internetnameserver und ein Kommunikationsprotokoll implementieren das Domain Name System. Ein DNS-Namensserver ist ein Server, der die DNS-Einträge für eine Domain speichert; ein DNS-Namensserver reagiert mit Antworten auf Abfragen gegen seine Datenbank. Die häufigsten Arten von Datensätzen, die in der DNS-Datenbank gespeichert sind, sind für Start of Authority (SOA,) IP-Adressen (A und AAAA,) SMTP-Mail-Austauscher (MX,) Namensserver (NS,) Zeiger für reverse DNS-Lookups (PTR,) und Domain Name Aliases (CNAME). Obwohl nicht beabsichtigt, eine allgemeine Zweckdatenbank zu sein, wurde DNS im Laufe der Zeit erweitert, um Datensätze für andere Arten von Daten für entweder automatische Lookups, wie DNSSEC-Aufzeichnungen, oder für menschliche Abfragen wie verantwortliche Person (RP) Aufzeichnungen zu speichern. Als allgemeine Anwendungsdatenbank wurde das DNS auch bei der Bekämpfung von unaufgeforderter E-Mail (Spam) verwendet, indem eine Echtzeit-Schwarzlochliste (RBL) gespeichert wird. Die DNS-Datenbank wird traditionell in einer strukturierten Textdatei, der Zonendatei gespeichert, aber andere Datenbanksysteme sind gemeinsam. Funktion Eine häufig verwendete Analogie, um das Domain Name System zu erklären, ist, dass es als Telefonbuch für das Internet dient, indem man menschfreundliche Computer-Hostnamen in IP-Adressen überträgt. Beispielsweise übersetzt der Domainname www.example.com die Adressen 93.184.216.34 (IPv4) und 2606:2800:220:1:248:1893:25c8:1946 (IPv6). Das DNS kann schnell und transparent aktualisiert werden, so dass sich der Standort eines Dienstes im Netzwerk ändert, ohne die Endbenutzer zu beeinflussen, die den gleichen Hostnamen weiter verwenden. Nutzer nutzen dies, wenn sie aussagekräftige Uniform Resource Locators (URLs) und E-Mail-Adressen verwenden, ohne zu wissen, wie der Computer die Dienste tatsächlich lokalisiert. Eine wichtige und allgegenwärtige Funktion des DNS ist seine zentrale Rolle bei verteilten Internet-Diensten wie Cloud-Services und Content Delivery Networks. Wenn ein Benutzer über eine URL auf einen verteilten Internetdienst zugreift, wird der Domänenname der URL in die IP-Adresse eines Servers übersetzt, der dem Benutzer nahe ist. Die Schlüsselfunktionalität des hier ausgenutzten DNS ist, dass verschiedene Benutzer gleichzeitig verschiedene Übersetzungen für den gleichen Domainnamen erhalten können, ein wichtiger Punkt der Divergenz von einer traditionellen Telefonbuchansicht des DNS. Dieser Prozess der Verwendung des DNS, um proximale Server Benutzern zuzuordnen, ist der Schlüssel, schnellere und zuverlässigere Antworten im Internet zu bieten und wird von den meisten großen Internet-Diensten weit verbreitet. Das DNS spiegelt die Struktur der administrativen Verantwortung im Internet wider. Jede Subdomain ist eine Zone der administrativen Autonomie, die einem Manager übertragen wird. Für die von einem Register betriebenen Zonen werden administrative Informationen oft durch die RDAP- und WHOIS-Dienste des Registers ergänzt. Diese Daten können verwendet werden, um Erkenntnisse über einen bestimmten Host im Internet zu gewinnen und die Verantwortung zu verfolgen. Geschichte Die Verwendung eines einfacheren, unvergesslicheren Namens anstelle der numerischen Adresse eines Hosts stammt aus der ARPANET-Ära. Das Stanford Research Institute (jetzt SRI International) hielt eine Textdatei namens HOSTS. TXT, der Hostnamen auf die numerischen Adressen von Computern auf dem ARPANET abbildet. Elizabeth Feinler entwickelte und pflegte das erste ARPANET-Verzeichnis. Die Wartung von numerischen Adressen, die die Assigned Numbers List genannt wurden, wurde von Jon Postel am Institut für Informationswissenschaften der Universität Südkaliforniens (ISI) betreut, dessen Team eng mit SRI zusammenarbeitete. Adressen wurden manuell zugewiesen. Computer, einschließlich ihrer Hostnamen und Adressen, wurden in die Primärdatei aufgenommen, indem Sie sich telefonisch während der Geschäftszeiten an das Netzwerkinformationszentrum (NIC) von Elizabeth Feinler wenden. Später hat Feinler ein WHOIS-Verzeichnis auf einem Server in der NIC eingerichtet, um Informationen über Ressourcen, Kontakte und Einrichtungen abzurufen. Sie und ihr Team haben das Konzept von Domains entwickelt. Feinler schlug vor, dass Domains auf dem Standort der physikalischen Adresse des Computers basieren sollten. Computer an Bildungseinrichtungen hätten beispielsweise die Domain edu. Von 1972 bis 1989 leitete sie und ihr Team das Host Naming Register. Anfang der 80er Jahre war die Aufrechterhaltung eines einzigen zentralisierten Host-Tischs langsam und unhandlich geworden, und das aufstrebende Netzwerk erforderte ein automatisiertes Benennungssystem, um technische und personelle Probleme zu lösen. Postel leitete die Aufgabe, einen Kompromiss zwischen fünf konkurrierenden Lösungsvorschlägen für Paul Mockapetris zu schaffen. Mockapetris hat 1983 das Domain Name System erstellt. Die Internet Engineering Task Force veröffentlichte die ursprünglichen Spezifikationen in RFC 882 und RFC 883 im November 1983. 1984 schrieben vier UC Berkeley-Studenten, Douglas Terry, Mark Painter, David Riggle und Songnian Zhou die erste Unix-Name-Server-Implementierung für die Berkeley Internet Name Domain, gemeinhin als BIND bezeichnet. Im Jahr 1985 hat Kevin Dunlap von DEC die DNS-Implementierung erheblich überarbeitet. Mike Karels, Phil Almquist und Paul Vixie haben BIND seitdem beibehalten. Anfang der 1990er Jahre wurde BIND auf die Windows NT-Plattform portiert. Im November 1987 übertrafen RFC 1034 und RFC 1035 die DNS-Spezifikationen von 1983. Mehrere zusätzliche Anfrage für Kommentare haben Erweiterungen auf die Kern-DNA-Protokolle vorgeschlagen. Struktur Domain Name Raum Der Domänennameraum besteht aus einer Baumdatenstruktur. Jeder Knoten oder Blatt im Baum hat ein Etikett und null oder mehrere Ressourcensätze (RR), die Informationen, die mit dem Domänennamen verbunden sind, halten. Der Domänenname selbst besteht aus dem Etikett, das mit dem Namen seines Stammknotens auf der rechten Seite konkatiert ist, getrennt durch einen Punkt. Der Baum unterteilt sich in Zonen, die in der Wurzelzone beginnen. Eine DNS-Zone kann aus nur einer Domäne bestehen, oder kann aus vielen Domänen und Subdomains bestehen, abhängig von den administrativen Entscheidungen des Zone Managers. DNS kann auch nach Klasse unterteilt werden, an die die separaten Klassen als eine Reihe von parallelen Namensraumbäumen gedacht werden können. Die administrative Verantwortung für jede Zone kann durch die Schaffung zusätzlicher Zonen geteilt werden. Die Behörde über die neue Zone soll an einen benannten Namensserver delegiert werden. Die Elternzone ist für die neue Zone nicht maßgeblich. Domainname syntax, Internationalisierung Die endgültigen Beschreibungen der Regeln für die Bildung von Domänennamen erscheinen in RFC 1035, RFC 1123, RFC 2181 und RFC 5892. Ein Domänenname besteht aus einem oder mehreren, technisch bezeichneten Etiketten, die konventionell konkatiert sind und durch Punkte, wie z.B...com begrenzt sind. Das rechte Label vermittelt die Top-Level-Domain; zum Beispiel gehört der Domainname www.example.com zum Top-Level-Domain com. Die Hierarchie der Domains steigt von rechts nach links ab; jedes Label nach links gibt eine Unterteilung oder Unterdomäne der Domain nach rechts an. Beispielsweise gibt das Label-Beispiel eine Subdomain der Com-Domain an, und www ist eine Subdomain von example.com. Dieser Baum der Unterteilungen kann bis zu 127 Ebenen haben. Ein Etikett kann null bis 63 Zeichen enthalten. Das Null-Etikett der Länge Null ist für die Wurzelzone reserviert. Der vollständige Domainname kann die Länge 253 Zeichen in seiner Textdarstellung nicht überschreiten. In der internen binären Darstellung des DNS benötigt die maximale Länge 255 Oktette des Speichers, da es auch die Länge des Namens speichert. Obwohl es keine technische Einschränkung gibt, Domänennamen-Etiketten mit einem beliebigen Zeichen zu verhindern, das durch ein Oktett repräsentiert werden kann, verwenden Hostnames ein bevorzugtes Format und Zeichensatz. Die in Etiketten erlaubten Zeichen sind eine Untermenge des ASCII-Zeichensatzes, bestehend aus Zeichen a bis z, A bis Z, Ziffern 0 bis 9 und Bindestrich. Diese Regel ist als LDH-Regel bekannt (Briefe, Ziffern, Bindestrich). Domainnamen werden fallunabhängig interpretiert. Etiketten dürfen nicht mit einem Bindestrich beginnen oder enden. Eine zusätzliche Regel erfordert, dass Top-Level-Domainnamen nicht allzählig sein sollten. Die im DNS erlaubte begrenzte Menge an ASCII-Zeichen verhinderte die Darstellung von Namen und Wörtern vieler Sprachen in ihren nativen Alphabeten oder Skripten. Um dies zu ermöglichen, genehmigte ICANN das Internationalizing Domain Names in Applications (IDNA)-System, durch das Benutzeranwendungen, wie Webbrowser, Unicode-Strings in den gültigen DNS-Zeichensatz mit Punycode abbilden. Im Jahr 2009 genehmigte ICANN die Installation von internationalisierten Domainnamen Landcode Top-Level-Domains (ccTLDs). Darüber hinaus haben viele Register der vorhandenen Top-Level-Domainnamen (TLDs) das IDNA-System, geführt von RFC 5890, RFC 5891, RFC 5892, RFC 5893, übernommen. Namensserver Das Domain Name System wird durch ein verteiltes Datenbanksystem gepflegt, das das Client-Server-Modell verwendet. Die Knoten dieser Datenbank sind die Namensserver. Jede Domain verfügt über mindestens einen autoritären DNS-Server, der Informationen über diese Domain und die Namensserver aller ihm untergeordneten Domänen veröffentlicht. Die Oberseite der Hierarchie wird von den Root-Namen-Servern bedient, die Server zur Abfrage bei der Suche nach einer TLD. Nameserver Ein maßgeblicher Nameserver ist ein Nameserver, der nur Antworten auf DNS-Abfragen von Daten gibt, die von einer Originalquelle, beispielsweise dem Domänenadministrator oder durch dynamische DNS-Methoden, konfiguriert wurden, im Gegensatz zu Antworten, die über eine Abfrage an einen anderen Namensserver erhalten wurden, der nur einen Datencache aufrechterhält. Ein maßgeblicher Nameserver kann entweder ein primärer Server oder ein sekundärer Server sein. Historisch wurden die Begriffe Master/Slave und primär/sekundär manchmal austauschbar verwendet, aber die aktuelle Praxis ist, diese Form zu verwenden. Ein primärer Server ist ein Server, der die Originalkopien aller Zonenaufzeichnungen speichert. Ein sekundärer Server verwendet einen speziellen automatischen Aktualisierungsmechanismus im DNS-Protokoll in der Kommunikation mit seinem primären, um eine identische Kopie der primären Datensätze zu erhalten. Jede DNS-Zone muss eine Reihe von maßgeblichen Namenservern zugeordnet werden. Dieser Serversatz wird in der Stammdomänenzone mit Namenserver (NS)-Aufzeichnungen gespeichert. Ein maßgeblicher Server gibt seinen Status der Bereitstellung endgültiger Antworten an, die als maßgeblich angesehen werden, indem ein Protokoll-Flag gesetzt wird, das "Authoritative Antwort" (AA) Bit in seinen Antworten genannt wird. Dieses Flag wird in der Regel prominent in der Ausgabe von DNS-Administrations-Abfrage-Tools, wie graben, wiedergegeben, um anzuzeigen, dass der antwortende Nameserver eine Autorität für den betreffenden Domainnamen ist. Operation Adressauflösungsmechanismus Domänenname-Resolver bestimmen die für den betreffenden Domänennamen verantwortlichen Domänennamenserver durch eine Abfolge von Abfragen, die mit dem rechten Domänenlabel beginnen. Für den ordnungsgemäßen Betrieb seines Domainnamens-Resolvers ist ein Netzwerk-Host mit einem Initial-Cache (hints) der bekannten Adressen der Rootname-Server konfiguriert. Die Hinweise werden von einem Administrator periodisch aktualisiert, indem er einen Datensatz aus einer zuverlässigen Quelle abruft. Unter der Annahme, dass der Resolver keine geätzten Datensätze hat, um den Prozess zu beschleunigen, beginnt der Auflösungsprozess mit einer Abfrage an einen der Wurzelserver. Im typischen Betrieb beantworten die Root-Server nicht direkt, sondern antworten mit einer Empfehlung auf autoritativere Server, z.B. eine Abfrage für www.wikipedia.org wird auf die Org-Server verwiesen. Der Resolver fragt nun die genannten Server und wiederholt diesen Vorgang iterativ, bis er eine maßgebliche Antwort erhält. Das Diagramm illustriert diesen Prozess für den Host, der vom vollqualifizierten Domainnamen www.wikipedia.org benannt wird." Dieser Mechanismus würde eine große Verkehrslast auf den Root-Servern legen, wenn jede Auflösung im Internet benötigt wird, beginnend an der Wurzel. In der Praxis wird Caching in DNS-Servern verwendet, um die Root-Server zu laden, und dadurch sind Root-Name-Server tatsächlich nur an einem relativ kleinen Teil aller Anfragen beteiligt. Recursive und Caching Name Server Für den Betrieb des Internets sind theoretisch maßgebliche Nameserver ausreichend. Bei nur autoritären Namensservern, die arbeiten, muss jede DNS-Abfrage mit wiederkehrenden Abfragen in der Wurzelzone des Domain Name Systems beginnen und jedes Benutzersystem müsste eine Resolver-Software implementieren, die rekursiv arbeiten kann. Um die Effizienz zu verbessern, den DNS-Verkehr über das Internet zu reduzieren und die Leistungsfähigkeit der Endbenutzer-Anwendungen zu erhöhen, unterstützt das Domain Name System DNS-Cache-Server, die DNS-Abfrage-Ergebnisse für einen Zeitraum speichern, der in der Konfiguration (Zeit-zu-Live) des betreffenden Domain-Namensdatensatzes bestimmt ist. Typischerweise implementieren solche Caching-DNA-Server auch den rekursiven Algorithmus, der notwendig ist, um einen bestimmten Namen, der mit der DNS-Root beginnt, bis zu den autoritären Namensservern der abgefragten Domain zu lösen. Mit dieser Funktion, die im Namensserver implementiert ist, erhalten Anwenderanwendungen Effizienz in Design und Betrieb. Die Kombination von DNS-Caching und wiederkehrenden Funktionen in einem Namensserver ist nicht zwingend; die Funktionen können für spezielle Zwecke unabhängig in Servern implementiert werden. Internet-Dienstleister stellen für ihre Kunden typischerweise wiederkehrende und Caching-Namenserver zur Verfügung. Darüber hinaus implementieren viele Home Networking Router DNS-Caches und Recursors, um die Effizienz im lokalen Netzwerk zu verbessern. DNS-Resolver Die Clientseite des DNS wird als DNS-Resolver bezeichnet. Ein Resolver ist dafür verantwortlich, die Abfragen, die letztlich zu einer vollständigen Auflösung (Übersetzung) der gesuchten Ressource führen, z.B. die Übersetzung eines Domainnamens in eine IP-Adresse, einzuleiten und zu sequenzieren. DNS-Resolver werden durch eine Vielzahl von Abfragemethoden, wie rekursive, nicht rekursive, und iterative klassifiziert. Ein Auflösungsverfahren kann eine Kombination dieser Methoden verwenden. In einer nicht-rekursiven Abfrage sucht ein DNS-Resolver einen DNS-Server, der entweder einen Datensatz liefert, für den der Server autoritativ ist, oder er liefert ein Teilergebnis ohne Abfrage anderer Server. Im Falle eines Cache-DNS-Resolvers liefert die nicht-rekursive Abfrage seines lokalen DNS-Caches ein Ergebnis und reduziert die Last auf vorgeschalteten DNS-Servern, indem DNS-Ressourcenrekorde für einen Zeitraum nach einer anfänglichen Antwort von vorgeschalteten DNS-Servern abgekürzt werden. In einer rekursiven Abfrage sucht ein DNS-Resolver einen einzigen DNS-Server, der wiederum andere DNS-Server im Auftrag des Requesters abfragen kann. Ein einfacher Stub-Resolver, der auf einem Home-Router läuft, stellt beispielsweise typischerweise eine rekursive Abfrage auf den DNS-Server, der vom ISP des Benutzers ausgeführt wird, dar. Eine rekursive Abfrage ist eine, für die der DNS-Server die Abfrage vollständig beantwortet, indem er bei Bedarf andere Nameserver abfragt. Im typischen Betrieb stellt ein Client eine rekursive Abfrage an einen caching rekursiven DNS-Server aus, der anschließend nicht-rekursive Abfragen ausgibt, um die Antwort zu bestimmen und eine einzige Antwort an den Client zurück zu senden. Der Resolver oder ein anderer DNS-Server, der im Auftrag des Resolvers rekursiv handelt, verhandelt die Verwendung von rekursiven Diensten mit Bits in den Abfrage-Headern. DNS-Server sind nicht erforderlich, um wiederkehrende Abfragen zu unterstützen. Das iterative Abfrageverfahren ist ein Prozess, bei dem ein DNS-Resolver eine Kette eines oder mehrerer DNS-Server abfragt. Jeder Server bezieht den Client auf den nächsten Server in der Kette, bis der aktuelle Server die Anfrage vollständig lösen kann. Eine mögliche Auflösung von www.example.com würde beispielsweise einen globalen Root-Server, dann einen Com-Server und schließlich einen example.com-Server abfragen. Kreislaufabhängigkeiten und Leimaufzeichnungen Nameserver in Delegationen werden mit Namen und nicht mit IP-Adresse identifiziert. Dies bedeutet, dass ein auflösender Nameserver eine andere DNS-Anfrage ausstellen muss, um die IP-Adresse des Servers herauszufinden, auf den er verwiesen wurde. Ist der in der Delegation angegebene Name eine Unterdomäne der Domain, für die die Delegation zur Verfügung gestellt wird, so besteht eine kreisförmige Abhängigkeit. In diesem Fall muss der Nameserver, der die Delegation bereitstellt, auch eine oder mehrere IP-Adressen für den in der Delegation genannten maßgeblichen Namensserver bereitstellen. Diese Information wird Leim genannt. Der delegierende Nameserver liefert diesen Leim in Form von Aufzeichnungen im zusätzlichen Abschnitt der DNS-Antwort und stellt die Delegation im Autoritätsteil der Antwort bereit. Ein Leimrekord ist eine Kombination aus Nameserver und IP-Adresse. Wenn z.B. der maßgebliche Nameserver ns1.example.org ist, löst ein Computer, der versucht, www.example.org zu beheben, zunächst ns1.example.org. Da ns1 in example.org enthalten ist, erfordert dies zunächst das Lösen von example.org, das eine kreisförmige Abhängigkeit darstellt. Um die Abhängigkeit zu brechen, enthält der Nameserver für die Top Level Domain org Kleber zusammen mit der Delegation zum Beispiel.org Die Leimaufzeichnungen sind Adressaufzeichnungen, die IP-Adressen für ns1.example.org bereitstellen. Der Resolver verwendet eine oder mehrere dieser IP-Adressen, um einen der maßgeblichen Server der Domain abzufragen, der es ermöglicht, die DNS-Abfrage abzuschließen. Ein Standard-Practice bei der Implementierung von Namensauflösung in Anwendungen ist die Verringerung der Belastung der Domain Name System Server durch Caching-Ergebnisse lokal oder in Zwischenresolver-Hosts. Aus einer DNS-Anfrage gewonnene Ergebnisse sind immer mit der Zeit verbunden, um (TTL) eine Ablaufzeit zu leben, nach der die Ergebnisse verworfen oder erfrischt werden müssen. Das TTL wird vom Administrator des autoritären DNS-Servers gesetzt. Die Gültigkeitsdauer kann von einigen Sekunden bis zu Tagen oder sogar Wochen variieren. Durch diese verteilte Cache-Architektur propagieren sich Änderungen an DNS-Datensätzen nicht sofort im gesamten Netzwerk, sondern benötigen alle Caches, um abzulaufen und nach dem TTL zu aktualisieren. RFC 1912 gibt Grundregeln für die Bestimmung geeigneter TTL-Werte. Einige Resolver können TTL-Werte überschreiben, da das Protokoll den Caching für bis zu sechzig-acht Jahre unterstützt oder überhaupt keinen Cache. Negatives Caching, d.h. das Caching der Tatsache, dass ein Datensatz nicht vorhanden ist, wird durch Namensserver bestimmt, die für eine Zone, die den Start of Authority (SOA)-Datensatz enthalten muss, bei der Meldung von Daten des angeforderten Typs maßgeblich sind. Der Wert des minimalen Feldes des SOA-Datensatzes und des TTL des SOA selbst wird verwendet, um das TTL für die negative Antwort zu etablieren. Reverse Lookup Ein umgekehrter DNS-Lookup ist eine Abfrage des DNS für Domainnamen, wenn die IP-Adresse bekannt ist. Mehrere Domänennamen können einer IP-Adresse zugeordnet werden. Die DNS speichert IP-Adressen in Form von Domain-Namen als speziell formatierte Namen im Pointer (PTR) Datensätze innerhalb der Infrastruktur Top-Level-Domain arpa. Für IPv4 ist die Domain in-addr.arpa Für IPv6 ist die umgekehrte Lookup-Domain ip6.arpa. Die IP-Adresse ist als Name in umgekehrter Oktettdarstellung für IPv4 und umgekehrter nibble Darstellung für IPv6 dargestellt. Bei der Ausführung eines umgekehrten Lookups wandelt der DNS-Client die Adresse in diese Formate um, bevor er den Namen für einen PTR-Datensatz nach der Delegationskette abfragt, wie bei jeder DNS-Abfrage. Unter der Annahme der IPv4-Adresse 208.80.152.2 ist Wikimedia beispielsweise zugeordnet, wird diese in umgekehrter Reihenfolge als DNS-Name dargestellt: 2.152.80.208.in-addr.arpaWenn der DNS-Resolver eine Pointer-Anfrage (PTR) erhält, beginnt er, indem er die Root-Server abfragt, die auf die Server von American Registry for Internet Numbers (ARIN) für die Zone 208.in-addr.arpa hinweisen. ARINs Server delegieren 152.80.208.in-addr.arpa an Wikimedia, an die der Resolver eine weitere Abfrage für 2.152.80.208.in-addr.arpa sendet, was zu einer maßgeblichen Antwort führt. Kundenbetreuung [[] Benutzer kommunizieren in der Regel nicht direkt mit einem DNS-Resolver. Stattdessen erfolgt die DNS-Auflösung transparent in Anwendungen wie Webbrowsern, E-Mail-Clients und anderen Internet-Anwendungen. Wenn eine Anwendung eine Anforderung macht, die einen Domänennamen Lookup erfordert, senden solche Programme eine Auflösungsanfrage an den DNS-Resolver im lokalen Betriebssystem, die wiederum die benötigten Kommunikationen übernimmt. Der DNS-Resolver wird fast unveränderlich einen Cache (siehe oben) mit aktuellen Lookups haben. Wenn der Cache die Antwort auf die Anfrage liefern kann, wird der Resolver den Wert im Cache an das Programm zurückgeben, das die Anfrage gemacht hat. Wenn der Cache die Antwort nicht enthält, sendet der Resolver die Anfrage an einen oder mehrere benannte DNS-Server. Bei den meisten Heimbenutzern liefert der Internet-Dienstleister, an den sich die Maschine anschließt, diesen DNS-Server in der Regel: Ein solcher Benutzer hat entweder konfiguriert, dass die Adresse des Servers manuell oder DHCP eingestellt werden kann; dort aber haben Systemadministratoren Systeme eingerichtet, um eigene DNS-Server zu verwenden, weisen ihre DNS-Resolver auf separat gepflegte Namensserver der Organisation hin. In jedem Fall wird der so abgefragte Nameserver dem oben skizzierten Prozess folgen, bis er entweder erfolgreich ein Ergebnis findet oder nicht. Er gibt dann seine Ergebnisse an den DNS-Resolver zurück; vorausgesetzt, es hat ein Ergebnis gefunden, der Resolver ordnungsgemäß Caches, die für die zukünftige Nutzung resultieren, und gibt das Ergebnis zurück zur Software, die die Anfrage initiiert. Zerbrochene Entschlüsseler Einige große ISPs haben ihre DNS-Server konfiguriert, um Regeln zu verletzen, z.B. durch das Ungehorsam von TTLs, oder indem Sie angeben, dass ein Domain-Name nicht existiert, nur weil einer seiner Nameserver nicht reagiert. Einige Anwendungen wie Webbrowser halten einen internen DNS-Cache, um wiederholte Lookups über das Netzwerk zu vermeiden. Diese Praxis kann zusätzliche Schwierigkeiten bei der Debugging von DNS-Problemen hinzufügen, da sie die Geschichte solcher Daten verdeckt. Diese Caches verwenden in der Regel sehr kurze Cachezeiten in der Größenordnung von einer Minute. Internet Explorer stellt eine bemerkenswerte Ausnahme dar: Versionen bis zu IE 3.x-Cache-DNA-Aufzeichnungen für 24 Stunden standardmäßig. Internet Explorer 4.x und spätere Versionen (bis IE 8) verringern den Standard-Timeout-Wert auf eine halbe Stunde, die durch Änderung der Standardkonfiguration geändert werden kann. Wenn Google Chrome Probleme mit dem DNS-Server erkennt, wird eine bestimmte Fehlermeldung angezeigt. Andere Anwendungen Das Domain Name System umfasst mehrere andere Funktionen und Funktionen. Hostname und IP-Adressen sind nicht erforderlich, um in einer ein-zu-ein-Beziehung übereinstimmen. Mehrere Hostnamen können einer einzigen IP-Adresse entsprechen, die in der virtuellen Hosting nützlich ist, in der viele Websites von einem einzigen Host bedient werden. Alternativ kann ein einziger Hostname zu vielen IP-Adressen lösen, um Fehlertoleranz und Lastverteilung auf mehrere Serverinstanzen über ein Unternehmen oder das globale Internet zu erleichtern. DNS dient neben der Übertragung von Namen auf IP-Adressen auch anderen Zwecken. Zum Beispiel verwenden Posttransfer-Agenten DNS, um den besten Mail-Server zu finden, um E-Mail zu versenden: Ein MX-Record liefert eine Zuordnung zwischen einer Domäne und einem Postaustauscher, was eine zusätzliche Schicht von Fehlertoleranz und Lastverteilung bieten kann. Das DNS dient zur effizienten Speicherung und Verteilung von IP-Adressen von schwarzen E-Mail-Hosts. Ein gemeinsames Verfahren besteht darin, die IP-Adresse des Betreff-Hosts in die Subdomain eines höheren Level-Domainnamens zu setzen und diesen Namen auf einen Datensatz zu lösen, der eine positive oder negative Anzeige anzeigt. Zum Beispiel: Die Adresse 102.3.4.5 ist schwarz aufgeführt. Es verweist auf 5.4.3.102.blacklist.example, die auf 127.0.0.1. Die Adresse 102.3.4.6 ist nicht schwarz aufgeführt und weist auf 6.4.3.102.blacklist.example. Dieser Hostname ist entweder nicht konfiguriert oder löst sich auf 127.0.0.2. E-Mail-Server können Blacklist abfragen. Beispiel, um herauszufinden, ob ein bestimmter Host, der mit ihnen verbunden ist, in der Blacklist ist. Viele dieser Blacklists, entweder auf Abonnementsbasis oder kostenlos, sind für die Nutzung durch E-Mail-Administratoren und Anti-Spam-Software verfügbar. Um Widerstand bei Computer- oder Netzwerkausfall zu bieten, werden in der Regel mehrere DNS-Server zur Deckung jeder Domäne bereitgestellt. Auf der obersten Ebene des globalen DNS existieren dreizehn Gruppen von Root-Name-Servern, mit zusätzlichen Kopien davon weltweit über jedecast-Adresse verteilt. Dynamisches DNS (DDNS) aktualisiert einen DNS-Server mit einer Client-IP-Adresse auf dem Flugplatz, beispielsweise beim Wechsel zwischen ISPs oder mobilen Hot Spots, oder wenn die IP-Adresse administrativ verändert wird. DNS-Nachrichtenformat Das DNS-Protokoll verwendet zwei Arten von DNS-Nachrichten, Abfragen und Antworten; beide haben das gleiche Format. Jede Nachricht besteht aus einem Header und vier Abschnitten: Frage, Antwort, Autorität und ein zusätzlicher Raum. Ein Headerfeld (Flags) steuert den Inhalt dieser vier Abschnitte. Der Kopfteil besteht aus folgenden Feldern: Identifikation, Flaggen, Anzahl der Fragen, Anzahl der Antworten, Anzahl der Ressourcenaufzeichnungen (RRs,) und Anzahl der zusätzlichen RRs. Jedes Feld ist 16 Bit lang und erscheint in der angegebenen Reihenfolge. Das Identifikationsfeld wird verwendet, um Antworten mit Abfragen abzugleichen. Das Flaggenfeld besteht aus Unterfeldern wie folgt: Nach der Flagge endet der Header mit vier 16-Bit-Integern, die die Anzahl der Datensätze in jedem der folgenden Abschnitte in der gleichen Reihenfolge enthalten. Fragebereich Der Fragebereich hat ein einfacheres Format als das in den anderen Abschnitten verwendete Ressourcensatzformat. Jeder Fragesatz (in der Regel nur einer im Abschnitt) enthält die folgenden Felder: Der Domänenname wird in diskrete Etiketten zerlegt, die durch die Länge dieses Etiketts vorgegeben werden. DNS-Protokoll-Transport DNS verwendet in erster Linie das User Datagram Protocol (UDP) auf Portnummer 53, um Anfragen zu bedienen. DNS-Abfragen bestehen aus einer einzigen UDP-Anforderung des Clients, gefolgt von einer einzigen UDP-Antwort des Servers. Wenn die Länge der Antwort 512 Bytes überschreitet und sowohl Client- als auch Server-Unterstützung Erweiterungsmechanismen für DNS (EDNS), werden größere UDP-Pakete verwendet. Andernfalls wird die Abfrage erneut mit dem Transmission Control Protocol (TCP) gesendet. TCP wird auch für Aufgaben wie Zone Transfers verwendet. Einige Resolver-Implementierungen verwenden TCP für alle Abfragen. Ressourcenaufzeichnungen Das Domain Name System gibt eine Datenbank von Informationselementen für Netzwerkressourcen an. Die Arten von Informationselementen werden kategorisiert und mit einer Liste von DNS-Datensatztypen, den Ressourcenrekorden (RRs) organisiert. Jeder Datensatz hat einen Typ (Name und Nummer,) eine Ablaufzeit (Zeit zum Leben,) eine Klasse und typspezifische Daten. Ressourcenaufzeichnungen gleichen Typs werden als Ressourcenaufzeichnungssatz (RRset) ohne besondere Bestellung beschrieben. DNS-Resolver geben den gesamten Satz auf Anfrage zurück, aber Server können Rund-Robin-Bestellung implementieren, um Lastausgleich zu erreichen. Im Gegensatz dazu arbeiten die Domain Name System Security Extensions (DNSSEC) an dem kompletten Satz von Ressourcensatz in kanonischer Reihenfolge. Bei der Übermittlung über ein Internet Protocol-Netzwerk verwenden alle Datensätze das in RFC 1035 angegebene gemeinsame Format: NAME ist der vollqualifizierte Domainname des Knotens im Baum. Auf dem Draht kann der Name unter Verwendung der Etikettenkompression verkürzt werden, wobei die im Paket erwähnten Domänennamen für das Ende des aktuellen Domänennamens ersetzt werden können. TYPE ist der Plattentyp. Es zeigt das Format der Daten an und gibt einen Hinweis auf seine beabsichtigte Verwendung. Zum Beispiel wird der A-Record verwendet, um von einem Domain-Namen auf eine IPv4-Adresse zu übersetzen, die NS-Rekordlisten, welche Namenserver auf einer DNS-Zone auf Lookups antworten können, und der MX-Rekord spezifiziert den Mailserver, der verwendet wird, um Mail für eine in einer E-Mail-Adresse angegebene Domäne zu behandeln. RDATA ist Daten typspezifischer Relevanz, wie z.B. die IP-Adresse für Adressaufzeichnungen, oder der Prioritäts- und Hostname für MX-Aufzeichnungen. Bekannte Plattentypen können die Etikettenkompression im RDATA-Feld verwenden, aber unbekannte Plattentypen dürfen nicht (RFC 3597). Die CLASS eines Datensatzes wird auf IN (für Internet) für gemeinsame DNS-Datensätze mit Internet-Hostnamen, Servern oder IP-Adressen eingestellt. Darüber hinaus existieren die Klassen Chaos (CH) und Hesiod (HS). Jede Klasse ist ein unabhängiger Name-Raum mit potenziell unterschiedlichen Delegationen von DNS-Zonen. Neben in einer Zonendatei definierten Ressourcensätzen definiert das Domänennamesystem auch mehrere Anforderungstypen, die nur in Verbindung mit anderen DNS-Knoten (auf dem Draht) verwendet werden, wie z.B. bei der Durchführung von Zonentransfers (AXFR/IXFR) oder für EDNS (OPT.) Wildcard DNS Aufzeichnungen Das Domain-Name-System unterstützt Wildcard-DNA-Datensätze, die Namen angeben, die mit dem Sternzeichen '*' beginnen, z.B. *Beispiel. DNS-Einträge, die zu Wildcard-Domainnamen gehören, geben Regeln für die Generierung von Ressourcen-Einträgen innerhalb einer einzigen DNS-Zone an, indem ganze Labels mit passenden Komponenten des Abfragenamens, einschließlich der angegebenen Nachkommen, ersetzt werden. Beispielsweise gibt die DNS-Zone x.example in der folgenden Konfiguration an, dass alle Subdomains, einschließlich Subdomains von Subdomains, von x.example den Postaustauscher (MX) a.x.example verwenden. Der Datensatz für a.x.example wird benötigt, um die Postaustauscher-IP-Adresse anzugeben. Da dies das Ergebnis hat, diesen Domainnamen und seine Subdomains aus den Wildcard-Spielen auszuschließen, muss in der DNS-Zone auch ein zusätzlicher MX-Record für die Subdomain a.x.example sowie ein wildcardierter MX-Record für alle Subdomains definiert werden. Die Rolle der Wildcard-Aufzeichnungen wurde in RFC 4592 verfeinert, da die ursprüngliche Definition in RFC 1034 unvollständig war und zu Fehlinterpretationen durch die Instrukteure führte. Protokollerweiterungen Das ursprüngliche DNS-Protokoll hatte begrenzte Bestimmungen für die Erweiterung mit neuen Features. Im Jahr 1999 veröffentlichte Paul Vixie in RFC 2671 (unterstützt von RFC 6891) einen Erweiterungsmechanismus, genannt Erweiterungsmechanik für DNS (EDNS), der optionale Protokollelemente eingeführt hat, ohne bei Nichtgebrauch Overhead zu erhöhen. Dies wurde durch den Pseudo-Ressourcensatz OPT erreicht, der nur in Drahtübertragungen des Protokolls existiert, nicht aber in beliebigen Zonendateien. Es wurden auch erste Erweiterungen vorgeschlagen (EDNS0,) wie die Erhöhung der DNS-Nachrichtgröße in UDP-Datengrammen. Dynamische Zonenaktualisierungen Dynamische DNS-Updates verwenden den UPDATE-DNS-Opcode, um Ressourcenrekorde dynamisch aus einer Zonendatenbank auf einem autoritären DNS-Server hinzuzufügen oder zu entfernen. Das Merkmal ist in RFC 2136 beschrieben. Diese Einrichtung ist nützlich, um Netzwerk-Clients in das DNS zu registrieren, wenn sie booten oder anderweitig im Netzwerk verfügbar werden. Da ein Booting-Client jedes Mal von einem DHCP-Server eine andere IP-Adresse zugewiesen werden kann, ist es nicht möglich, statische DNS-Zuordnungen für solche Clients bereitzustellen. Sicherheitsfragen Ursprünglich waren Sicherheitsbedenken keine großen Design-Betrachtungen für DNS-Software oder eine Software für den Einsatz im frühen Internet, da das Netzwerk nicht für die Beteiligung der Öffentlichkeit geöffnet war. Die Erweiterung des Internets in den 90er Jahren änderte jedoch die Anforderungen an Sicherheitsmaßnahmen zum Schutz der Datenintegrität und der Benutzerauthentifizierung. Mehrere Schwachstellen wurden von bösartigen Benutzern entdeckt und ausgenutzt. Ein solches Problem ist die DNS-Cache-Vergiftung, bei der Daten an Cache-Resolver unter der Voraussetzung verteilt werden, ein maßgeblicher Herkunftsserver zu sein, wodurch der Datenspeicher mit potenziell falschen Informationen und langen Ablaufzeiten (Zeit-zu-live) abgefragt wird. Anschließend können legitime Bewerbungsanfragen auf Netzwerkhosts umgeleitet werden, die mit bösartiger Absicht betrieben werden. DNS-Antworten haben traditionell keine kryptographische Signatur, was zu vielen Angriffsmöglichkeiten führt; die Domain Name System Security Extensions (DNSSEC) modifizieren DNS, um Unterstützung für kryptografische Signaturen hinzuzufügen. DNSCurve wurde als Alternative zu DNSSEC vorgeschlagen. Andere Erweiterungen, wie z.B. TSIG, unterstützen die kryptographische Authentifizierung zwischen vertrauenswürdigen Peers und werden häufig verwendet, um Zonentransfer- oder dynamische Update-Operationen zu autorisieren. Einige Domain-Namen können verwendet werden, um Spoofing-Effekte zu erzielen. Zum Beispiel sind paypal.com und paypa1.com unterschiedliche Namen, aber Benutzer können sie in einer grafischen Benutzeroberfläche je nach gewählter Benutzeroberfläche nicht unterscheiden können. In vielen Schriften sehen der Buchstaben l und die Ziffer 1 sehr ähnlich oder sogar identisch aus. Dieses Problem ist akut in Systemen, die internationalisierte Domainnamen unterstützen, da viele Zeichencodes in ISO 10646 auf typischen Computer-Bildschirmen identisch erscheinen können. Diese Verwundbarkeit wird gelegentlich beim Phishing ausgenutzt. Zur Validierung von DNS-Ergebnissen können auch Techniken wie vorwärts bestätigtes reverses DNS verwendet werden. DNS kann auch von sonst sicheren oder privaten Verbindungen, wenn Aufmerksamkeit nicht auf ihre Konfiguration, und zu Zeiten DNS verwendet wurde, um Firewalls von bösartigen Personen zu umgehen, und Ausrotten von Daten, da es oft als unanständig betrachtet wird. Datenschutz- und Tracking-Probleme Ursprünglich als öffentliche, hierarchische, verteilte und stark abgespeicherte Datenbank konzipiert, hat DNS-Protokoll keine Vertraulichkeitskontrollen. Benutzeranfragen und Nameserver-Antworten werden unverschlüsselt gesendet, die Netzwerkpakete Schniffing, DNS-Hijacking, DNS-Cache-Vergiftung und Man-in-the-Middle-Angriffe ermöglicht. Dieser Mangel wird häufig von Cyberkriminellen und Netzbetreibern für Marketingzwecke, Benutzerauthentifizierung auf inhaftierten Portalen und Zensur verwendet. Die Nutzer-Privatheit wird durch Vorschläge zur Erhöhung des Client-IP-Informationsniveaus in DNS-Abfragen (RFC 7871) zum Nutzen von Content Delivery Networks weiter offengelegt. Die Hauptansätze, die zur Bekämpfung von Datenschutzproblemen mit DNS verwendet werden: VPNs, die DNS-Auflösung an den VPN-Operator verschieben und den Benutzerverkehr von lokalen ISP, Tor verbergen, die traditionelle DNS-Auflösung durch anonyme .onion-Domains ersetzt, die sowohl Namensauflösung als auch Benutzerverkehr hinter der Onion-Routing-Versicherung, Proxies und öffentliche DNS-Server verbergen, die die die die tatsächliche DNS-Auflösung blockieren-Auflösung zu einem Drittanbieter verschieben, die normalerweise nur wenige oder keine oder keine oder keine oder keine oder keine oder keine oder keine zusätzliche Anforderung verspricht. Öffentliche DNS-Server können mit traditionellen DNS-Protokoll abgefragt werden, in welchem Fall sie keinen Schutz vor lokaler Überwachung bieten, oder DNS-over-HTTPS, DNS-over-TLS und DNSCrypt, die solche ProtectionSolutions vor der DNS-Inspektion durch lokalen Netzwerkbetreiber zu schützen kritisiert werden, um Unternehmen Netzwerksicherheitsrichtlinien und Internet-Censorship zu verhindern. Sie werden auch aus Sicht der Privatsphäre kritisiert, indem sie die DNS-Auflösung den Händen einer kleinen Anzahl von Unternehmen, die zur Monetarisierung des Nutzerverkehrs bekannt sind, und zur Zentralisierung der DNS-Namensauflösung, die im Allgemeinen als schädlich für das Internet wahrgenommen wird, weggeben. Google ist der dominante Anbieter der Plattform in Android, der Browser in Chrome, und der DNS-Resolver im 8.8.8.8-Service. Wäre dieses Szenario ein Fall einer einzigen Unternehmensgesellschaft, die in der Lage ist, die Kontrolle des gesamten Namensraums des Internets zu überbrücken? Netflix hat bereits eine App erstellt, die unabhängig von der Plattform, auf der die App ausgeführt wurde, einen eigenen DNS-Auflösungsmechanismus verwendet hat. Was, wenn die Facebook-App DoH enthalten? Was, wenn Apples iOS einen DoH-Resolution-Mecha-nismus verwendet, um lokale DNS-Auflösung zu umgehen und alle DNS-Abfragen von Apples Plattformen auf eine Reihe von Apple-operierten Namensresolvern zu lenken? Domain Name Registrierung Das Recht auf Verwendung eines Domain-Namens wird von Domain-Namen registrars delegiert, die von der Internet Corporation für zugewiesene Namen und Zahlen (ICANN) oder andere Organisationen wie OpenNIC akkreditiert werden, die mit der Überwachung des Namens und der Nummernsysteme des Internets belastet werden. Neben ICANN wird jede Top-Level-Domain (TLD) von einer Verwaltungsorganisation, die ein Register betreibt, technisch gepflegt und gewartet. Ein Register ist für den Betrieb der Namensdatenbank innerhalb seiner autoritären Zone verantwortlich, obwohl der Begriff am häufigsten für TLDs verwendet wird. Ein Registrant ist eine Person oder Organisation, die nach Domain-Registrierung gefragt. Das Register erhält Registrierungsinformationen von jedem Domainnamen Registrar, der berechtigt ist (akkreditiert), Namen in der entsprechenden Zone zuzuordnen und die Informationen über das WHOIS-Protokoll zu veröffentlichen. Ab 2015 wird die Nutzung von RDAP berücksichtigt. ICANN veröffentlicht die vollständige Liste der TLDs, TLD-Registries und Domainnamen registrars. Registrante Informationen, die mit Domainnamen verbunden sind, werden in einer Online-Datenbank gepflegt, die mit dem WHOIS-Service erreichbar ist. Für die meisten der mehr als 290 Ländercode Top-Level-Domains (ccTLDs) halten die Domain-Registries die WHOIS (Registrant, Nameserver, Ablaufdaten usw.) Informationen aufrecht. Zum Beispiel hält DENIC, Deutschland NIC, die DE-Domaindaten. Ab etwa 2001 haben die meisten Generischen Top-Level-Domains (gTLD) Registries diesen sogenannten Dick-Registry-Ansatz angenommen, d.h. die WHOIS-Daten in zentralen Registern statt in Registrar-Datenbanken zu halten. Für Top-Level-Domains auf COM und NET wird ein dünnes Registrierungsmodell verwendet. Die Domain-Registrierung (z.B. GoDaddy, BigRock und PDR, VeriSign usw.) enthält grundlegende WHOIS-Daten (z.B. Registrar- und Nameserver, etc.). Organisationen oder Registranten, die ORG auf der anderen Seite verwenden, sind ausschließlich auf dem Public Interest Register. Einige Domain-Name-Registries, oft Netzwerk-Informationszentren (NIC) genannt, funktionieren auch als Registrars zu Endbenutzern, zusätzlich zu den WHOIS-Datensätzen. Die Top-Level-Domain-Registries, wie z.B. für die Domains COM, NET und ORG, verwenden ein Registry-Registrar-Modell, bestehend aus vielen Domain-Namen registrars. Bei dieser Methode der Verwaltung verwaltet das Register nur die Domänennamen-Datenbank und die Beziehung zu den Registrarn. Die Registranten (Benutzer eines Domainnamens) sind Kunden des Registrars, in einigen Fällen durch zusätzliche Subkontraktion von Wiederverkäufern. RFC-Dokumente Normen Das Domain Name System wird durch die von der Internet Engineering Task Force (Internet-Standards) veröffentlichte Anforderung an Kommentare (RFC) definiert. Nachfolgend eine Liste von RFCs, die das DNS-Protokoll definieren. RFC 1034, Domain Names - Konzepte und Einrichtungen RFC 1035, Domain Names - Implementierung und Spezifikation RFC 1123, Anforderungen an Internet Hosts -Anwendung und Unterstützung RFC 1995, Incremental Zone Transfer in DNS RFC 1996, A Mechanism for Prompt Notification of Zone Changes (DNS NOTIFY)RFC 2136, Dynamic Updates in the Domain name system (DNS UPDATE) Mehr Widerstand gegen geschmiedete Antworten RFC 5890, Internationalized Domain Names for Applications (IDNA):Definitions and Document Framework RFC 5891, Internationalized Domain Names in Applications (IDNA:) Protocol RFC 5892, The Unicode Code Points and Internationalized Domain Names for Applications (IDNA) RFC-Definitionen (IDNA)RFC-Standards (RFC-Code) Diese RFCs sind beratend in der Natur, können jedoch nützliche Informationen liefern, obwohl sie weder einen Standard oder BCP definieren.(RFC 1796) RFC 1178, Wahl eines Namens für Ihren Computer (FYI 5) RFC 1591, Domain Name System Structure and Delegation RFC 1912, Common DNS Operational and Configuration Errors RFC 2100, The Naming of Hosts RFC 3696, Application Techniques Name for Checking und Configuration of Transformation. Bedrohungsanalyse des Domain-Name-Systems (DNS) RFC 4892, Anforderungen an einen Mechanismus, der ein Name Server-Kommentar RFC 5894, Internationalized Domain Names for Applications (IDNA):Background, Explanation und Rationale RFC 5895, Mapping Characters for Internationalized Domain Names in Applications (IDNA) 2008 RFC 7626, DNS-Datenüberlegungen RFC 7706, Decasing Server Diese RFCs haben einen offiziellen Status von Unbekannt, aber aufgrund ihres Alters sind nicht eindeutig als solche gekennzeichnet. RFC 920, Domain Requirements – Spezifizierte ursprüngliche Top-Level-Domains RFC 1032, Domain Administrators Guide RFC 1033, Domain Administrators Operations Guide RFC 1101, DNS Encodings of Network Names and Other Types Siehe auch Referenzen Quellen Evans, Claire L. (2018). Broad Band: Die Untold Geschichte der Frauen, die das Internet gemacht haben. New York: Portfolio/Penguin.ISBN 9780735211759. Externe Links Vixie, Paul (2007-04-01)."DNS Complexity". ACM Queue. Archiviert aus dem Original am 2007-06-10. Zytrax.com, Open Source Guide – DNS für Rocket Scientists. Internet Governance und das Domain Name System: Themen für Kongress-Kongress-Forschungsdienst Ball, James (28. Februar 2014). "Meet die sieben Personen, die die Schlüssel zur weltweiten Internetsicherheit halten." Der Guardian. Guardian News & Media Limited.Retrieved 28 Februar 2014.