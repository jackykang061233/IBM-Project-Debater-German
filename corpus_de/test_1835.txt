Eine Web-Anwendung (oder Web-App) ist Anwendungssoftware, die auf einem Webserver läuft, im Gegensatz zu computerbasierten Softwareprogrammen, die lokal auf dem Betriebssystem (OS) des Gerätes laufen. Webanwendungen werden vom Benutzer über einen Webbrowser mit einer aktiven Netzwerkverbindung aufgerufen. Diese Anwendungen werden mit einer Client-Server-Modellstruktur programmiert – der Benutzer (Client) wird über einen Off-Site-Server, der von einem Drittanbieter gehostet wird, Dienste bereitgestellt. Beispiele für gängige Web-Anwendungen sind: Web-Mail, Online-Handel, Online-Banking und Online-Auktionen. Definition und ähnliche Begriffe Die allgemeine Unterscheidung zwischen einer dynamischen Webseite jeder Art und einer "Web-App" ist unklar. Web-Seiten, die am ehesten als "Web-Anwendungen" bezeichnet werden, sind solche, die ähnliche Funktionalität wie eine Desktop-Software-Anwendung haben, oder eine mobile App. HTML5 führte explizite Sprachunterstützung für die Erstellung von Anwendungen ein, die als Webseiten geladen werden, kann aber Daten lokal speichern und weiterhin offline funktionieren. Single-page-Anwendungen sind anwendungsartiger, weil sie das typischere Web-Paradigma des Bewegens zwischen verschiedenen Seiten mit unterschiedlichen URLs ablehnen. Dies liegt daran, dass einzelne Komponenten ausgetauscht oder aktualisiert werden können, ohne die gesamte Webseite aktualisieren zu müssen. Einseitige Frameworks können für die schnelle Entwicklung einer solchen Web-App für eine mobile Plattform verwendet werden, da sie Bandbreite speichern können, sowie das Aussterben von externen Dateien. Mobile Web-Anwendung Es gibt verschiedene Möglichkeiten, mobile Geräte anzusprechen, wenn Sie Web-Anwendungen erstellen: Responsive Web-Design kann verwendet werden, um eine Web-Anwendung zu machen - ob eine herkömmliche Website oder eine einseitige Anwendung auf kleinen Bildschirmen, die gut mit Touchscreens arbeiten. Progressive Web Apps (PWA) sind Web-Anwendungen, die wie regelmäßige Webseiten oder Websites laden, aber die Benutzerfunktionen wie Offline-Bedienen und Geräte-Hardware-Zugriff traditionell nur für native mobile Anwendungen bieten können. Hybrid-Apps eingebettet eine Website innerhalb einer nativen App, möglicherweise mit einem Hybrid-Framework. Dies ermöglicht die Entwicklung mit Web-Technologien (und möglicherweise direkt Kopieren von Code von einer vorhandenen mobilen Website) und behält auch gewisse Vorteile von nativen Apps (z.B. direkten Zugriff auf Gerätehardware, Offline-Betrieb, App Store Sichtbarkeit). Hybrid-App-Frameworks umfassen Apache Cordova, Electron, Flutter, Haxe, React Native und Xamarin. Geschichte In früheren Computermodellen wie Client-Server wurde die Verarbeitungslast für die Anwendung zwischen Code auf dem Server und Code auf jedem Client lokal installiert geteilt. Mit anderen Worten, eine Anwendung hatte ein eigenes vorkompiliertes Client-Programm, das als Benutzeroberfläche diente und separat auf dem persönlichen Computer des Benutzers installiert werden musste. Ein Upgrade auf den serverseitigen Code der Anwendung würde in der Regel auch ein Upgrade auf den clientseitigen Code, der auf jedem Benutzer-Workstation installiert ist, erfordern, um die Supportkosten zu erhöhen und die Produktivität zu verringern. Darüber hinaus waren sowohl die Client- als auch Serverkomponenten der Anwendung in der Regel eng an eine bestimmte Computerarchitektur und Betriebssystem gebunden und an andere zu portieren war oft verbietend teuer für alle, aber die größten Anwendungen (Nowadays, native Apps für mobile Geräte werden auch von einigen oder allen oben genannten Problemen Hobby). Im Gegensatz dazu verwenden Web-Anwendungen in einem Standardformat geschriebene Web-Dokumente wie HTML und JavaScript, die von einer Vielzahl von Web-Browsern unterstützt werden. Web-Anwendungen können als eine bestimmte Variante der Client-Server-Software betrachtet werden, bei der die Client-Software beim Besuch der jeweiligen Webseite auf die Client-Maschine heruntergeladen wird, indem Standard-Prozeduren wie HTTP verwendet werden. Client-Web-Software-Updates können jedes Mal passieren, wenn die Webseite besucht wird. Während der Sitzung interpretiert und zeigt der Webbrowser die Seiten und fungiert als universeller Client für jede Web-Anwendung. In den frühen Tagen des Webs wurde jede einzelne Webseite als statisches Dokument an den Client geliefert, aber die Reihenfolge der Seiten könnte noch ein interaktives Erlebnis bieten, da die Benutzereingabe über im Seitenmarkup eingebettete Webformelemente zurückgegeben wurde. Jede signifikante Änderung der Webseite erforderte jedoch eine Rundreise zurück zum Server, um die gesamte Seite zu aktualisieren. Im Jahr 1995 stellte Netscape eine clientseitige Skripting-Sprache namens JavaScript vor, mit der Programmierer einige dynamische Elemente zur Benutzeroberfläche hinzufügen können, die auf der Clientseite lief. Anstatt Daten an den Server zu senden, um eine gesamte Webseite zu erzeugen, können die eingebetteten Skripte der heruntergeladenen Seite verschiedene Aufgaben ausführen, wie z.B. Eingabevalidierung oder Darstellung/Verhinderung von Teilen der Seite. 1996 wurde Macromedia eingeführt. Flash, ein Vektor-Animations-Player, der Browser als Plug-in zu eingebetteten Animationen auf den Webseiten hinzugefügt werden könnte. Es erlaubte die Verwendung einer Skriptsprache, Interaktionen auf der Clientseite zu programmieren, ohne mit dem Server kommunizieren zu müssen. Im Jahr 1999 wurde in der Servlet-Spezifikationsversion 2.2 das "Web-Anwendungskonzept" in der Java-Sprache eingeführt.[2.1?] Zu dieser Zeit waren sowohl JavaScript als auch XML bereits entwickelt worden, aber Ajax war noch nicht eingeprägt und das XMLHttpRequest-Objekt wurde erst kürzlich im Internet Explorer 5 als ActiveX-Objekt eingeführt. Im Jahr 2005 wurde der Begriff Ajax geprägt, und Anwendungen wie Gmail begannen, ihre Kundenseiten immer interaktiver zu machen. Ein Web-Seitenskript ist in der Lage, den Server zum Speichern/Retrieving von Daten zu kontaktieren, ohne eine gesamte Webseite herunterzuladen. 2007 gab Steve Jobs bekannt, dass Web-Apps, die in HTML5 mit AJAX-Architektur entwickelt wurden, das Standardformat für iPhone-Apps sein würden. Es wurde kein Software-Entwicklungskit (SDK) benötigt, und die Apps würden durch die Safari-Browser-Engine vollständig in das Gerät integriert werden. Dieses Modell wurde später für den App Store umgeschaltet, als Mittel zur Verhinderung von Jailbreakern und der Aneignung frustrierter Entwickler. Im Jahr 2014 wurde HTML5 fertiggestellt, was Grafik- und Multimedia-Funktionen ohne die Notwendigkeit von clientseitigen Plug-ins bietet. HTML5 bereicherte auch den semantischen Inhalt von Dokumenten. Das APIs und das Dokumentobjektmodell (DOM) sind nicht mehr nachher, sondern grundlegende Teile der HTML5 Spezifikation. WebGL API ebnete den Weg für erweiterte 3D-Grafik auf Basis von HTML5-Kanälen und JavaScript-Sprache. Diese haben große Bedeutung bei der Erstellung von wirklich Plattform und Browser unabhängige Rich Web-Anwendungen. Im Jahr 2016 stellte Eric Bidelman (Senior Staff Developers Programs Engineer) während der jährlichen Google IO-Konferenz Progressive Web Apps (PWAs) als neuer Standard in der Webentwicklung vor. Jeff Burtoft, Principal Program Manager bei Microsoft, sagte: "Google führte den Weg mit Progressive Web Apps, und nach einem langen Prozess haben wir beschlossen, dass wir sie vollständig unterstützen müssen. " Als solche unterstützten Microsoft und Google beide den PWA-Standard. Interface Durch Java, JavaScript, CSS, Flash, Silverlight und andere Technologien sind anwendungsspezifische Methoden wie das Zeichnen auf dem Bildschirm, das Spielen von Audio und der Zugriff auf die Tastatur und Maus möglich. Viele Dienstleistungen haben daran gearbeitet, all diese zu einer vertrauteren Schnittstelle zu kombinieren, die das Aussehen eines Betriebssystems annimmt. Durch diese Technologien werden auch allgemeine Techniken wie Drag &amp; Drop unterstützt. Web-Entwickler verwenden oft clientseitige Skripting, um Funktionalität hinzuzufügen, insbesondere um ein interaktives Erlebnis zu erstellen, das keine Seitenumladung erfordert. In jüngster Zeit wurden Technologien entwickelt, um das clientseitige Skripting mit serverseitigen Technologien wie ASP zu koordinieren. NET, J2EE, Perl/Plack und PHP. Ajax, eine Web-Entwicklungstechnik mit einer Kombination verschiedener Technologien, ist ein Beispiel für Technologie, die eine interaktivere Erfahrung schafft. Struktur-Anwendungen werden in der Regel in logische Stücke, genannt Zehner, gebrochen, wo jeder Tier ist eine Rolle zugewiesen. Traditionelle Anwendungen bestehen nur aus 1 tier, die auf der Client-Maschine wohnen, aber Web-Anwendungen verleihen sich einem n-tiered Ansatz von der Natur. Obwohl viele Variationen möglich sind, ist die häufigste Struktur die dreistufige Anwendung. In seiner häufigsten Form werden die drei Zeichner in dieser Reihenfolge als Präsentation, Anwendung und Lagerung bezeichnet. Ein Web-Browser ist die erste Stufe (Präsentation), ein Motor mit einer dynamischen Web-Inhalte-Technologie (wie ASP, CGI, ColdFusion, Dart, JSP/Java, Node.js, PHP, Python oder Ruby auf Rails) ist die mittlere Stufe (Anwendungslogik), und eine Datenbank ist die dritte Stufe (Speicherung). Der Webbrowser sendet Anfragen an die Mittelstufe, die sie durch Abfragen und Aktualisierungen gegen die Datenbank bedient und eine Benutzeroberfläche erzeugt. Für komplexere Anwendungen kann eine 3-stufige Lösung kurz fallen, und es kann von Vorteil sein, einen n-tiered Ansatz zu verwenden, wo der größte Vorteil ist, die Geschäftslogik, die sich auf der Anwendungsstufe befindet, in ein feinkörnigeres Modell zu brechen. Ein weiterer Vorteil kann darin bestehen, dass eine Integrationsstufe hinzugefügt wird, die die Datenkategorie von den übrigen Ebenen trennt, indem eine einfach zu bedienende Schnittstelle zum Zugriff auf die Daten bereitgestellt wird. Beispielsweise würden die Client-Daten durch Aufruf einer list_clients)( Funktion aufgerufen, anstatt eine SQL-Abfrage direkt gegen die Client-Tabelle in der Datenbank zu erstellen. Damit kann die zugrunde liegende Datenbank ersetzt werden, ohne dass sich die anderen Ebenen ändern. Es gibt einige, die eine Web-Anwendung als zweistufige Architektur betrachten. Dies kann ein Smart-Client sein, der alle Arbeit durchführt und einen Dumm-Server abfragt, oder ein Dumm-Client, der auf einem Smart-Server basiert. Der Client würde die Präsentations-Tier behandeln, der Server hätte die Datenbank (Speicher-Tier), und die Business-Logik (Anwendungs-Tier) wäre auf einer von ihnen oder auf beiden. Während dies die Skalierbarkeit der Anwendungen erhöht und das Display und die Datenbank trennt, erlaubt es immer noch keine echte Spezialisierung von Schichten, so dass die meisten Anwendungen dieses Modell ausweiten werden. Verwendung Eine neue Strategie für Anwendungssoftwareunternehmen ist es, Web-Zugriff auf Software zu bieten, die zuvor als lokale Anwendungen verteilt wurden. Je nach Anwendungsart kann es die Entwicklung einer ganz anderen Browser-basierten Schnittstelle erfordern oder lediglich eine bestehende Anwendung zur Verwendung unterschiedlicher Präsentationstechnik anpassen. Diese Programme ermöglichen es dem Benutzer, eine monatliche oder jährliche Gebühr für die Nutzung einer Software-Anwendung zu zahlen, ohne sie auf einer lokalen Festplatte installieren zu müssen. Ein Unternehmen, das dieser Strategie folgt, ist als Application Service Provider (ASP) bekannt, und ASPs erhalten derzeit viel Aufmerksamkeit in der Softwareindustrie. Sicherheitsverletzungen auf diesen Arten von Anwendungen sind ein großes Anliegen, weil es sowohl Unternehmensinformationen als auch private Kundendaten beinhalten kann. Der Schutz dieser Vermögenswerte ist ein wichtiger Bestandteil jeder Web-Anwendung und es gibt einige wichtige operative Bereiche, die in den Entwicklungsprozess einbezogen werden müssen. Dazu gehören Prozesse zur Authentifizierung, Autorisierung, Asset Handling, Eingabe und Protokollierung und Auditing. Die Gebäudesicherheit in die Anwendungen von Anfang an kann langfristig effektiver und weniger störend sein. Cloud Computing Modell Web-Anwendungen sind Software als Service (SaaS). Es gibt Geschäftsanwendungen, die als SaaS für Unternehmen für eine feste oder nutzungsabhängige Gebühr bereitgestellt werden. Andere Web-Anwendungen werden kostenlos angeboten, oft ein Einkommen aus Anzeigen in Web-Anwendungsschnittstelle angezeigt. Entwicklung Das Schreiben von Web-Anwendungen wird oft durch den Einsatz von Web-Anwendungsrahmen vereinfacht. Diese Rahmen ermöglichen eine schnelle Anwendungsentwicklung, indem es einem Entwicklungsteam ermöglicht wird, sich auf die Teile ihrer Anwendung zu konzentrieren, die ihren Zielen einzigartig sind, ohne gemeinsame Entwicklungsprobleme wie das Benutzermanagement zu lösen. Viele der verwendeten Frameworks sind Open-Source-Software. Die Verwendung von Web Application Frameworks kann oft die Anzahl der Fehler in einem Programm reduzieren, sowohl durch den Code einfacher zu machen, als auch durch die Möglichkeit eines Teams, sich auf den Rahmen zu konzentrieren, während ein anderes sich auf einen bestimmten Anwendungsfall konzentriert. Bei Anwendungen, die ständigen Hackversuchen im Internet ausgesetzt sind, können sicherheitsbezogene Probleme durch Fehler im Programm verursacht werden. Frameworks können auch die Verwendung von Best Practices wie GET nach POST fördern. Darüber hinaus besteht Potenzial für die Entwicklung von Anwendungen auf Internet-Betriebssystemen, obwohl es derzeit nicht viele lebensfähige Plattformen, die dieses Modell passen. Anwendungen Beispiele für Browser-Anwendungen sind einfache Büro-Software (Wort-Prozessoren, Online-Tabellen und Präsentationstools), kann aber auch erweiterte Anwendungen wie Projektmanagement, computergestütztes Design, Videobearbeitung und Point-of-sale umfassen. Siehe auch Referenzen Externe Links HTML5 Empfehlungsentwurf, Änderungen an HTML und verwandten APIs, um die Autorisierung von webbasierten Anwendungen zu erleichtern. Die andere Straße — Ein Artikel, der argumentiert, dass die Zukunft auf dem Server liegt, nicht reiche Schnittstellen auf dem Client Web Applications bei Curlie Web Applications Working Group im World Wide Web Consortium (W3C) PWAs auf Web.dev von Google Developers. Pizotifen (INN) oder Pizotylin (USAN), Handelsname Sandomigran, ist ein Benzocyclohepten-basiertes Medikament, das als Medizin verwendet wird, vor allem als Vorbeugung, um die Häufigkeit von wiederkehrenden Migränekopfschmerzen zu reduzieren. Verwendung Die wichtigste medizinische Verwendung für Pizotifen ist die Prävention von Migräne und Cluster Kopfschmerzen. Pizotifen ist eine Reihe von Medikamenten für diesen Zweck verwendet, andere Optionen sind Propranolol, Topiramat, Valproinsäure, Cyproheptadin und Amitriptylin. Während Pizotifen recht effektiv ist, ist seine Verwendung begrenzt durch Nebenwirkungen, vor allem Schläfrigkeit und Gewichtszunahme, und es ist in der Regel nicht die erste Wahl Medizin zur Verhinderung von Migräne, anstatt als Alternative verwendet, wenn andere Medikamente nicht wirksam sein. Es ist nicht wirksam, die Migräneangriffe einmal im Gange zu entlasten. Pizotifen wurde auch in einem schweren Fall der Erythromelalgie als hochwirksam gemeldet, eine seltene neurovaskuläre Erkrankung, die manchmal feuerfest ist für die anderen oben genannten Medikamente. Andere Anwendungen, für die Pizotifen verwendet werden können, sind als Antidepressivum oder zur Behandlung von Angst oder Sozialphobie. Tierversuche legen auch nahe, dass Pizotylin bei der Behandlung von Serotonin-Syndrom oder MDMA-Überdosierung in ähnlicher Weise mit dem eng verwandten Antihistamin/Antiserotonin-Medikament Cyproheptadin verwendet werden könnte. Nebenwirkungen Nebenwirkungen sind Sedation, trockener Mund, Schläfrigkeit, erhöhte Appetit und Gewichtszunahme. Gelegentlich kann es Übelkeit, Kopfschmerzen oder Schwindel verursachen. In seltenen Fällen kann auch Angst, Aggression und Depression auftreten. Bei Patienten mit geschlossenem Winkelglaukom und bei Patienten mit einer Vordisposition zur Harnretention ist Vorsicht geboten, da das Medikament einen relativ geringen anticholinergischen Effekt aufweist. Eine Dosisanpassung ist bei Menschen mit chronischer Nierenerkrankung erforderlich. Auch Leberschäden wurden gemeldet. Die Pizotifen-Behandlung sollte eingestellt werden, wenn es klinische Beweise für Leberstörungen während der Behandlung gibt. Bei Patienten mit einer Epilepsiegeschichte wird Vorsicht geboten. Rückzugssymptome wie Depression, Tremor, Übelkeit, Angst, Unwohlsein, Schwindel, Schlafstörung und Gewichtsabnahme wurden nach abrupter Beendigung von Pizotifen gemeldet. Pizotifen ist bei Patienten, die an Überempfindlichkeit gegen eine seiner Komponenten leiden, auch Pizotifen ist in Magen-Austrittssperre, Schwangerschaft, Winkel-Abschluss-Glaukom und Schwierigkeiten Harnbildung kontraindiziert. Pharmakologie Pizotifen ist ein Serotonin-Antagonist, der hauptsächlich an den 5-HT2A- und 5HT2C-Rezeptoren wirkt. Es hat auch einige Aktivität als Antihistamin sowie einige anticholinergische Aktivität. Siehe auch Benzocyclohepten Cyproheptadine Ketotifen Referenzen Externe Links Sandomigran Drogendatenblatt