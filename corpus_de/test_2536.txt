Internet Relay Chat (IRC) ist ein textbasiertes Chat-System. Es ermöglicht Diskussionen unter jeder Anzahl von Teilnehmern an sogenannten Gesprächskanälen sowie Diskussionen zwischen nur zwei Partnern – zum Beispiel in Frage- und Gesprächsgesprächen. Jeder Teilnehmer kann einen neuen Gesprächskanal öffnen, und ein einzelner Computerbenutzer kann auch an mehreren solchen gleichzeitigen Kanälen teilnehmen. Um einen Chat zu etablieren oder zu verbinden, ist ein Netzwerkprogramm, genannt ein IRC-Client, erforderlich, um auf einen Kanal zuzugreifen, indem es mit einem Server verbunden ist. Der IRC-Client kann entweder ein unabhängiges Programm auf dem lokalen Computer (z.B. mIRC, XChat) oder in Form einer speziellen Benutzeroberfläche von einem größeren Programm wie einem Internetbrowser sein; der Opera-Browser umfasst beispielsweise einen IRC-Client und Clients wie Mibbit und IRCCloud oder die Open Source KiwiIRC und MIT's The Lounge Chat können in Verbindung mit vielen beliebten Browsern arbeiten. Ein IRC-Netzwerk von vernetzten Servern, die als Relaisstationen arbeiten, dient der Vermittlung der Anrufe im IRC. Das wesentliche Merkmal dieses Netzwerks ist die BITNET-Kommunikationstopologie, die nur einen Kommunikationspfad zwischen zwei Teilnehmern ermöglicht. Historisch sorgte dies für eine effiziente Kommunikation, denn in den frühen Tagen des IRC hatten interkontinentale Datenleitungen eine sehr begrenzte Kapazität. Die Topologie ermöglichte eine Nachricht von einem Client auf einem Kontinent nicht einzeln für jeden Client auf einem anderen Kontinent, sondern nur einmal an einen lokalen Server, der ihn dann an Clients verteilte. Trotz begrenzter Managementkapazitäten waren sehr große „Chat-Landschaften“ möglich. Nachteilig ist die mangelnde Redundanz, die sich in sogenannten Netzspalten manifestiert: Wenn ein Server ausfällt, bricht das Netzwerk automatisch in separate Teile, bis eine neue Verbindung zwischen den Teilen hergestellt wird. Die größten IRC-Netzwerke bestehen aus mehreren Dutzend IRC-Servern, die gleichzeitig über 100.000 Benutzer verbinden und Zehntausende von Kanälen verwalten, auf denen jeweils mehrere tausend Menschen gleichzeitig teilnehmen können. Trotz dieser enormen Proportionen liegt die Verzögerung in einem gesendeten Text in der Regel in der Größenordnung von Zehnteln einer Sekunde und überschreitet selten die eine Sekunde Zeit. Die IRC-Nutzung ist seit 2003 stetig zurückgegangen und verliert 60 Prozent der Nutzer (von 1 Million auf etwa 400.000 im Jahr 2021) und die Hälfte ihrer Kanäle (von einer halben Million im Jahr 2003 auf unter 200.000 im Jahr 2021). Im April 2011 dienten die Top 100 IRC-Netzwerke mehr als eine halbe Million Nutzer zu einer Zeit, die Hunderte von Tausenden von Kanälen auf insgesamt rund 1 500 Servern von rund 3 200 IRC-Servern weltweit beherbergt. Ab Juni 2021 gibt es 481 verschiedene IRC-Netzwerke, von denen die im Mai 2021 gegründete Open Source Libera Chat die meisten Benutzer hat, mit 21,348 Kanälen auf 15,433 Servern; zwischen ihnen teilen die Top 100 IRC-Netzwerke 188,336 Kanäle auf 96,708 Servern. Aus technischer Sicht, Internet-Ressourcen Chat wird als Anwendungsschichtprotokoll implementiert, um die Kommunikation in Form von Text zu erleichtern. Der Chat-Prozess funktioniert auf einem Client-Server-Netzwerkmodell. Wie bereits diskutiert, können IRC-Clients eigenständige Computerprogramme oder webbasierte Anwendungen sein, die entweder lokal im Browser oder auf einem Drittanbieter-Server laufen. Diese Clients kommunizieren mit Chat-Servern, um Nachrichten an andere Clients zu übertragen. IRC ist hauptsächlich für Gruppenkommunikation in Diskussionsforen, genannt Kanäle, sondern ermöglicht auch eine einmalige Kommunikation über private Nachrichten sowie Chat und Datenübertragung, einschließlich Dateifreigabe. Client-Software ist für jedes wichtige Betriebssystem verfügbar, das unterstützt Internetzugang. Geschichte IRC wurde von Jarkko Oikarinen im August 1988 erstellt, um ein Programm namens MUT (MultiUser Talk) über eine BBS namens OuluBox an der Universität von Oulu in Finnland zu ersetzen, wo er am Department of Information Processing Science arbeitete. Jarkko beabsichtigt, die von ihm verwaltete BBS-Software zu erweitern, um Nachrichten im Usenet-Stil, Echtzeitdiskussionen und ähnliche BBS-Funktionen zu ermöglichen. Der erste Teil, den er realisierte, war der Chat-Teil, den er mit geliehenen Teilen tat, die von seinen Freunden Jyrki Kuoppala und Jukka Pihl geschrieben wurden. Das erste IRC-Netzwerk lief auf einem einzigen Server namens tolsun.oulu.fi. Oikarinen fand Inspiration in einem Chat-System namens Bitnet Relay, die auf dem BITNET betrieben. Jyrki Kuoppala drängte Oikarinen, um die Oulu Universität zu bitten, den IRC-Code zu befreien, so dass es auch außerhalb von Oulu laufen könnte, und nachdem sie schließlich veröffentlicht wurde, installierte Jyrki Kuoppala sofort einen anderen Server.Das war das erste "IRC-Netzwerk". Oikarinen erhielt einige Freunde an der Universität Helsinki und der Universität Tampere, um IRC-Server zu betreiben, wenn seine Anzahl von Benutzern stieg und andere Universitäten bald folgten. Zu dieser Zeit erkannte Oikarinen, dass der Rest der BBS-Funktionen wahrscheinlich nicht in sein Programm passen würde. Oikarinen hat mit Menschen an der Universität von Denver und Oregon State University Kontakt aufgenommen. Sie hatten ein eigenes IRC-Netzwerk und wollten sich mit dem finnischen Netzwerk verbinden. Sie hatten das Programm von einem der Freunde von Oikarinen erhalten, Vijay Subramaniam - die erste nicht-Finnische Person IRC zu verwenden. IRC wuchs dann größer und wurde auf dem gesamten finnischen nationalen Netz genutzt — Spaß – und dann verbunden mit Nordunet, der skandinavischen Zweig des Internets. Im November 1988 hatte sich das IRC über das Internet verbreitet und Mitte 1989 gab es weltweit rund 40 Server. EFnetIm August 1990 fand die erste große Meinungsverschiedenheit in der IRC-Welt statt. Das A-net (Anarchy net) beinhaltete einen Server namens eris.berkeley.edu. Es war alles offen, erforderte keine Passwörter und hatte keine Begrenzung auf die Anzahl der Verbindungen. Wie Greg-Wumpus Lindahl erklärt: "Es hatte eine Wildcard-Server-Linie, so dass die Leute an Servern und Nick-Colliding alle angeschlossen waren". Das "Eris Free Network", EFnet, machte die eris Maschine zum ersten Q-lined (Q für Quarantäne) von IRC. In wumpus' Worten wieder: "Eris weigerte sich, diese Zeile zu entfernen, also formte ich EFnet. Es war nicht viel von einem Kampf; ich habe alle Hubs zum Mitmachen, und fast alle anderen wurden mitgenommen." A-net wurde mit den Eris-Servern gebildet, während EFnet mit den Nicht-Eris-Servern gebildet wurde. Die Geschichte zeigte, dass die meisten Server und Benutzer mit EFnet gingen. Einmal entbunden A-net, wurde der Name EFnet bedeutungslos, und wieder war es das ein und einzige IRC-Netzwerk. Um diese Zeit wurde die IRC verwendet, um über den Versuch des sowjetischen Staatsstreichs von 1991 in einem Medienausbruch zu berichten. Es wurde zuvor in ähnlicher Weise während des Golfkriegs verwendet. Chat-Protokolle dieser und anderer Ereignisse werden im ibiblio-Archiv aufbewahrt. Undernet Gabel Eine weitere Gabelanstrengung, die erste, die wirklich einen großen und dauerhaften Unterschied machte, wurde von Wildthang in den USA Oktober 1992 initiiert (es hat die EFnet ircd Version 2.8.10 abgekürzt). Es sollte nur ein Testnetzwerk sein, um Bots zu entwickeln, aber es wuchs schnell zu einem Netzwerk "für Freunde und ihre Freunde". In Europa und Kanada wurde ein separates neues Netzwerk an und im Dezember die französischen Server, die mit den kanadischen verbunden sind, und am Ende des Monats wurde das französische und kanadische Netzwerk mit den USA verbunden, das später als "The Undernet" bezeichnet wurde. Die Unernetter wollten weiter in einem Versuch, es weniger Bandbreite konsumptiv zu machen und zu versuchen, das Channel-Chaos (Netze und Übernahmen) zu sortieren, unter dem EFnet zu leiden begann. Zu letzterem Zweck implementierte das Undernet Zeitstempel, neue Routing und bot den CService an – ein Programm, das es Benutzern erlaubte, Kanäle zu registrieren und dann versuchte, sie vor Fehlern zu schützen. Die erste Serverliste, die vom 15. Februar 1993 präsentiert wurde, umfasst Server aus USA, Kanada, Frankreich, Kroatien und Japan. Am 15. August wurde der neue Benutzerzähler auf 57 Benutzer eingestellt. Im Mai 1993 wurde RFC 1459 veröffentlicht und detailliert ein einfaches Protokoll für Client/Server-Betrieb, Kanäle, ein-zu-ein- und ein-zu-viele Gespräche. Es ist bemerkenswert, dass eine signifikante Anzahl von Erweiterungen wie CTCP, Farben und Formate nicht in den Protokollspezifikationen enthalten sind, noch ist die Zeichencodierung, die verschiedene Implementierungen von Servern und Clients zu divergieren führte. In der Tat variierte die Software-Implementierung deutlich von einem Netzwerk zum anderen, jedes Netzwerk, das eigene Richtlinien und Standards in seinen eigenen Code-Basen implementiert. DALnet Gabel Während des Sommers 1994 war das Undernet selbst gegabelt. Das neue Netzwerk wurde als DALnet (nach seinem Gründer benannt: dalvenjah) für besseren Benutzerdienst und mehr Benutzer- und Kanalschutz gebildet. Eines der signifikanteren Veränderungen in DALnet war die Verwendung längerer Spitznamen (die ursprüngliche ircd Grenze beträgt 9 Buchstaben). DALnet ircd Modifikationen wurden von Alexei Lefler Kosut gemacht. DALnet basierte somit auf dem Undernet ircd Server, obwohl die DALnet-Pioniere EFnet-Abbrecher waren. Laut James Ng waren die ersten DALnet-Leute "ops in #StarTrek krank aus den konstanten Spalten/Lagen/Übernahmen/etc". DALnet bietet schnell globale WallOps (IRCop-Nachrichten, die von Benutzern, die +w (/Mode NickName +w,) längere Spitznamen, Q:Lined Spitznamen (Nickelnamen, die nicht verwendet werden können, z.B. ChanServ, IRCop, NickServ, etc.), Global K:Lines (Bann einer Person oder einer gesamten Domain von einem Server oder dem einzigen Netzwerk, IRC ein)Ein Großteil der neuen Funktionen von DALnet wurde Anfang 1995 von Brian Morpher Smith geschrieben und es den Benutzern ermöglichen, Spitznamen, Kontrollkanäle zu besitzen, Memos zu senden und mehr. IRCnet Gabel Im Juli 1996, nach Monaten der Flammenkriege und Diskussionen über die Mailingliste, gab es noch eine weitere Spaltung aufgrund von Meinungsverschiedenheiten, wie sich die Entwicklung des Zaubers entwickeln sollte. Vor allem die europäische (die meisten dieser Server waren in Europa) Seite, die sich später IRCnet nannte für Nick- und Kanalverzögerungen, während die EFnet-Seite für Zeitstempel argumentierte. Es gab auch Meinungsverschiedenheiten über die Politik: Die europäische Seite hatte begonnen, eine Reihe von Regeln festzulegen, die das, was IRCops könnte und konnte nicht tun, einen von der US-Seite entgegengesetzten Standpunkt. Die meisten (nicht alle) der IRCnet-Server waren in Europa, während die meisten EFnet-Server in den USA waren. Diese Veranstaltung wird auch als "The Great Split" in vielen IRC Gesellschaften bekannt. EFnet ist seitdem (Stand August 1998) gewachsen und hat die Anzahl der Nutzer, die sie damals hatte, bestanden. Im (nördlichen) Herbst des Jahres 2000 hatte EFnet rund 50.000 Nutzer und IRCnet 70.000 Nutzer. Die moderne IRC IRC hat sich im Internet viel verändert. Neue Server-Software hat eine Vielzahl neuer Funktionen hinzugefügt. Dienstleistungen: Netzwerkbetriebene Bots, um die Registrierung von Spitznamen und Kanälen zu erleichtern, Nachrichten für Offline-Benutzer und Netzwerkbetreiberfunktionen zu senden. Extra-Modi: Während das ursprüngliche IRC-System eine Reihe von Standard-Benutzer- und Kanal-Modi verwendet, neue Server fügen viele neue Modi für Funktionen wie Entfernen von Farbcodes aus Text, oder obscuring ein Benutzer Hostmask (Cloaking) zum Schutz vor Denial-of-Service-Angriffen. Proxy-Erkennung: Die meisten modernen Server unterstützen die Erkennung von Benutzern, die versuchen, über einen unsicheren (unkonfigurierten oder ausgenutzten) Proxyserver zu verbinden, der dann einer Verbindung verweigert werden kann. Diese Proxy-Detektionssoftware wird von mehreren Netzwerken verwendet, obwohl diese Echtzeit-Liste von Proxies seit Anfang 2006 defunct ist. Zusätzliche Befehle: Neue Befehle können solche Dinge sein, wie Kurzbefehle, um Befehle an Dienste auszugeben, nur Befehle des Netzwerkbetreibers, um die Hostmask eines Benutzers zu manipulieren. Verschlüsselung: Für das Client-to-Server-Leder der Verbindung kann TLS verwendet werden (Nachrichten sind nicht sicher, sobald sie an andere Benutzer auf Standardverbindungen weitergeleitet werden, aber es macht das Eavesdropping auf oder das Verdrahten einer individuellen IRC-Sitzungen schwierig). Für die Client-zu-Client-Kommunikation kann SDCC (Secure DCC) verwendet werden. Anschlussprotokoll:IRC kann über IPv4, die alte Version des Internet-Protokolls oder durch IPv6, den aktuellen Standard des Protokolls angeschlossen werden. Seit 2016 ist ein neuer Standardisierungsaufwand unter einer Arbeitsgruppe namens IRCv3 im Gange, die sich auf fortgeschrittene Client-Funktionen wie Instant-Benachrichtigungen, bessere Geschichtsunterstützung und verbesserte Sicherheit konzentriert. Seit 2019 haben keine großen IRC-Netzwerke den vorgeschlagenen Standard vollständig angenommen. Nach seiner goldenen Ära in den 1990er und Anfang 2000er Jahren (240.000 Nutzer auf QuakeNet im Jahr 2004) hat IRC einen deutlichen Rückgang erlebt, der zwischen 2003 und 2012 rund 60% der Nutzer verloren hat, wobei sich Nutzer auf neuere Social Media-Plattformen wie Facebook oder Twitter bewegten, aber auch auf offene Plattformen wie XMPP, die 1999 entwickelt wurde. Bestimmte Netzwerke wie Freenode haben den Gesamttrend nicht verfolgt und haben während desselben Zeitraums mehr als vervierfacht. Freenode, der 2016 rund 90.000 Nutzer hatte, hat seitdem auf rund 65.000 Nutzer zurückgegangen. Die größten IRC-Netzwerke wurden traditionell als "Big Four" gruppiert – eine Bezeichnung für Netzwerke, die die Statistiken abdecken. Die Big Four-Netzwerke ändern sich periodisch, aber aufgrund der gemeinschaftlichen Natur der IRC gibt es eine große Anzahl von anderen Netzwerken für Benutzer zu wählen. Historisch waren die "Big Four": EFnet IRCnet Undernet DALnetIRC erreichte im Jahr 2001 6 Millionen gleichzeitige Nutzer und 2003 10 Millionen Nutzer und fiel 2018 auf 371k. Ab Oktober 2018 sind die größten IRC-Netzwerke: freenode – rund 90k-Nutzer bei Spitzenstunden IRCnet – rund 30k-Nutzer bei Spitzenzeiten EFnet – rund 18k-Nutzer bei Spitzenstunden Undernet – rund 17k-Nutzer bei Spitzenzeiten QuakeNet – rund 15k-Nutzer bei Spitzenzeiten Rizon – rund 14k-Nutzer bei Spitzenzeiten OFTC – rund 13k-Nutzer bei Spitzenstunden DALnet – rund 8k-Nutzern bei Spitzenstunden – rund 8k-Nutzern bei Spitzenstunden Timeline Timeline of main servers: EFnet, 1990, um Undernet, 1992 zu präsentieren DALnet, 1994 freenode, 1995 zu präsentieren IRCnet, 1996, um QuakeNet, 1997 präsentieren Open and Free Technology Community, 2001 Rizon, 2002 zu präsentieren Libera Chat, 2021 technische InformationenIRC ist ein offenes Protokoll, das TCP und optional TLS verwendet. Ein IRC-Server kann sich mit anderen IRC-Servern verbinden, um das IRC-Netzwerk zu erweitern. Benutzer greifen auf IRC-Netzwerke zu, indem ein Client an einen Server angeschlossen wird. Es gibt viele Client-Implementierungen, wie mIRC, HexChat und irssi, und Server-Implementierungen, z.B. das original IRCd. Die meisten IRC-Server benötigen keine Benutzer, um ein Konto zu registrieren, aber ein Spitz ist erforderlich, bevor Sie verbunden werden. IRC war ursprünglich ein einfaches Textprotokoll (obwohl später erweitert wurde), das auf Anfrage Port 194/TCP von IANA zugewiesen wurde. Der de facto-Standard war jedoch immer, IRC auf 6667/TCP und nahe gelegene Portnummern (z.B. TCP-Ports 6660–6669, 7000) zu betreiben, um zu vermeiden, dass die IRCd-Software mit Root-Privilegien betrieben werden muss. Das Protokoll spezifizierte, dass Zeichen 8-Bit waren, aber nicht das Zeichen, das den Text kodiert, sollte verwendet werden. Dies kann Probleme verursachen, wenn Benutzer unterschiedliche Clients und/oder unterschiedliche Plattformen umkehren wollen. Alle heute verwendeten Client-to-Server-IRC-Protokolle werden aus dem in der irc2.4.0-Version des IRC2-Servers implementierten Protokoll abgeleitet und in RFC 1459 dokumentiert. Seit RFC 1459 wurde veröffentlicht, die neuen Features in der irc2.10-Implementierung führten zur Veröffentlichung mehrerer überarbeiteter Protokolldokumente (RFC 2810, RFC 2811, RFC 2812 und RFC 2813;) jedoch wurden diese Protokolländerungen unter anderem nicht weit angenommen. Obwohl viele Spezifikationen zum IRC-Protokoll veröffentlicht wurden, gibt es keine offizielle Spezifikation, da das Protokoll dynamisch bleibt. Fast keine Clients und sehr wenige Server verlassen sich streng auf die oben genannten RFCs als Referenz. Microsoft machte 1998 eine Erweiterung für IRC über den proprietären IRCX. Später hörten sie auf, Software zu verbreiten, die IRCX unterstützte, statt das proprietäre MSNP zu entwickeln. Die Standardstruktur eines Netzwerks von IRC-Servern ist ein Baum. Nachrichten werden entlang nur notwendiger Zweige des Baumes geroutet, aber Netzwerkzustand wird an jeden Server gesendet und es gibt im Allgemeinen ein hohes Maß an implizitem Vertrauen zwischen Servern. Diese Architektur hat jedoch eine Reihe von Problemen. Ein fehlerhafter oder schädlicher Server kann große Schäden an dem Netzwerk und Änderungen der Struktur verursachen, ob absichtlich oder ein Ergebnis von Bedingungen auf dem zugrunde liegenden Netzwerk, erfordern ein Netz-Split und Netz-Join. Dies führt zu einer Vielzahl von Netzwerk-Verkehrs- und Störmeldungen an Benutzer und vorübergehenden Verlust der Kommunikation an Benutzer auf den Splitting-Servern. Das Hinzufügen eines Servers zu einem großen Netzwerk bedeutet eine große Hintergrundbandbreitenlast auf dem Netzwerk und eine große Speicherlast auf dem Server. Sobald jedoch festgestellt wird, wird jede Nachricht an mehrere Empfänger in einer Weise geliefert, die dem Multicast ähnlich ist, d.h. jede Nachricht fährt genau einmal eine Netzwerkverbindung. Dies ist eine Stärke im Vergleich zu Nicht-Multicast-Protokollen wie Simple Mail Transfer Protocol (SMTP) oder Extensible Messaging and Presence Protocol (XMPP). Ein IRC-Daemon kann auch auf einem lokalen Netzwerk (LAN) verwendet werden. Das IRC kann so genutzt werden, um die Kommunikation zwischen Menschen innerhalb des lokalen Netzwerks (interne Kommunikation) zu erleichtern. Befehle und Antworten IRC hat eine zeilenbasierte Struktur. Clients senden Single-Line-Nachrichten an den Server, erhalten Antworten auf diese Nachrichten und erhalten Kopien einiger Nachrichten, die von anderen Clients gesendet werden. In den meisten Clients können Benutzer Befehle eingeben, indem sie mit einem '/. Je nach Befehl können diese entweder vollständig vom Client bearbeitet werden oder (im Allgemeinen für Befehle erkennt der Client nicht) direkt an den Server übergeben werden, möglicherweise mit einer Modifikation. Aufgrund der Art des Protokolls können automatisierte Systeme nicht immer korrekt einen gesendeten Befehl mit seiner Antwort mit voller Zuverlässigkeit koppeln und erraten. Kanäle Das grundlegende Mittel zur Kommunikation an eine Gruppe von Benutzern in einer etablierten IRC-Sitzung ist über einen Kanal. Kanäle auf einem Netzwerk können über den IRC-Befehl LIST angezeigt werden, der alle derzeit verfügbaren Kanäle auflistet, die nicht die Modi +s oder +p-Set auf diesem bestimmten Netzwerk haben. Benutzer können einen Kanal mit dem JOIN-Befehl, in den meisten Clients als /join#channelname. An die angeschlossenen Kanäle gesendete Nachrichten werden dann an alle anderen Benutzer weitergeleitet. Kanäle, die über ein gesamtes IRC-Netzwerk verfügbar sind, werden mit einem '#' präfixiert, während diejenigen, die auf einem Server verwenden '.&Andere weniger häufige Kanaltypen umfassen '+'-Kanäle - 'modeless-Kanäle ohne Betreiber - und '!-Kanäle, eine Form von zeitgenamped-Kanal auf normalerweise nicht-timestamped-Netzwerke. Moden Benutzer und Kanäle können Modi haben, die durch Einzelfall-sensitive Buchstaben repräsentiert werden und mit dem MODE Befehl eingestellt werden.Benutzermodi und Kanalmodi sind getrennt und können den gleichen Buchstaben verwenden, um verschiedene Dinge zu bedeuten (z.B. Benutzermodi i ist unsichtbarer Modus, während Kanalmodi i ist nur einladen.) Moden werden in der Regel mit dem Modus-Befehl, der ein Ziel (Benutzer oder Kanal,) eine Reihe von Modi zu setzen (+) oder unset (-) und alle Parameter, die die Modi benötigen eingestellt und deaktiviert. Einige Channel-Modi nehmen Parameter und andere Channel-Modi gelten für einen Benutzer auf einem Kanal oder hinzufügen oder entfernen Sie eine Maske (z.B. eine Ban-Maske) aus einer Liste, die dem Kanal zugeordnet ist, anstatt auf den Kanal als Ganzes. Moden, die auf Benutzern auf einem Kanal gelten, haben ein zugehöriges Symbol, das verwendet wird, um den Modus in Namensantworten darzustellen (von Clients, die zuerst einen Kanal verbinden und den Namensbefehl verwenden), und in vielen Clients auch verwendet, um ihn in der angezeigten Liste der Benutzer in einem Kanal darzustellen oder eine eigene Anzeige für die Modi eines Benutzers anzuzeigen. Um eingehende Modennachrichten und Track Channel-Zustand korrekt zu kompensieren, muss der Client wissen, welcher Modus welcher Art ist und für die Modi, die für einen Benutzer auf einem Kanal gelten, welches Symbol mit welchem Buchstaben geht. In frühen Implementierungen der IRC musste dies im Client schwer codiert werden, aber es gibt jetzt eine de facto Standarderweiterung zu dem Protokoll namens ISUPPORT, das diese Informationen an den Client zu verbinden Zeit mit numerischen 005 sendet. Es gibt einen kleinen Konstruktionsfehler in IRC in Bezug auf Modi, die für Benutzer auf Kanälen gelten: Die Namensnachricht, die zur Ermittlung des initialen Kanalzustands verwendet wird, kann nur einen solchen Modus pro Benutzer auf dem Kanal senden, aber mehrere solcher Modi können auf einem einzigen Benutzer eingestellt werden. Wenn z.B. ein Benutzer sowohl den Status des Bedieners (+o) als auch den Sprachstatus (+v) auf einem Kanal hält, kann ein neuer Client den Modus mit weniger Priorität (d.h. Stimme) nicht sehen. Workarounds hierfür sind sowohl auf der Client- als auch auf der Serverseite möglich, aber keine sind weit verbreitet. Standard (RFC 1459) Modi Viele Daemons und Netzwerke haben zusätzliche Modi hinzugefügt oder das Verhalten von Modi in der obigen Liste geändert. Kanalbetreiber Ein Kanalbetreiber ist ein Client auf einem IRC-Kanal, der den Kanal verwaltet. IRC-Kanal-Operatoren können leicht durch ein Symbol oder Icon neben ihrem Namen gesehen werden (Varianten durch Client-Implementierung, häufig ein "@"-Symbol-Präfix, einen grünen Kreis oder einen lateinischen Buchstaben +o"/"o").An den meisten Netzwerken kann ein Operator: Kick a user Ban a user Geben Sie einen anderen Benutzer IRC-Kanal-Operator-Status oder IRC-Kanal-Sprachstatus. Ändern Sie das IRC Channel-Thema, während der Kanalmodus +t eingestellt ist. Ändern Sie die IRC Channel Mode Schlösser. IRC-Betreiber Es gibt auch Benutzer, die erhöhte Rechte auf ihrem lokalen Server, oder das gesamte Netzwerk pflegen; diese werden IRC-Operatoren genannt, manchmal verkürzt IRCops oder Opern (nicht zu verwechseln mit Kanalbetreibern). Da die Umsetzung des IRCd variiert, tun die Privilegien des IRC-Betreibers auf dem gegebenen IRCd. RFC 1459 behauptet, dass IRC-Operatoren "ein notwendiges Übel" sind, um einen sauberen Zustand des Netzes zu halten, und als solche müssen sie in der Lage sein, Server zu trennen und wieder zu verbinden. Um schädliche Benutzer oder sogar schädliche automatisierte Programme zu verhindern, können IRC-Operatoren in der Regel Clients trennen und IP-Adressen oder vollständige Subnetze vollständig verbieten. Netzwerke, die Dienstleistungen (NickServ et al.) in der Regel erlauben, dass ihre IRC-Operatoren auch grundlegende Eigentumsfragen behandeln. Weitere privilegierte Rechte können übergeordnete Kanalverbote beinhalten (in der Lage sein, Kanäle zu verbinden, würden sie nicht beitreten dürfen, wenn sie nicht betrieben würden), in der Lage, sich auf Kanälen zu opfern, wo sie nicht in der Lage wären, ohne zu operieren, auf Kanälen immer und so weiter automatisch gehackt zu werden. Hostmasks Eine Hostmask ist eine eindeutige Kennung eines IRC-Clients, der mit einem IRC-Server verbunden ist. IRC-Server, Dienste und andere Clients, einschließlich Bots, können es verwenden, um eine bestimmte IRC-Sitzung zu identifizieren. Das Format einer Wirtsmaske ist Nick! Benutzer@host. Die Hostmask sieht ähnlich aus, sollte aber nicht mit einer E-Mail-Adresse verwechselt werden. Der Spitzteil ist der vom Benutzer gewählte Spitzname und kann während der Verbindung geändert werden. Der Benutzerteil ist der Benutzername, der von ident auf dem Client angezeigt wird. Ist auf dem Client keine Identität vorhanden, so wird der Benutzername angegeben, wenn der angeschlossene Client verwendet wird, nachdem er mit einer Tilde fixiert wurde. Der Hostteil ist der Hostname, von dem der Client ausgeht. Wenn die IP-Adresse des Clients nicht auf einen gültigen Hostnamen des Servers aufgelöst werden kann, wird diese anstelle des Hostnamens verwendet. Einige IRC-Daemons bieten aufgrund der Privatsphäre Auswirkungen der IP-Adresse oder des Hostnamens eines Clients auch Privatsphäresmerkmale wie InspIRCd oder UnrealIRCds +x-Modus.Dies hat eine Client-IP-Adresse oder maskiert einen Teil des Hostnamens eines Clients, so dass es nicht lesbar für andere Benutzer als IRCops. Benutzer können auch die Möglichkeit haben, einen "virtuellen Host" (oder Vhost) in der Hostmask anzuzeigen, um weitere Anonymität zu ermöglichen. Einige IRC-Netzwerke wie Freenode verwenden diese als Cloaks, um anzuzeigen, dass ein Benutzer mit einer Gruppe oder einem Projekt verbunden ist. URI-System Es gibt drei anerkannte einheitliche Ressourcenkennung (URI) Systeme für Internet RelayChat: irc, ircs, und irc6. Wenn sie unterstützt werden, ermöglichen sie Hyperlinks verschiedener Formulare, einschließlich irc://<host>[:<port>]/[<channel>[?<channel_keyword ircs://<host>[:<port>]/[<channel>[?<channel_keyword irc6://<host>]/[<channel>name]/[>channel>name]/keyword (sofern innerhalb von Klammern eingeschlossene Elemente verwendet werden) ( Dies kann im Client selbst oder aus einer anderen Anwendung wie einem Webbrowser verwendet werden.) irc ist die Standard-URI, irc6 gibt eine Verbindung, die mit IPv6 hergestellt werden soll, und ircs gibt eine sichere Verbindung an. Nach der Spezifikation wird das übliche Hash-Symbol (#) auf Kanalnamen, die mit einem alphanumerischen Zeichen beginnen, vorausgesetzt, dass es weggelassen werden soll. Einige Implementierungen (z.B. mIRC) werden dies bedingungslos zu einem (meist unbeabsichtigten) Extra (z.B. #channel) führen, wenn in der URL enthalten. Einige Implementierungen ermöglichen es, mehrere Kanäle zu definieren, getrennt durch Kommas. Herausforderungen im ursprünglichen Design des IRC waren die Menge der gemeinsamen Zustandsdaten, die eine Einschränkung auf seine Skalierbarkeit, das Fehlen von eindeutigen Benutzeridentifikationen, die zum Spitzname-Crash-Problem führen, mangelnder Schutz vor Netsplits durch zyklische Routing, das Abhandeln in Skalierbarkeit für die Echtzeit-Benutzer-Präsenzinformationen, Protokollschwächen bieten eine Plattform für Missbrauch, keine transparente und optimisierbare Nachrichtenübergabe und keine Verschlüsselung. Einige dieser Themen wurden in der modernen IRC behandelt. Angriffe Da IRC-Verbindungen unverschlüsselt sein können und typischerweise lange Zeiträume überspannen, sind sie ein attraktives Ziel für DoS/DDoS Angreifer und Hacker. Deshalb ist eine sorgfältige Sicherheitspolitik erforderlich, um sicherzustellen, dass ein IRC-Netzwerk für einen Angriff wie einen Übernahmekrieg nicht anfällig ist. IRC-Netzwerke können auch K-line- oder G-line-Benutzer oder Server, die einen schädlichen Effekt haben. Einige IRC-Server unterstützen SSL/TLS-Verbindungen für Sicherheitszwecke. Dies hilft, die Verwendung von Paket-Sniffer-Programmen zu stoppen, um die Passwörter von IRC-Nutzern zu erhalten, aber hat wenig Nutzung über diesen Bereich aufgrund der öffentlichen Natur der IRC-Kanäle. SSL-Verbindungen erfordern sowohl Client- als auch Server-Unterstützung (die den Benutzer auffordern kann, SSL-Binder und IRC-Client-spezifische Patchs oder Module auf ihren Computern zu installieren). Einige Netzwerke nutzen auch SSL für Server-zu-Server-Verbindungen und bieten eine spezielle Channel-Flag (wie +S), um nur SSL-verknüpfte Benutzer auf dem Kanal zu ermöglichen, während die Benutzeridentifizierung im Klartext deaktiviert wird, um die Vorteile, die SSL bietet besser zu nutzen. IRC diente als frühes Labor für viele Arten von Internet-Angriffen, wie die Verwendung gefälschter ICMP unreachable Nachrichten, um TCP-basierte IRC-Verbindungen (nuking) zu ärgerlichen Benutzern zu brechen oder Übernahmen zu erleichtern. Missbrauchsprävention Eines der begehrtesten technischen Fragen rund um IRC-Implementierungen, die bis heute überlebt, ist der Verdienst von "Nick/Channel Delay" gegen Timestamp-Protokolle. Beide Methoden existieren, um das Problem der Denial-of-Service-Angriffe zu lösen, aber nehmen sehr unterschiedliche Ansätze. Das Problem mit dem ursprünglichen IRC-Protokoll wie implementiert war, dass, wenn zwei Server aufgeteilt und wieder zusammengefügt werden, die beiden Seiten des Netzwerks einfach ihre Kanäle zusammenführen würden. Wenn sich ein Benutzer auf einem Split-Server anschließen könnte, wo ein Kanal, der auf der anderen Seite des Netzes existierte, leer war, und den Operatorstatus zu gewinnen, würden sie ein Channel-Operator des kombinierten Kanals werden, nachdem der netsplit beendet war; wenn ein Benutzer einen Spitznamen nahm, der auf der anderen Seite des Netzes existierte, würde der Server beide Benutzer beim Wiederholen töten (d.h. Nick-Colision). Dies wurde oft missbraucht, um alle Benutzer auf einem Kanal zu massieren und so opless Kanäle zu schaffen, wo keine Betreiber anwesend waren, um mit Missbrauch umzugehen. Abgesehen von Problemen innerhalb des IRC ermutigte dies die Menschen dazu, gegen IRC-Server den Missbrauch von Service-Angriffen durchzuführen, um Netzsplits zu verursachen, die sie dann missbrauchen würden. Die Nick-Delay- (ND)- und Channel-Delay- (CD)-Strategien zielen darauf ab, Missbrauch durch Verzögerung von Umschaltungen und Umbenennungen zu verhindern.Nachdem ein Benutzer abschaltet und der Spitzname zur Verfügung steht, oder ein Kanal nicht mehr existiert, weil alle seine Benutzer (wie oft während einer netsplit,) der Server nicht zulassen, dass jeder Benutzer diesen Spitznamen verwenden oder diesen Kanal verbinden, bis eine bestimmte Zeit (die Verzögerung) vergangen ist. Die Idee dahinter ist, dass selbst wenn ein Netsplit auftritt, es für einen Missbraucher nutzlos ist, weil sie nicht den Spitznamen oder den Status eines Bedieners auf einem Kanal einnehmen können und somit keine Kollision eines Spitznamens oder Verschmelzung eines Kanals auftreten kann. In gewissem Maße, diese unangemessenen legitimen Benutzer, die gezwungen sein, kurz einen anderen Namen nach dem Wiederholen zu verwenden (Anwenden einer Unterscore ist beliebt). Das Zeitstempelprotokoll ist eine Alternative zu Nick/Kanal-Verzögerungen, die Kollisionen mit zeitgedämpfter Priorität auflöst. Jeder Spitzname und Kanal im Netzwerk wird ein Zeitstempel zugewiesen – das Datum und die Uhrzeit, als es erstellt wurde. Wenn ein netsplit auftritt, sind zwei Benutzer auf jeder Seite frei, den gleichen Spitznamen oder Kanal zu verwenden, aber wenn die beiden Seiten verbunden sind, kann nur einer überleben. Bei Spitznamen wird der neuere Benutzer nach seinem TS getötet; wenn ein Kanal kollidiert, werden die Mitglieder (Benutzer auf dem Kanal) zusammengeführt, aber die Kanalbetreiber auf der verlorenen Seite der Spaltung verlieren ihren Channel-Operationsstatus. TS ist ein viel komplizierteres Protokoll als ND/CD, sowohl in der Konstruktion als auch in der Implementierung, und trotz einiger Revisionen haben einige Implementierungen noch Probleme mit Desyncs (wo zwei Server im gleichen Netzwerk nicht über den aktuellen Zustand des Netzes unterscheiden), und zu viel Spielraum in dem, was durch die Verlustseite erlaubt war. Unter den ursprünglichen TS-Protokollen gab es z.B. keinen Schutz gegen die Einstellung von Verboten oder anderen Modi im Verlierkanal, der dann zusammengeführt werden würde, wenn die Spaltung wieder aufgenommen würde, obwohl die Benutzer, die diese Modi eingestellt hatten, ihren Channel-Operationsstatus verloren. Einige moderne TS-basierte IRC-Server haben auch einige Form von ND und/oder CD zusätzlich zur Zeitstempelung in einen Versuch, Missbrauch weiter zu drosseln. Die meisten Netzwerke nutzen heute den Zeitstempelansatz. Der Timestamp gegen ND/CD Unstimmigkeiten verursachte mehrere Server, um sich von EFnet zu trennen und das neuere IRCnet zu bilden. Nach der Spaltung bewegte sich EFnet in ein TS-Protokoll, während IRCnet ND/CD verwendet. In den letzten Versionen des IRCnet ircd sowie ircds mit dem TS6-Protokoll (einschließlich Charybdis) wurde ND durch einen Mechanismus mit dem Namen SAVE erweitert/ersetzt. Dieser Mechanismus ordnet jedem Client eine UID bei der Verbindung mit einem IRC-Server zu. Diese ID beginnt mit einer Nummer, die in Spitzen verboten ist (obwohl einige Ircds, nämlich IRCnet und InspIRCd, erlauben Kunden, auf ihre eigene UID als Spitzname umzuschalten). Wenn zwei Clients mit dem gleichen Spitznamen von verschiedenen Seiten eines Netsplit ("Nick Kollision") kommen, wird der erste Server, um diese Kollision zu sehen, beide Clients dazu zwingen, ihren Spitz an ihre UID zu ändern, so dass beide Clients nicht getrennt werden. Auf IRCnet wird der Spitzname auch für einige Zeit (ND) gesperrt werden, um zu verhindern, dass sich beide Kunden wieder auf den ursprünglichen Spitznamen wechseln und somit wieder kollidieren. Client-Software Client-Software Client-Software existiert für verschiedene Betriebssysteme oder Software-Pakete, sowie web-basierte oder interne Spiele. Für die verschiedenen Betriebssysteme stehen viele verschiedene Clients zur Verfügung, darunter Windows, Unix und Linux, macOS und mobile Betriebssysteme (wie iOS und Android). Unter Windows ist mIRC eine der beliebtesten Clients. Einige Programme, die durch Plug-Ins erweiterbar sind, dienen auch als Plattformen für IRC-Clients. Zum Beispiel ist ein Client namens ERC, geschrieben vollständig in Emacs Lisp, in v.22.3 von Emacs enthalten. Daher kann jede Plattform, die Emacs ausführen kann ERC.Eine Anzahl von Web-Browsern haben eingebaute IRC-Clients, wie Opera (Version 12.18 und früher) und das ChatZilla Add-on für Mozilla Firefox (für Firefox 56 und früher; als eingebaute Komponente von SeaMonkey enthalten). Webbasierte Clients wie Mibbit und Open Source KiwiIRC können in den meisten Browsern ausgeführt werden. Spiele wie War§ow, Unreal Tournament (bis Unreal Tournament 2004), Uplink, Spring Engine-basierte Spiele, 0 A.D und ZDaemon haben IRC enthalten. Ustreams Chat-Schnittstelle ist IRC mit benutzerdefinierter Authentifizierung sowie Twitch's (früher Justin.tv) BotsA typische Verwendung von Bots in IRC ist es, IRC-Dienste oder spezifische Funktionalität innerhalb eines Kanals zu bieten, wie ein Chat-basiertes Spiel zu hosten oder Benachrichtigungen über externe Ereignisse. Einige IRC-Bots werden jedoch verwendet, um schädliche Angriffe wie die Denial of Service, Spamming oder Ausbeutung zu starten.Bouncer Ein Programm, das als Daemon auf einem Server läuft und als persistenter Proxy fungiert, ist als BNC oder Bouncer bekannt. Ziel ist es, eine Verbindung zu einem IRC-Server zu pflegen, der als Relais zwischen Server und Client fungiert oder einfach als Proxy fungiert. Sollte der Client Netzwerk-Konnektivität verlieren, kann die BNC den gesamten Datenverkehr für eine spätere Lieferung speichern und dem Benutzer die IRC-Session wieder aufnehmen, ohne die Verbindung zum Server zu stören. Darüber hinaus kann ein IRC-Client (typischerweise textbasiert, z.B. Irssi) als Möglichkeit zur Erzielung eines bouncerartigen Effekts auf einem immer aufbereiteten Server ausgeführt werden, an den der Benutzer über ssh anschließt. Dies ermöglicht auch Geräte, die nur Ssh-Funktionalität haben, aber kein tatsächlicher IRC-Client installiert sich, um mit dem IRC zu verbinden, und es ermöglicht den Austausch von IRC-Sitzungen. Um den IRC-Client beim Schließen der ssh-Verbindung zu beenden, kann der Client innerhalb eines Terminal-Multiplexers, wie GNU Screen oder tmux, laufend mit dem IRC-Netzwerk(s) verbunden bleiben und in Kanälen, an denen der Benutzer interessiert ist, ein Gespräch protokollieren oder die Präsenz eines Kanals im Netzwerk aufrecht erhalten. Nach diesem Setup wurde 2004 ein IRC-Client nach dem Client-Server, genannt Smuxi, gestartet. Suchmaschinen Es gibt zahlreiche Suchmaschinen zur Verfügung, um dem Benutzer zu helfen, zu finden, was sie auf IRC suchen. Die Suchmaschine besteht in der Regel aus zwei Teilen, einem Back-End (oder Spinne/Crawler) und einem Frontend "Suchmaschine". Das Backend (Spider/Webcrawler) ist das Arbeitspferd der Suchmaschine. Es ist dafür verantwortlich, IRC-Server zu kriechen, um die über sie gesendeten Informationen anzuzeigen. Die indizierten Informationen bestehen in der Regel ausschließlich aus Kanaltext (Text, der öffentlich in öffentlichen Kanälen angezeigt wird). Die Speichermethode ist in der Regel eine Art relationale Datenbank, wie MySQL oder Oracle. Das Frontend "search engine" ist die Benutzeroberfläche zur Datenbank. Es liefert Benutzer mit einer Möglichkeit, die Datenbank der indexierten Informationen zu suchen, um die Daten, die sie suchen. Diese Frontend-Suchmaschinen können auch in zahlreichen Programmiersprachen codiert werden. Die meisten Suchmaschinen haben eine eigene Spinne, die eine einzige Anwendung ist, die für die Crawling IRC und Indexing-Daten selbst verantwortlich ist; andere sind jedoch "Benutzerbasierte" Indexer. Letztere verlassen sich auf Benutzer, um ihr Add-on zu ihrem IRC-Client zu installieren; das Add-on ist, was sendet die Datenbank die Kanalinformationen von allen Kanälen, auf denen der Benutzer zufällig ist. Viele Benutzer haben ihre eigenen Ad-hoc-Suchmaschinen mit den Protokollierungsfunktionen implementiert, die in viele IRC-Clients eingebaut wurden. Diese Suchmaschinen werden in der Regel als Bots implementiert und einem bestimmten Kanal oder einer Gruppe von zugehörigen Kanälen gewidmet. Charaktercodierung IRC fehlt noch an einer einzigen weltweit anerkannten Standardkonvention, wie Zeichen außerhalb des 7-Bit ASCII Repertoires übertragen werden können. IRC-Server übertragen normalerweise Nachrichten von einem Client auf einen anderen Client genauso wie Byte-Sequenzen, ohne jede Interpretation oder Recodierung von Zeichen. Das IRC-Protokoll (im Gegensatz zu z.B. MIME oder HTTP) fehlt an Mechanismen zur Ankündigung und Verhandlung von Charaktercodierungsoptionen. Dies hat die Verantwortung für die Auswahl der entsprechenden Zeichencodec auf den Client gelegt. In der Praxis haben IRC-Kanäle weitgehend dieselben Zeichencodierungen verwendet, die auch von Betriebssystemen (insbesondere Unix-Derivaten) in den jeweiligen Sprachgemeinschaften verwendet wurden: 7-Bit-Ära: In den frühen Tagen der IRC, insbesondere bei skandinavischen und finnischen Sprachanwendern, waren nationale Varianten der ISO 646 die dominanten Charaktercodierungen. Diese kodieren nicht-ASCII-Zeichen wie Ä Ö Å ä ö å an Codepositionen 0x5B 0x5C 0x5D0x7B 0x7C 0x7D (US-ASCII: [ \ ] { | | }.) Aus diesem Grund sind diese Codes immer in Spitznamen erlaubt. Gemäß RFC 1459 sollte { | } in Spitznamen als Kleinbuchstabenäquivalente von [ \ ] behandelt werden. Bis Ende der 1990er Jahre war die Verwendung von 7-Bit-Kodierungen zugunsten der ISO 8859-1 verschwunden, und solche Gleichwertigkeits-Mappings wurden von einigen IRC-Dämonen abgenommen. 8-Bit-Ära: Seit Anfang der 1990er Jahre werden 8-Bit-Codierungen wie ISO 8859-1 für europäische Sprachen häufig verwendet. Russische Nutzer hatten eine Wahl von KOI8-R, ISO 8859-5 und CP1251, und seit etwa 2000, moderne russische IRC-Netzwerke konvertieren zwischen diesen verschiedenen häufig verwendeten Kodierungen des kyrillischen Skripts. Multi-byte-Ära: Seit langem verwenden ostasiatische IRC-Kanäle mit logografischen Schriften in China, Japan und Korea Multibyte-Encodings wie EUC oder ISO-2022-JP. Mit der gemeinsamen Migration von ISO 8859 auf UTF-8 auf Linux- und Unix-Plattformen seit etwa 2002 ist UTF-8 zu einem zunehmend beliebten Ersatz für viele der bisher verwendeten 8-Bit-Codierungen in europäischen Kanälen geworden.Einige IRC-Clients sind nun in der Lage, Nachrichten sowohl in ISO 8859-1 oder UTF-8 im gleichen Kanal zu lesen, heuristisch autodetecting welche Codierung verwendet wird. Die Umstellung auf UTF-8 begann insbesondere im finnischen IRC (Merkistö (Finnish). Die UTF-8 Kodierung von Unicode/ISO 10646 wäre heute der wahrscheinlichste Kontender für eine einheitliche zukünftige Standard-Zeichencodierung für alle IRC-Kommunikation, wenn diese Norm die 510-Byte-Nachrichtgrößenbeschränkung jemals entspannt. UTF-8 ist ASCII kompatibel und deckt die Überlagerung aller anderen allgemein verwendeten Code-Set-Standards ab. File Sharing Ähnlich wie herkömmliche P2P-Datei Sharing, können Benutzer Dateiserver erstellen, die es ihnen ermöglichen, Dateien miteinander zu teilen, indem sie kundenspezifische IRC-Bots oder Skripte für ihren IRC-Client verwenden. Oft werden die Nutzer sich zusammenschließen, um Warez über ein Netzwerk von IRC-Bots zu verteilen. Technisch bietet IRC keine Dateiübertragungsmechanismen selbst; Dateifreigabe wird von IRC-Clients implementiert, typischerweise unter Verwendung des Direct Client-to-Client (DCC) Protokolls, in dem Dateiübertragungen durch den Austausch von privaten Nachrichten zwischen Clients ausgehandelt werden. Die überwiegende Mehrheit der IRC-Clients unterstützt DCC-Dateiübertragungen, daher ist die Ansicht, dass die Dateifreigabe ein integraler Bestandteil der IRC ist. Die häufige Nutzung dieses Protokolls verursacht jedoch manchmal auch DCC Spam. DCC-Befehle wurden auch verwendet, um gefährdete Clients zu nutzen, um eine Aktion durchzuführen, z.B. Abschaltung vom Server oder Ausstieg aus dem Client. Siehe auch Chatraum Client-zu-Client-Protokoll Vergleich der Instant Messaging-Protokolle Vergleich der IRC-Clients Vergleich der mobilen IRC-Clients Die Hamnet Players Internet slang Liste der IRC Befehle Serving Channel Citations General bibliography Reed, Darren (Mai 1992). Eine Diskussion über Computer Network Conferencing.IETF.doi:10.17487/RFC1324.RFC 1324.Retrieved 30. Oktober 2009. Oikarinen, Jarkko; Reed, Darren (Mai 1993). Internet-Ressourcen Chat Protocol.IETF.doi:10.17487/RFC1459.RFC 1459.Retrieved 30. Oktober 2009. Kalt, Christophe (April 2000). Internet-Ressourcen Chat: Architektur.IETF.doi:10.17487/RFC2810.RFC 2810.Retrieved 30 October 2009. Kalt, Christophe (April 2000). Internet-Ressourcen Chat: Channel Management.IETF.doi:10.17487/RFC2811.RFC 2811.Retrieved 30. Oktober 2009.Loesch, Carl (17. Juli 2003)." Funktion Zur Verfügung gestellt von Systems for Synchronous Conferencing".psyc.eu.Retrieved 10 April 2011. Weitere Lesung Kalt, Christophe (April 2000). Internet-Ressourcen Chat: Client Protocol.IETF.doi:10.17487/RFC2812.RFC 2812.Retrieved 30. Oktober 2009. Kalt, Christophe (April 2000). Internet-Ressourcen Chat: Server Protocol.IETF.doi:10.17487/RFC2813.RFC 2813.Retrieved 30 October 2009. "Logs der großen Ereignisse in der Online-Community". Chapel Hill, North Carolina: ibiblio.Retrieved 8 April 2011. Butcher, Simon. "IRC technischen information".alien.net.au.Retrieved 10 April 2011. Externe Links IRC atCurlie IRC Numerics List History of IRC IRC IRC.org – Technische und historische IRC6 Informationen; Artikel über die Geschichte von IRC IRC IRChelp.org – Internet Relay Chat (IRC) helfen Archiv; Großes Archiv von IRC-bezogenen Dokumenten IRCv3– Arbeitsgruppe von Entwicklern, die dem Protokoll neue Funktionen hinzufügen und ihnen Spezifikationen schreiben IRC-Source – Internet Relay Chat (IRC) Netzwerk- und Kanalsuchmaschine mit historischen Daten irc.netsplit.de – Internet Relay Chat (IRC) Netzwerk Listing mit historischen DatenBalthasar Bekker (20. März 1634 – 11. Juni 1698) war ein niederländischer Minister und Autor von philosophischen und theologischen Arbeiten. Gegenüber der Aberglaube war er eine Schlüsselfigur am Ende der Hexerei Verfolgungen in der frühen modernen Europa. Sein bekanntestes Werk ist De Betoverde Weereld (1691) oder The World Bewitched (1695). Life Bekker wurde in Metslawier (Dongeradeel) als Sohn eines deutschen Pastors aus Bielefeld geboren. Er wurde in Groningen unter Jacob Alting ausgebildet und bei Franeker. Als Rektor der lokalen lateinischen Schule wurde er 1657 als Pastor in Oosterlittens (Littenseradiel) zu seiner Zufriedenheit ernannt und begann als einer der ersten am Sonntagnachmittag zu predigen. Ab 1679 arbeitete er in Amsterdam, nachdem er aus Friesland vertrieben wurde. 1683 reiste er nach England und Frankreich. In zwei Monaten besuchte Bekker London, Cambridge, Oxford, Paris und Leuven, mit einem großen Interesse an der Kunst der Festung. Werke Ein begeisterter Schüler von Descartes, schrieb er mehrere Werke über Philosophie und Theologie, die durch ihre Gedankenfreiheit erhebliche Feindseligkeit erregte. In seinem Buch De Philosophia Cartesiana Bekker argumentierte, dass Theologie und Philosophie jeweils ihr eigenes Terrain hatten und dass die Natur durch die Schrift nicht mehr erklärt werden kann als die theologische Wahrheit von der Natur abgeleitet werden kann.Seine Anwendung der kartesischen Metaphysik und die Verkündigung des biblischen Literalismus stellten ihn im Widerspruch zur niederländischen reformierten Kirche. Sein bekanntestes Werk war De Betoverde Weereld (1691) oder The World Bewitched (1695), in dem er kritisch die Phänomene untersuchte, die in der Regel der spirituellen Agentur zugeschrieben wurden. Er attackierte den Glauben an Zauberei und Besitz durch den Teufel. Tatsächlich befragte er die Existenz des Teufels. Er wendete die Lehre der Unterkunft an, um die biblischen Passagen zu berücksichtigen, die traditionell in der Frage zitiert wurden. Das Buch hatte eine sensationelle Wirkung und war eines der wichtigsten Werke der frühen Aufklärung in Europa. Es war fast sicher die umstrittenste. Die Veröffentlichung des Buches führte zu Bekkers Absetzung vom Ministerium. Der Orthodox unter holländischen Theologen sah seine Ansichten als Platzierung unter den berüchtigten Atheisten: Thomas Hobbes, Adriaan Koerbagh, Lodewijk Meyer und Baruch Spinoza. Eric Walten kam zu seiner Verteidigung und attackierte seine Gegner extrem. Bekker wurde für die Blasphemie versucht, die öffentliche Kirche auszurichten und atheistische Ideen über die Schrift zu verbreiten. Einige Städte verbannten das Buch, aber Amsterdam und die Staaten von Holland nie taten, sein Gehalt fortzusetzen, ohne ihn formell von seinem Posten abzuziehen. Die World Bewitched wird nun als eine frühe Studie in vergleichender Religion angesehen. Späteres Leben Im Juli 1698 wurde er zum Fellow der Royal Society of London gewählt. Er starb in Amsterdam Ausgewählte Publikationen De philosophia Cartesiana admonitio candida & sincera. Bekker, Balth. /Vesaliae / 1668Die Welt behext; oder, Eine Untersuchung der gemeinsamen Meinungen über Geister: ihre Natur, Macht, Verwaltung und Operationen. Wie auch, die Auswirkungen Männer sind in der Lage, durch ihre Kommunikation zu produzieren. Geteilt in IV Teile; Bekker, Balthasar / Übersetzt aus einer französischen Kopie, genehmigt und abonniert von der eigenen Hand des Autors / gedruckt für R. Baldwin in Warwick-lane / 1695 Anmerkungen Referenzen Israel, Jonathan I. (1995,) Die niederländische Republik.Its Rise, Greatness, and Fall, 1477–1806Beitrag Dieser Artikel enthält Text aus einer Publikation jetzt in der öffentlichen Domain: Chisholm, Hugh, ed.(1911,) "Bekker, Balthasar", Encyclopædia Britannica, 3 (11th ed.,) Cambridge University Press, S. 661 Weiter lesen Evenhuis, R. B. (1971), Ook dat war Amsterdam, Deel III. De kerk der hervorming in de tweede helft van de zeventiende eeuw: nabloei en inzinking (auf Niederländisch,) pp.258–305 Externe Links Zehn Portraits von Balthasar Bekker Voltaire, The Works of Voltaire, Vol.III (Philosophical Dictionary Part 1) [1764] Kapitel über Bekker